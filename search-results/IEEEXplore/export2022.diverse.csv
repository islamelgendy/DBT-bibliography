"Document Title",Authors,"Author Affiliations","Publication Title",Date Added To Xplore,"Publication Year","Volume","Issue","Start Page","End Page","Abstract","ISSN",ISBNs,"DOI",Funding Information,PDF Link,"Author Keywords","IEEE Terms","INSPEC Controlled Terms","INSPEC Non-Controlled Terms","Mesh_Terms",Article Citation Count,Patent Citation Count,"Reference Count","License",Online Date,Issue Date,"Meeting Date","Publisher",Document Identifier
"Invasive Software Testing: Mutating Target Programs to Diversify Test Exploration for High Test Coverage","Y. Kim; S. Hong; B. Ko; D. L. Phan; M. Kim","Sch. of Comput., KAIST, Daejeon, South Korea; Sch. of CSEE, Handong Global Univ., Pohang, South Korea; Sch. of Comput., KAIST, Daejeon, South Korea; Sch. of Comput., KAIST, Daejeon, South Korea; Sch. of Comput., KAIST, Daejeon, South Korea","2018 IEEE 11th International Conference on Software Testing, Verification and Validation (ICST)","28 May 2018","2018","","","239","249","Software testing techniques have advanced significantly over several decades; however, most of current techniques still test a target program as it is, and fail to utilize valuable information of diverse test executions on many variants of the original program in test generation. This paper proposes a new direction for software testing - Invasive Software Testing (IST). IST first generates a set of target program variants m<sub>1</sub>, ⋯, m<sub>n</sub> from an original target program p by applying mutation operations <sub>1</sub>, ⋯, μ<sub>n</sub>. Second, given a test suite T, IST executes m<sub>1</sub>, ⋯, m<sub>n</sub> with T and records the test runs which increase test coverage compared to p with T. Based on the recorded information, IST generates guideposts for automated test generation on p toward high test coverage. Finally, IST generates test inputs on p with the guideposts and achieves higher test coverage. We developed DEMINER which implements IST for C programs through software mutation and concolic testing. Further, we showed the effectiveness of DEMINER on three real-world target programs Busybox-ls, Busybox-printf, and GNU-find. The experiment results show that the amount of the improved branch coverage by DEMINER is 24.7% relatively larger than those of the conventional concolic testing techniques on average.","","978-1-5386-5012-7","10.1109/ICST.2018.00032","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8367052","Mutation analysis;Practical mutation tool;C programs","Test pattern generators;Manganese;Software testing;Invasive software;Computer crashes","program testing","C programs;software mutation;Invasive Software Testing;mutating target programs;test exploration;Software testing techniques;diverse test executions;target program variants;automated test generation;test coverage;concolic testing techniques;real-world target programs;Busybox-ls;Busybox-printf;GNU-find","","10","","32","","28 May 2018","","","IEEE","IEEE Conferences"
"The Evolutionary Landscape of SBST: A 10 Year Perspective","M. B. Cohen","Dept. of Comput. Sci. & Eng., Univ. of Nebraska-Lincoln, Lincoln, NE, USA","2017 IEEE/ACM 10th International Workshop on Search-Based Software Testing (SBST)","7 Jul 2017","2017","","","47","48","A key indicator of the health and quality of any evolutionary algorithm is the landscape of its search. By analyzing the landscape one can determine the peaks (local maxima) where significant solutions exist. In this paper we examine the landscape for the history of the International Workshop on Search-Based Software Testing (SBST) within the context of the broader field of search-based software testing. We study the evolution of the field, highlighting key advances during three phases of its ten year history. In 2008 the focus of SBST was inner looking, with advances in existing search techniques, improvements to individual generation techniques, and methods to transform the problem space for search effectiveness. However, diverse seeds of new ideas (such as automated program repair) were already being injected into the population. A few SBST tools existed, but the engineer still required skill and expertise to effectively apply search based approaches. During the middle years, open source tools were created and released, whole test suite generation appeared, and searches hybridized. Tool competitions began and industry started to play a stronger role. As we move to the most recent workshop years and look towards the future, more sophisticated techniques such as those that incorporate hyper-heuristics via learning, and/or balance multiple objectives at once are now common. SBST has become a mainstream topic in the testing community, tools are being commercialized and these tools often hide their inner workings, leading to a future that is optimized towards SBST for all.","","978-1-5386-2789-1","10.1109/SBST.2017.2","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7967961","Search-based software testing;SBST","Tools;Software testing;Conferences;Maintenance engineering;Sociology;Statistics","evolutionary computation;program testing","evolutionary algorithm;search-based software testing;SBST tools;test suite generation;testing community","","","","12","","7 Jul 2017","","","IEEE","IEEE Conferences"
"Using Exploration Focused Techniques to Augment Search-Based Software Testing: An Experimental Evaluation","B. Marculescu; R. Feldt; R. Torkar","Sch. of Comput. Karlskrona, Blekinge Inst. of Technologv, Karlskrona, Sweden; Sch. of Comput. Karlskrona, Blekinge Inst. of Technologv, Karlskrona, Sweden; Sch. of Comput. Karlskrona, Blekinge Inst. of Technologv, Karlskrona, Sweden","2016 IEEE International Conference on Software Testing, Verification and Validation (ICST)","21 Jul 2016","2016","","","69","79","Search-based software testing (SBST) often uses objective-based approaches to solve testing problems. There are, however, situations where the validity and completeness of objectives cannot be ascertained, or where there is insufficient information to define objectives at all. Incomplete or incorrect objectives may steer the search away from interesting behavior of the software under test (SUT) and from potentially useful test cases. This papers investigates the degree to which exploration-based algorithms can be used to complement an objective-based tool we have previously developed and evaluated in industry. In particular, we would like to assess how exploration-based algorithms perform in situations where little information on the behavior space is available a priori. We have conducted an experiment comparing the performance of an exploration-based algorithm with an objective-based one on a problem with a high-dimensional behavior space. In addition, we evaluate to what extent that performance degrades in situations where computational resources are limited. Our experiment shows that exploration-based algorithms are useful in covering a larger area of the behavior space and result in a more diverse solution population. Typically, of the candidate solutions that exploration-based algorithms propose, more than 80% were not covered by their objective-based counterpart. This increased diversity is present in the resulting population even when computational resources are limited. We conclude that exploration-focused algorithms are a useful means of investigating high-dimensional spaces, even in situations where limited information and limited resources are available.","","978-1-5090-1827-7","10.1109/ICST.2016.26","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7515460","search-based software testing;objective-based algorithms;exploration-focused;controlled experiment","Conferences;Software testing","program testing","search-based software testing;SBST;objective-based approaches;software under test;SUT;exploration-based algorithms;high-dimensional behavior space","","5","","17","","21 Jul 2016","","","IEEE","IEEE Conferences"
"Domain Ontology Construction and Evaluation for the Entire Process of Software Testing","Z. Sun; C. Hu; C. Li; L. Wu","Institute of Computer Application, China Academy of Engineering Physics, Mianyang, China; Institute of Computer Application, China Academy of Engineering Physics, Mianyang, China; Institute of Computer Application, China Academy of Engineering Physics, Mianyang, China; Institute of Computer Application, China Academy of Engineering Physics, Mianyang, China","IEEE Access","18 Nov 2020","2020","8","","205374","205385","As an important part of software engineering, software testing is a knowledge-intensive work. In the process of software testing, inconsistent knowledge expression, diverse knowledge carriers, and a few experienced people have mastered most of the knowledge, which hinders the transfer and sharing of domain knowledge. Ontology is widely used in various stages of software engineering to define the semantic relationship between relevant information and knowledge. To solve the problem of knowledge silo in the process of software testing, this article forms an Entire Process Ontology on Software Testing (EPOST). EPOST covers the concepts and relationships of software testing process information, software test object information, and software defect information. The concepts and terms in the ontology are extracted from ISTQB, SWEBOK, IEEE std.829-2008 standard, and IEEE std.610.12-1990 standard. We adopt a comprehensive ontology construction method based on Dev. 101 method and Methontology method. The developed ontology is successfully evaluated by using validation and verification tests. Ontology verification uses an improved FOCA evaluation method by adding a cohesion metric. The evaluation result infers that EPOST has a high quality of ontology and good domain coverage, and achieves the purpose of ontology construction. Finally, we make a case study on the role of EPOST in software testing process. The results show that ontology-based application in the software testing process can promote the sharing and transmission of domain knowledge, and improve the testing process and testing quality.","2169-3536","","10.1109/ACCESS.2020.3037188","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9253652","Ontology construction;software testing;domain ontology;knowledge management;ontology evaluation","Ontologies;Software testing;Software;Tools;Sun;Semantics;IEEE Standards","IEEE standards;ISO standards;knowledge management;ontologies (artificial intelligence);program testing;software metrics;software quality","domain ontology construction;software engineering;knowledge-intensive work;domain knowledge;software testing process information;software test object information;software defect information;testing quality;entire process ontology on software testing;IEEE std.610.12-1990 standard;IEEE std.829-2008 standard;ISTQB;SWEBOK;EPOST;improved FOCA evaluation method;cohesion metric","","5","","38","CCBY","10 Nov 2020","","","IEEE","IEEE Journals"
"Approaches used to Verify and Validate a Software Testing Ontology as an Artifact","L. Olsina; G. Tebes; D. Peppino; P. Becker","UNLPam GIDIS_Web,School of Engineering,General Pico,La Pampa,Argentina; UNLPam GIDIS_Web,School of Engineering,General Pico,La Pampa,Argentina; UNLPam GIDIS_Web,School of Engineering,General Pico,La Pampa,Argentina; UNLPam GIDIS_Web,School of Engineering,General Pico,La Pampa,Argentina","2020 IEEE Congreso Bienal de Argentina (ARGENCON)","13 Aug 2021","2020","","","1","8","Verification and Validation (V&V) are undoubtedly two key aspects of the artifact construction process. V&V entails activities, methods, tools, and ultimately strategies for ensuring quality when developing artifacts. Software engineering production lines, stakeholders and researchers produce diverse artifacts. For example, researchers may build ontologies, which can be both conceptualized and implemented artifacts. Ontologies are playing a central role in many application domains in particular, as well as in software and knowledge engineering disciplines in general. To show the applicability of V&V approaches, this work considers a software testing ontology as an artifact. This was developed following the Design Science Research methodology in the context of a layered ontological architecture. This paper illustrates the V&V approaches used, involving activities and methods for static and dynamic testing, evaluation and assessment. It addresses V&V approaches for the ontology conceptualization, as well as a functional dynamic testing method for its implementation.","","978-1-7281-5957-7","10.1109/ARGENCON49523.2020.9505430","Universidad Nacional de La Pampa; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9505430","Verification and Validation (V&V);V&V Activities and Methods;Software Testing Ontology;Artifact","Software testing;Knowledge engineering;Design methodology;OWL;Production;Ontologies;Tools","ontologies (artificial intelligence);program testing;software engineering","software testing ontology;artifact construction process;developing artifacts;software engineering production lines;diverse artifacts;conceptualized implemented artifacts;application domains;knowledge engineering disciplines;design science research methodology;layered ontological architecture;ontology conceptualization;functional dynamic testing method","","","","20","","13 Aug 2021","","","IEEE","IEEE Conferences"
"Teaching Practices of Software Testing in Programming Education","L. P. Scatalon; R. E. Garcia; E. F. Barbosa","University of São Paulo (ICMC-USP),São Carlos-SP,Brazil; São Paulo State University (FCT-Unesp),Presidente Prudente-SP,Brazil; University of São Paulo (ICMC-USP),São Carlos-SP,Brazil","2020 IEEE Frontiers in Education Conference (FIE)","4 Dec 2020","2020","","","1","9","This Research Full Paper presents an overview of the practices that have been used to integrate software testing into programming education. Introductory programming courses compose the core of several undergraduate programs, since programming is a crucial technical skill for professionals in many areas. Given the subject importance, researchers have been conducting several studies to investigate teaching approaches that can help overcoming students' learning difficulties. In particular, studies on introducing software testing into this context present evidence that testing practices can improve students' programming performance and habits. There are many teaching approaches in programming education, which involve different choices of programming paradigm and language, support tools and development practices, such as version control. Likewise, the integration of software testing into such diverse context can also happen in many different ways. Therefore, investigating the ways to teach programming and testing at the same time can help instructors with informed choices. In this sense, we identified teaching practices that have been adopted to integrate software testing into programming education. To do so, we further analyzed a subgroup of 195 papers that returned in our systematic mapping on this research domain. We selected papers describing empirical studies (e.g. survey, qualitative studies, experiments, case studies and experience reports), since this kind of study involves applying a given teaching practice in order to collect evidence or report the observed experience. Overall, our results shed light on how the integration of software testing has been done in different classroom contexts of programming education. We discuss the practices in terms of their application context (i.e. the course), how testing was introduced in theory and practice, and the adopted support tools. We also discuss an important gap regarding the lack of instruction in testing concepts, even when students are responsible to write their own tests.","2377-634X","978-1-7281-8961-1","10.1109/FIE44824.2020.9274256","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9274256","Software Testing;Programming Fundamentals;Teaching Practices;Computer Science Education","Programming;Programming profession;Education;Software testing;Tools;Task analysis;Software engineering","computer science education;educational courses;program testing;teaching","teaching practices;software testing;programming education;introductory programming courses;undergraduate programs;teaching approaches;testing practices;students learning difficulties;programming paradigm;programming language;student programming performance;programming teaching","","2","","81","","4 Dec 2020","","","IEEE","IEEE Conferences"
"Searching for Cognitively Diverse Tests: Towards Universal Test Diversity Metrics","R. Feldt; R. Torkar; T. Gorschek; W. Afzal","Dept. of Syst. & Software Eng., Blekinge Inst. of Technol., Ronneby; Dept. of Syst. & Software Eng., Blekinge Inst. of Technol., Ronneby; Dept. of Syst. & Software Eng., Blekinge Inst. of Technol., Ronneby; Dept. of Syst. & Software Eng., Blekinge Inst. of Technol., Ronneby","2008 IEEE International Conference on Software Testing Verification and Validation Workshop","16 Jul 2008","2008","","","178","186","Search-based software testing (SBST) has shown a potential to decrease cost and increase quality of testing- related software development activities. Research in SBST has so far mainly focused on the search for isolated tests that are optimal according to a fitness function that guides the search. In this paper we make the case for fitness functions that measure test fitness in relation to existing or previously found tests; a test is good if it is diverse from other tests. We present a model for test variability and propose the use of a theoretically optimal diversity metric at variation points in the model. We then describe how to apply a practically useful approximation to the theoretically optimal metric. The metric is simple and powerful and can be adapted to a multitude of different test diversity measurement scenarios. We present initial results from an experiment to compare how similar to human subjects, the metric can cluster a set of test cases. To carry out the experiment we have extended an existing framework for test automation in an object-oriented, dynamic programming language.","","978-0-7695-3388-9","10.1109/ICSTW.2008.36","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4567005","","Software testing;System testing;Humans;Object oriented modeling;Automatic testing;Software measurement;Software engineering;Isolation technology;Costs;Programming","object-oriented programming;program testing;software metrics","universal test diversity metrics;search-based software testing;software development;optimal diversity metric;dynamic programming language;object-oriented programming","","32","","22","","16 Jul 2008","","","IEEE","IEEE Conferences"
"Modeling the effects of combining diverse software fault detection techniques","B. Littlewood; P. T. Popov; L. Strigini; N. Shryane","Centre for Software Reliability, City Univ., London, UK; NA; NA; NA","IEEE Transactions on Software Engineering","6 Aug 2002","2000","26","12","1157","1167","Considers what happens when several different fault-finding techniques are used together. The effectiveness of such multi-technique approaches depends upon a quite subtle interplay between their individual efficacies. The modeling tool we use to study this problem is closely related to earlier work on software design diversity which showed that it would be unreasonable even to expect software versions that were developed truly independently to fail independently of one another. The key idea was a ""difficulty function"" over the input space. Later work extended these ideas to introduce a notion of ""forced"" diversity. In this paper, we show that many of these results for design diversity have counterparts in diverse fault detection in a single software version. We define measures of fault-finding effectiveness and diversity, and show how these might be used to give guidance for the optimal application of different fault-finding procedures to a particular program. The effects on reliability of repeated applications of a particular fault-finding procedure are not statistically independent; such an incorrect assumption of independence will always give results that are too optimistic. For diverse fault-finding procedures, it is possible for effectiveness to be even greater than it would be under an assumption of statistical independence. Diversity of fault-finding procedures is a good thing and should be applied as widely as possible. The model is illustrated using some data from an experimental investigation into diverse fault-finding on a railway signalling application.","1939-3520","","10.1109/32.888629","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=888629","","Diversity reception;Fault detection;Software design;Application software;Redundancy;Hardware;Aerospace control;Battery powered vehicles;Software engineering;Particle measurements","system recovery;program diagnostics;software reliability;signalling;railways","software fault detection techniques;multi-technique approach;modeling tool;software design diversity;independently developed software versions;system failure;difficulty function;forced diversity;fault-finding effectiveness;repeated application reliability;diverse fault-finding procedures;statistical independence;railway signalling application;fault removal;software testing;software reliability growth","","32","","15","IEEE","6 Aug 2002","","","IEEE","IEEE Journals"
"Configuration management strategy for distributed and diverse software development environments","U. V. Gumaste; Ti-Chung R. Hsueh; A. A. Nocera; Yiu Kwan Wo","AT&T Bell Labs., Holmdel, NJ, USA; NA; NA; NA","Proceedings of the IEEE International Conference on Industrial Technology (ICIT'96)","6 Aug 2002","1996","","","42","46","This paper intends to provide an overview of management of software development environments having multiple operating systems and hardware platforms. The paper addresses issues related to system integration as well as independence while fulfilling the need of a seamless software development environment. The article examines the elements necessary to provide efficient software development, integration and test environments that supports distributed execution of software programs across different hardware platforms. The issues related to dissimilar operating systems and hardware platforms are also presented. Requirements for initial and future configuration management needs of such dissimilar environments are discussed.","","0-7803-3104-4","10.1109/ICIT.1996.601537","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=601537","","Environmental management;Software development management;Programming;Hardware;Computer architecture;Software performance;Operating systems;Software testing;Productivity;Technology management","configuration management;distributed processing;programming environments","configuration management strategy;distributed software development environments;diverse software development environments;software development environment management;multiple operating systems;hardware platforms;seamless software development environment;software integration environment;software test environment;distributed execution","","","1","3","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Software Testing Techniques in IoT","G. Murad; A. Badarneh; A. Qusef; F. Almasalha","Computer Science Department, Applied Science University; Jordanian Engineers Association; Software Eng. Dept., Princess Sumaya Univ. for Technol., Amman, Jordan; Computer Science Department, Applied Science University","2018 8th International Conference on Computer Science and Information Technology (CSIT)","11 Oct 2018","2018","","","17","21","As well as the important industry 4.0 revolution, based on of the serves that IoT provides in our society in different fields such as smart building, factory, mobility, health care. Previous studies explore various technology solution to find the best technique to test IoT applications in order to ensure quality for IoT devices. The paper surveys diverse of aspects of multiples software testing and tools for loT devices, and provides details in use case testing for IoT environment and test different accepts such as usability, security, connectivity. The paper considers various security requirement and challenges an unveils different research problems in testing IoT applications and proposes multiple tools and software techniques that help to enhance IoT applications quality.","","978-1-5386-4152-1","10.1109/CSIT.2018.8486149","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8486149","Software Testing;IoT;Testing Methodologies;Testing Tools","Internet of Things;Tools;Software;Security;Software testing;Computer science","Internet of Things;mobile computing;program testing","smart building;health care;IoT devices;use case testing;multiple tools;IoT applications quality;IoT applications;software testing techniques","","5","","27","","11 Oct 2018","","","IEEE","IEEE Conferences"
"PODS — A project on diverse software","P. G. Bishop; D. G. Esp; M. Barnes; P. Humphreys; G. Dahll; J. Lahti","Central Electricity Research Laboratories, UK Central Electricity Generating Board, Surrey KT22 7SE, England; Central Electricity Research Laboratories, UK Central Electricity Generating Board, Surrey KT22 7SE, England; UK Atomic Energy Authority; UK Atomic Energy Authority; Institute for Energy; Technical Research Center of Finland","IEEE Transactions on Software Engineering","26 Sep 2012","1986","SE-12","9","929","940","A review of the Project on Diverse Software (PODS), a collaborative software reliability research project, is presented. The purpose of the project was to determine the effect of a number of different software development techniques on software reliability. The main objectives were to evaluate the merits of using diverse software, evaluate the specification language X-SPEX, and compare the productivity and reliability associated with high-level and low-level languages. A secondary objective was to monitor the software development process, with particular reference to the creation and detection of software faults. To achieve these objectives, an experiment was performed which simulated a normal software development process to produce three diverse programs to the same requirement. The requirement was for a reactor over-power protection (trip) system. After careful independent development and testing, the three programs were tested against each other in a special test harness to locate residual faults. The conclusions drawn from this project are discussed.","1939-3520","","10.1109/TSE.1986.6313048","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6313048","Fault classification;n-version programming;PODS;programming languages;reactor protection;software diversity;software faults;software reliability;specification languages;X","Software;Testing;Inductors;Specification languages;Software reliability;Documentation;Quality assurance","software reliability;specification languages","diverse software;Project on Diverse Software;PODS;software reliability research project;software development techniques;software reliability;diverse software;specification language X-SPEX;software development process;software faults;reactor over-power protection","","63","","","","26 Sep 2012","","","IEEE","IEEE Journals"
"A multinational case study on using diverse feedback types applied to introductory programming learning","D. S. Campos; A. J. Mendes; M. J. Marcelino; D. J. Ferreira; L. M. Alves","Center for Informatics and Systems, University of Coimbra, Coimbra, Portugal; Center for Informatics and Systems, University of Coimbra, Coimbra, Portugal; Center for Informatics and Systems, University of Coimbra, Coimbra, Portugal; Federal University of Goiás, Institute of Informatics, Goiânia, Brazil; Federal University of Goiás, Institute of Informatics, Goiânia, Brazil","2012 Frontiers in Education Conference Proceedings","18 Feb 2013","2012","","","1","6","Building written feedback, pedagogically sound, standardized and flexible enough to accommodate students who may be in different stages and learning curves is a complex and laborious task. In this paper, we describe a multinational case study involving diverse types of pedagogical feedback provided to Portuguese and Brazilian novice programming students. Programming errors, especially logical ones, can be used as a consistent metric for assessing learning. The research done looks for an innovative form to define content of several types of feedback. It also aims to create an efficient method for the discovery and mapping of students' logical programming errors. The results obtained so far using this approach are presented and analyzed.","2377-634X","978-1-4673-1352-0","10.1109/FIE.2012.6462412","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6462412","feedback;programming learning;logical errors;software testing;pedagogical rubric","Programming profession;Context;Software testing;Educational institutions;Complexity theory","computer aided instruction;computer science education;programming","multinational case study;diverse feedback types;introductory programming learning;written feedback;learning curves;laborious task;pedagogical feedback;Portuguese novice programming student;Brazilian novice programming student;student logical programming errors","","5","","15","","18 Feb 2013","","","IEEE","IEEE Conferences"
"Downsized testers use diverse new technologies","J. Eidnes","Honeywell Inc., St. Louis Park, MN, USA","AUTOTESTCON 93","6 Aug 2002","1993","","","585","590","Several diverse new technologies were brought together during the development of two downsized testers for the F-16 Central Air Data Computer. The small size, clean design, and ease of operation produced as a result of this project illustrated the effectiveness of integrating these new technologies into a single system. This paper discusses changes in the test station development process that were brought about by these new technologies.<<ETX>></ETX>","","0-7803-0646-5","10.1109/AUTEST.1993.396304","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=396304","","Hardware;Instruments;Military computing;Central air conditioning;Software testing;Microcomputers;Aerospace electronics;Software systems;Buildings;System testing","aircraft computers;automatic test equipment;automatic test software","downsized testers;ATE;F-16 Central Air Data Computer;test station development","","","","1","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Literature survey of Ant Colony Optimization in software testing","B. Suri; S. Singhal","Comp Sc USIT, GGSIPU; IT JIMS, Rohini, GGSIPU","2012 CSI Sixth International Conference on Software Engineering (CONSEG)","10 Nov 2012","2012","","","1","7","Ant Colony Optimization (ACO) is a well known and rapidly evolving meta-heuristic technique. A large number of optimization problems have already taken advantage of the ACO technique while countless others are on their way. A copious amount of effort has also been put in by the researchers for applying ACO in solving various software testing problems. This paper presents a survey of twenty-one such studies, identified as relating to the use of ACO in diverse software testing concepts. To the best of our knowledge, no literature survey could be found published in the same context till date. Consequently, the twenty one studies have been rigorously analyzed to find some common parameters which can be grouped together or compared in order to provide a useful insight into the field.","","978-1-4673-2177-8","10.1109/CONSEG.2012.6349501","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6349501","","Software testing;Unified modeling language;Optimization;Software;Flow graphs;Data models","ant colony optimisation;program testing","literature survey;ant colony optimization;meta-heuristic technique;ACO technique;software testing problems","","10","","30","","10 Nov 2012","","","IEEE","IEEE Conferences"
"An empirical study on reliability modeling for diverse software systems","Xia Cai; M. R. Lyu","Dept. of Comput. Sci. & Eng., Chinese Univ. of Hong Kong, Shatin, China; Dept. of Comput. Sci. & Eng., Chinese Univ. of Hong Kong, Shatin, China","15th International Symposium on Software Reliability Engineering","24 Jan 2005","2004","","","125","136","Reliability and fault correlation are two main concerns for design diversity, yet empirical data are limited in investigating these two. In previous work, we conducted a software project with real-world application for investigation on software testing and fault tolerance for design diversity. Mutants were generated by injecting one single real fault recorded in the software development phase to the final versions. In this paper, we perform more analysis and experiments on these mutants to evaluate and investigate the reliability features in diverse software systems. We apply our project data on two different reliability models and estimate the reliability bounds for evaluation purpose. We also parameterize fault correlations to predict the reliability of various combinations of versions, and compare three different fault-tolerant software architectures.","1071-9458","0-7695-2215-7","10.1109/ISSRE.2004.6","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1383112","","Software systems;Fault tolerance;Application software;Reliability engineering;Software testing;Aerospace electronics;Computer science;Data engineering;Design engineering;Programming","software reliability;software architecture","software reliability modeling;fault correlation;software testing;fault tolerance","","3","","21","","24 Jan 2005","","","IEEE","IEEE Conferences"
"Efficiently represent diverse system field usage in reliability testing","P. J. M. Sonnemans; A. Balasubramanian; K. Kevrekedis; M. J. Newby","Eindhoven University of Technology, The Netherlands; Eindhoven University of Technology, The Netherlands; Eindhoven University of Technology, The Netherlands; City University London, UK","2008 Annual Reliability and Maintainability Symposium","15 May 2009","2008","","","132","136","This paper addresses the problem how to represent diverse field usage of professional systems in an efficient way, so that field usage can be incorporated in reliability tests. With diverse we mean the variability in system use in the field. Operational Profiles are constructed from system field data to represent system field use. A clustering technique is introduced and applied in a strategic way to reduce the diversity in describing diverse system use in the field. In this way testing effort could be reduced by a factor 87 while maintaining 70 % similarity with the original system field data.","0149-144X","978-1-4244-1460-4","10.1109/RAMS.2008.4925783","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4925783","reliability;testing;system use;operational profile;clustering;grouping;field performance","System testing;Biomedical imaging;Medical diagnostic imaging;Hospitals;Software testing;Maintenance;Reliability;Automotive engineering;Manufacturing;Medical services","life testing;reliability theory;statistical analysis","system reliability testing;diverse system field usage;professional systems;clustering technique","","1","","10","","15 May 2009","","","IEEE","IEEE Conferences"
"Measuring Effectiveness of Mutant Sets","R. Gopinath; A. Alipour; I. Ahmed; C. Jensen; A. Groce","Dept. of EECS, Oregon State Univ., Corvallis, OR, USA; Dept. of EECS, Oregon State Univ., Corvallis, OR, USA; Dept. of EECS, Oregon State Univ., Corvallis, OR, USA; Dept. of EECS, Oregon State Univ., Corvallis, OR, USA; Dept. of EECS, Oregon State Univ., Corvallis, OR, USA","2016 IEEE Ninth International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","4 Aug 2016","2016","","","132","141","Redundancy in mutants, where multiple mutants end up producing the same semantic variant of a program, is a major problem in mutation analysis. Hence, a measure of effectiveness that accounts for redundancy is an essential tool for evaluating mutation tools, new operators, and reduction techniques. Previous research suggests using the size of the disjoint mutant set as an effectiveness measure. We start from a simple premise: test suites need to be judged on both the number of unique variations in specifications they detect (as a variation measure), and also on how good they are at detecting hard-to-find faults (as a measure of thoroughness). Hence, any set of mutants should be judged by how well it supports these measurements. We show that the disjoint mutant set has two major inadequacies -- the single variant assumption and the large test suite assumption -- when used as a measure of effectiveness in variation. These stem from its reliance on minimal test suites. We show that when used to emulate hard to find bugs (as a measure of thoroughness), disjoint mutant set discards useful mutants. We propose two alternatives: one measures variation and is not vulnerable to either the single variant assumption or the large test suite assumption, the other measures thoroughness. We provide a benchmark of these measures using diverse tools.","","978-1-5090-3674-5","10.1109/ICSTW.2016.45","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7528955","Mutation Analysis;Software Testing;Empirical Analysis;Theoretical Analysis","Size measurement;Conferences;Software testing;Redundancy;Computer bugs;Runtime;Software measurement","program debugging;program testing;software quality","large-test suite assumption;single variant assumption;bugs;disjoint mutant set;mutation tools;mutation analysis","","13","","31","","4 Aug 2016","","","IEEE","IEEE Conferences"
"Industrial Scale Passive Testing with T-EARS","D. Flemström; H. Jonsson; E. P. Enoiu; W. Afzal","Mälardalen University,Sweden; Mälardalen University,Bombardier Transportation AB,Sweden; Mälardalen University,Sweden; Mälardalen University,Sweden","2021 14th IEEE Conference on Software Testing, Verification and Validation (ICST)","24 May 2021","2021","","","351","361","Passive testing continuously observes the system or system execution logs without any interference or instrumentation to test diverse combinations of functions, resulting in a more thorough evaluation over time. However, reaching a working solution to passive testing is not without challenges. While there have been some efforts to extract information from system requirements to create passive test cases, to our knowledge, no such efforts are mature enough to be applied in a real, industrial safety-critical context. Our passive testing approach uses the Timed Easy Approach to Requirements Syntax (T-EARS) specification language and its accompanying tool-chain. This study reports challenges and solutions to introducing system-level passive testing for a vehicular safety-critical system through industrial data analysis, including 116 safety-related requirements. Our results show that passive testing using the T-EARS language and its tool-chain can be used for system-level testing in an industrial setting for 64% of the studied requirements. We identified several sources of false positive results and show how to tune test cases to reduce such false positives systematically. Finally, we show the requirement coverage achieved by a manual test session and that passive testing using T-EARS can find a set of injected faults that are considered hard to find with other test techniques.","2159-4848","978-1-7281-6836-4","10.1109/ICST49551.2021.00047","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9438550","software testing;passive testing;test case automation","Software testing;Data analysis;Instruments;Manuals;Interference;Syntactics;Software","data analysis;program testing;safety-critical software;software fault tolerance;specification languages","system requirements;industrial safety-critical context;vehicular safety-critical system;system-level testing;industrial scale passive testing;Timed Easy Approach to Requirements Syntax;T-EARS specification language;system-level passive testing","","","","26","","24 May 2021","","","IEEE","IEEE Conferences"
"Adaptable Design for Root Cause Analysis of a Model-Based Software Testing Process","M. Nieminen; T. Räty","Digital Syst. & Services, VTT Tech. Res. Centre of Finland, Oulu, Finland; Digital Syst. & Services, VTT Tech. Res. Centre of Finland, Oulu, Finland","2015 12th International Conference on Information Technology - New Generations","1 Jun 2015","2015","","","379","384","Model-Based Testing (MBT) is a method for automating software testing and improving fault detection by using an abstracted model of the system under test to systematically generate and execute test cases. One of the main challenges in MBT is the efficient locating of fundamental causes of errors, which can be achieved using root cause analysis. As MBT is being applied to many diverse domains using various tools and tool chains, tool adaptability is an important factor to consider. We define the design for an automated Root Cause Analyzer (RCA) tool adaptable for different MBT testing scenarios and environments. In our RCA design, analysis is configured using rules for evaluating output data of other MBT components. We present an example of RCA application for a case study in mobile telecommunications testing to demonstrate the integration and adapting of our design into an existing tool chain. Within the case study, the RCA tool is successful in locating causes of errors, and is able to interface with MBT components and exploit their data in analysis. The research is based on the constructive method of the related publications and technologies and the results are derived by the implemented RCA tool.","","978-1-4799-8828-0","10.1109/ITNG.2015.67","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7113502","Model-Based Testing;Root Cause Analysis;Rule-Based Analysis;Rule Generation;Adaptability","Testing;Data models;Unified modeling language;Analytical models;Databases;XML;Adaptation models","fault diagnosis;program testing;software fault tolerance","adaptable design;root cause analysis;model-based software testing process;automating software testing;fault detection;abstracted model;tool chains;root cause analyzer tool;automated RCA tool;MBT testing scenarios;RCA design;mobile telecommunication testing","","1","","16","","1 Jun 2015","","","IEEE","IEEE Conferences"
"How Effectively Does Metamorphic Testing Alleviate the Oracle Problem?","H. Liu; F. Kuo; D. Towey; T. Y. Chen","Australia-India Centre for Automation Software Engineering, RMIT University, Melbourne 3001 VIC, Australia; Faculty of Information and Communication Technologies, Swinburne University of Technology, Hawthorn 3122 VIC, Australia; Division of Computer Science, The University of Nottingham, Ningbo, China; Faculty of Information and Communication Technologies, Swinburne University of Technology, Hawthorn 3122 VIC, Australia","IEEE Transactions on Software Engineering","4 Mar 2014","2014","40","1","4","22","In software testing, something which can verify the correctness of test case execution results is called an oracle. The oracle problem occurs when either an oracle does not exist, or exists but is too expensive to be used. Metamorphic testing is a testing approach which uses metamorphic relations, properties of the software under test represented in the form of relations among inputs and outputs of multiple executions, to help verify the correctness of a program. This paper presents new empirical evidence to support this approach, which has been used to alleviate the oracle problem in various applications and to enhance several software analysis and testing techniques. It has been observed that identification of a sufficient number of appropriate metamorphic relations for testing, even by inexperienced testers, was possible with a very small amount of training. Furthermore, the cost-effectiveness of the approach could be enhanced through the use of more diverse metamorphic relations. The empirical studies presented in this paper clearly show that a small number of diverse metamorphic relations, even those identified in an ad hoc manner, had a similar fault-detection capability to a test oracle, and could thus effectively help alleviate the oracle problem.","1939-3520","","10.1109/TSE.2013.46","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6613484","Software testing;test oracle;oracle problem;metamorphic testing;metamorphic relation","Computer crashes;Software;Educational institutions;Software testing;Training;Benchmark testing","program diagnostics;program testing;software fault tolerance;software quality","metamorphic testing;oracle problem;software testing;metamorphic relations;software properties;program correctness;software analysis;fault-detection capability","","121","","42","IEEE","27 Sep 2013","","","IEEE","IEEE Journals"
"Identification of Failure Regions for Programs With Numeric Inputs","R. Huang; W. Sun; T. Y. Chen; S. Ng; J. Chen","School of Computer Science and Communication Engineering, and Jiangsu Key Laboratory of Security Technology for Industrial Cyberspace, Jiangsu University, Zhenjiang, China; School of Computer Science and Communication Engineering, Jiangsu University, Zhenjiang, China; Department of Computer Science and Software Engineering, Swinburne University of Technology, Hawthorn, VIC, Australia; Department of Computer Science and Software Engineering, Swinburne University of Technology, Hawthorn, VIC, Australia; School of Computer Science and Communication Engineering, Jiangsu University, Zhenjiang, China","IEEE Transactions on Emerging Topics in Computational Intelligence","21 Jul 2021","2021","5","4","651","667","Failure region, where failure-causing inputs reside, has provided many insights to enhance testing effectiveness of many testing methods. Failure region may also provide some important information to support other processes such as software debugging. When a testing method detects a software failure, indicating that a failure-causing input is identified, the next important question is about how to identify the failure region based on this failure-causing input, i.e., Identification of Failure Regions (IFR). In this paper, we introduce a new IFR strategy, namely Search for Boundary (SB), to identify an approximate failure region of a numeric input domain. SB attempts to identify additional failure-causing inputs that are as close to the boundary of the failure region as possible. To support SB, we provide a basic procedure, and then propose two methods, namely Fixed-orientation Search for Boundary (FSB) and Diverse-orientation Search for Boundary (DSB). In addition, we implemented an automated experimentation platform to integrate these methods. In the experiments, we evaluated the proposed SB methods using a series of simulation studies and empirical studies with different types of failure regions. The results show that our methods can effectively identify a failure region, within the limited testing resources.","2471-285X","","10.1109/TETCI.2020.3013713","National Natural Science Foundation of China(grant numbers:61872167,61502205,U1836116); China Postdoctoral Science Foundation(grant numbers:2019T120396); Postgraduate Research & Practice Innovation Program of Jiangsu Province(grant numbers:KYCX19_1614); Senior Personnel Scientific Research Foundation; Jiangsu University(grant numbers:14JDG039); Young Backbone Teacher Cultivation Project of Jiangsu University; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9165789","Software debugging;software testing;failure-based testing;identification of failure region (IFR)","Shape;Software;Flyback transformers;Software testing;Subspace constraints;Sun","program debugging;program testing","failure-causing input;approximate failure region;failure region identification;software failure;testing method;fixed-orientation search for boundary;diverse-orientation search for boundary;automated experimentation platform;numeric inputs","","","","33","IEEE","12 Aug 2020","","","IEEE","IEEE Journals"
"PODS revisited-a study of software failure behaviour","P. G. Bishop; F. D. Pullen","Central Electr. Res. Lab., Leatherhead, UK; Central Electr. Res. Lab., Leatherhead, UK","[1988] The Eighteenth International Symposium on Fault-Tolerant Computing. Digest of Papers","6 Aug 2002","1988","","","2","8","A description is given of an empirical study of the failure characteristics of software defects detected in the programs developed in the Project on Diverse Software (PODS). The results are interpreted in the context of a state machine model of software failure. The results of the empirical study case doubts on the general validity of the assumption of constant software failure probability and the assumption of constant software failure probability and the assumption that all defects have similar failure rates. In addition, an analysis of failure dependency lends support to the use of diversity as a means of minimizing the impact of design-level faults. Here, nonidentical faults exhibited coincident failure characteristics approximately in accord with the independence assumption, and some of the observed positive and negative correlation effects could be explained by failure masking effects, which can be removed by suitable design.<<ETX>></ETX>","","0-8186-0867-6","10.1109/FTCS.1988.5289","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5289","","Context modeling;Collaborative software;State-space methods;Predictive models;Kelvin;Failure analysis;Fault detection;Software testing;Software reliability;Real time systems","fault tolerant computing;software reliability","software failure behaviour;Project on Diverse Software;PODS;state machine model;failure dependency;design-level faults","","16","","","","6 Aug 2002","","","IEEE","IEEE Conferences"
"An Adaptive Software Fault-Tolerant Framework for Ubiquitous Vehicular Technologies","M. Rizwan; A. Nadeem; M. Iqbal; S. Sarwar; M. Safyan; Z. U. Qayyum",NA; NA; NA; NA; NA; NA,"IEEE Communications Standards Magazine","7 Jan 2021","2020","4","4","26","32","The probability of the occurrence of faults increases manifolds when program lines of code exceed a few thousand in ubiquitous applications. Fault mitigation in ubiquitous applications, such as those of autonomous vehicular technologies (VTs), has not been effective even with the use of formal methods. Faults in such applications require exhaustive testing for a timely fix, which seems infeasible computationally. This emphasizes the imperative role of software fault tolerance (SFT) for autonomous applications. Several SFT techniques have been proposed, but failures revealed in VT applications imply that existing SFT techniques need to be fine-tuned. In this article, current replication-based SFT techniques are analyzed and classified with respect to their diversity, adjudication, and adaptivity. Essential parameters (reliability, time, variance, etc.) for adjudication, diversity, and adaptiveness are recorded. The identified parameters are mapped to different techniques (e.g., AFTRC, SCOP, VFT) for observing their shortcomings. Consequently, a generic framework named Diverse Parallel Adjudication for Software Fault Tolerance (DPA-SFT) is proposed. DPA-SFT addresses the shortcomings of existing SFT techniques for VTs with the added value of parallel and diverse adjudication. A prototype implementation of the proposed framework has been developed for assessing the viability of DPA-SFT over modules of VT. An empirical comparison of the proposed framework is performed with prevalent techniques (AFTRC, SCOP, VFT, etc). A thorough evaluation suggests that DPA-SFT performs better than contemporary SFT techniques in VTs due to its parallel and diverse adjudication.","2471-2833","","10.1109/MCOMSTD.001.2000012","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9316439","","Fault tolerance;Vehicular and wireless technologies;Fault tolerant systems;Prototypes;Software testing;Software reliability","fault tolerant computing;probability;software fault tolerance;traffic engineering computing;ubiquitous computing","ubiquitous vehicular technologies;fault mitigation;autonomous vehicular technologies;software fault tolerance;autonomous applications;VT applications;adaptiveness;DPA-SFT addresses;diverse adjudication;diverse parallel adjudication;replication-based SFT techniques;adaptive software fault-tolerant framework","","","","15","","7 Jan 2021","","","IEEE","IEEE Magazines"
"Automated generation of diverse and challenging scenarios for test and evaluation of autonomous vehicles","G. E. Mullins; P. G. Stankiewicz; S. K. Gupta","Department of Mechanical Engineering and Institute for Systems Research, University of Maryland, College Park, MD 20742, USA; Johns Hopkins University Applied Physics Laboratory, 11100 Johns Hopkins Road, Laurel, Maryland 20723, USA; Department of Aerospace and Mechanical Engineering and Center for Advanced Manufacturing, University of Southern California, Los Angeles, California 90089, USA","2017 IEEE International Conference on Robotics and Automation (ICRA)","24 Jul 2017","2017","","","1443","1450","We propose a novel method for generating test scenarios for a black box autonomous system that demonstrate critical transitions in its performance modes. In complex environments it is possible for an autonomous system to fail at its assigned mission even if it complies with requirements for all subsystems and throws no faults. This is particularly true when the autonomous system may have to choose between multiple exclusive objectives. The standard approach of testing robustness through fault detection is directly stimulating the system and detecting violations of the system requirements. Our approach differs by instead running the autonomous system through full missions in a simulated environment and measuring performance based on high-level mission criteria. The result is a method of searching for challenging scenarios for an autonomous system under test that exercise a variety of performance modes. We utilize adaptive sampling to intelligently search the state space for test scenarios which exist on the boundary between distinct performance modes. Additionally, using unsupervised clustering techniques we can group scenarios by their performance modes and sort them by those which are most effective at diagnosing changes in the autonomous system's behavior.","","978-1-5090-4633-1","10.1109/ICRA.2017.7989173","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7989173","","Software;Autonomous vehicles;Robustness;Fault detection;Software testing","control engineering computing;fault diagnosis;pattern clustering;robust control;state-space methods;vehicles","automated generation;autonomous vehicles;black box autonomous system;robustness;fault detection;system requirements;state space;unsupervised clustering","","33","","21","","24 Jul 2017","","","IEEE","IEEE Conferences"
"Survey on selenium tool in software testing","I. Altaf; J. A. Dar; F. u. Rashid; M. Rafiq","Department of Computer Science and Engineering, Amity University, Noida, India; Department of Computer Science and Engineering, Islamic University Of Science & technology, Kashmir, India; Department of Computer Science and Engineering, Islamic University Of Science & technology, Kashmir, India; Department of Computer Science and Engineering, Islamic University of Science & technology, Kashmir, India","2015 International Conference on Green Computing and Internet of Things (ICGCIoT)","14 Jan 2016","2015","","","1378","1383","We are moving towards a general public where web is the need of hour. Today the vast majority of the product applications executed, are composed as online applications which are keep running in a web program. Testing programming applications is critical. Numerous associations make utilization of a specific web application, so the same web applications are tried habitually by diverse clients from distinctive regions physically. Testing a web application physically is tedious, so we go for test automation. In test automation we make utilization of a product device to run repeatable tests against the application to be tried. There are various focal points of test automation. They are exceptionally exact and have more prominent preparing pace when contrasted with manual automation. There are various open source and business devices accessible for test mechanization. Selenium is one of the broadly utilized open source device for test computerization. Test automation enhances the effectiveness of programming testing procedures. Test automation gives quick criticism to engineers. It additionally discovers the imperfections when one may miss in the manual testing. In test automation we can perform boundless emphases for testing the same example of code ceaselessly commonly.","","978-1-4673-7910-6","10.1109/ICGCIoT.2015.7380682","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7380682","selenium;aka.selenium;selenium grid;selenium control;selenium ide;web driver;test case;RC","Selenium;Testing;Libraries;Java;Servers","automatic testing;Internet;program testing;public domain software","product applications;online applications;Web program;programming application testing;Web application;test automation;product device utilization;business devices;open source devices;test mechanization;test computerization;selenium tool;software testing","","4","","17","","14 Jan 2016","","","IEEE","IEEE Conferences"
"Help, help, i'm being suppressed! The significance of suppressors in software testing","A. Groce; C. Zhang; M. A. Alipour; E. Eide; Y. Chen; J. Regehr",School of Electrical Engineering and Computer Science Oregon State University; School of Electrical Engineering and Computer Science Oregon State University; School of Electrical Engineering and Computer Science Oregon State University; School of Computing University of Utah; School of Computing University of Utah; School of Computing University of Utah,"2013 IEEE 24th International Symposium on Software Reliability Engineering (ISSRE)","2 Jan 2014","2013","","","390","399","Test features are basic compositional units used to describe what a test does (and does not) involve. For example, in API-based testing, the most obvious features are function calls; in grammar-based testing, the obvious features are the elements of the grammar. The relationship between features as abstractions of tests and produced behaviors of the tested program is surprisingly poorly understood. This paper shows how large-scale random testing modified to use diverse feature sets can uncover causal relationships between what a test contains and what the program being tested does. We introduce a general notion of observable behaviors as targets, where a target can be a detected fault, an executed branch or statement, or a complex coverage entity such as a state, predicate-valuation, or program path. While it is obvious that targets have triggers - features without which they cannot be hit by a test - the notion of suppressors - features which make a test less likely to hit a target - has received little attention despite having important implications for automated test generation and program understanding. For a set of subjects including C compilers, a flash file system, and JavaScript engines, we show that suppression is both common and important.","2332-6549","978-1-4799-2366-3","10.1109/ISSRE.2013.6698892","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6698892","","Testing;HTML;Computer crashes;Sociology;Statistics;Containers;Grammar","authoring languages;fault diagnosis;file organisation;program diagnostics;program testing;software fault tolerance","software testing;test features;compositional units;API-based testing;grammar-based testing;large-scale random testing;causal relationships;complex coverage entity;fault detection;predicate-valuation;program path;automated test generation;program understanding;flash file system;JavaScript engines","","12","","31","","2 Jan 2014","","","IEEE","IEEE Conferences"
"Towards a zero-defect product-the End-To-End test process","R. K. Prasad","AT&T Bell Labs., USA","Proceedings of 1994 1st International Conference on Software Testing, Reliability and Quality Assurance (STRQA'94)","6 Aug 2002","1994","","","137","147","The competitive market place today demands the best of everything-quality, cost and schedule. The ontime delivery of an error-free product at minimal cost are standards that demanding customers expect and good suppliers continually strive to meet. It is no easy task to strike an effective balance where quality is accomplished without sacrificing schedules and incurring unplanned costs-and to do so consistently, release after release. There is no silver bullet. However, there is a great deal of merit to establishing a well thought out process before-hand, planning the product release steps carefully, and monitoring and controlling the entire release cycle with discipline. I propose to share, from a tester point of view, the approach and experiences from the ontime, at-budget, zero defect delivery of one software development project-approximately 400,000 lines of code, with a very large and diverse customer base. In my opinion, the apriori definition and, more importantly, the buy-in from all the players in the project for the End-to-End test process and the disciplined release management of the project contributed significantly to the success story for this software project.","","0-7803-2608-3","10.1109/STRQA.1994.526399","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=526399","","System testing;Software testing;Costs;Programming;Systems engineering and theory;Project management;Silver;Process planning;Monitoring;Quality assurance","software development management;project management;program testing;software quality;software cost estimation","zero-defect product;End-To-End test process;competitive market place;software quality;software project cost;schedule;product release steps;software development project;release management","","1","","11","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Looking for Patterns in Code Bad Smells Relations","B. Walter; P. Martenka","Inst. of Comput. Sci., Poznan Univ. of Technol., Poznan, Poland; Inst. of Comput. Sci., Poznan Univ. of Technol., Poznan, Poland","2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops","14 Jul 2011","2011","","","465","466","Code smells are the named design anomalies that indicate to a need for refactoring. Due to their diverse and ambiguous nature, their identification in code requires complex methods. In the paper we formulate a hypothesis that some smells make associations that are repeatable and can be treated as patterns. We present also early results of investigation of two Large Class-related patterns.","","978-0-7695-4345-1","10.1109/ICSTW.2011.89","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5954448","code smell;refactoring patterns","Measurement;Software;Publishing;Software reliability;Taxonomy;Software engineering;Programming","software maintenance","code bad smell relation;software refactoring;code pattern","","1","","10","","14 Jul 2011","","","IEEE","IEEE Conferences"
"Testing Cyber-Physical Systems via Evolutionary Algorithms and Machine Learning","S. Nejati",University of Luxembourg,"2019 IEEE/ACM 12th International Workshop on Search-Based Software Testing (SBST)","26 Aug 2019","2019","","","1","1","Cyber-Physical Systems (CPS) are systems or systems of systems made up of collaborating computational elements that control physical entities. CPS are developed in diverse domains ranging from automotive and aerospace to medical systems. This keynote argues that search-based techniques are a suitable match for testing CPS as they can handle complex continuous behaviors, scale to large test input spaces and are applicable to black-box systems such as physics-based simulators used in CPS development. In addition, the keynote demonstrates how search-based techniques can be flexibly combined with machine learning to improve search effectiveness and extend test results with explanatory information.","","978-1-7281-2233-5","10.1109/SBST.2019.00008","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812192","cyber-physical systems;meta-heuristic search;machine learning;search-based testing","Testing;Machine learning;Evolutionary computation;Computational modeling;Tools;Cyber-physical systems;Heuristic algorithms","cyber-physical systems;evolutionary computation;learning (artificial intelligence);program testing;search problems","medical systems;search-based techniques;test input spaces;black-box systems;physics-based simulators;CPS development;machine learning;Cyber-Physical Systems;control physical entities;search effectiveness;collaborating computational element","","5","","12","","26 Aug 2019","","","IEEE","IEEE Conferences"
"Modeling App Behavior from Multiple Artifacts","E. Kowalczyk","Dept. of Comput. Sci., Univ. of Maryland, College Park, MD, USA","2016 IEEE International Conference on Software Testing, Verification and Validation (ICST)","21 Jul 2016","2016","","","385","386","Understanding the behavior of a mobile application is typically obtained from static or dynamic artifacts including an app's market page. However, each of these artifacts have limitations which make the resulting models of behavior incomplete. In response, this work asks can a technique which combines a larger, more diverse set of artifacts extracted from an app's executable, runtime behavior and market page construct more accurate models of app behavior? And if so, which artifacts and features are most valuable when doing so?","","978-1-5090-1827-7","10.1109/ICST.2016.52","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7515493","","Unified modeling language;Software;Runtime;Data mining;Documentation;Google;Androids","Internet;mobile computing","mobile application behavior;dynamic artifacts;static artifacts;application market page;runtime behavior;multiple artifacts","","2","","17","","21 Jul 2016","","","IEEE","IEEE Conferences"
"Testing and Quality Validation for AI Software–Perspectives, Issues, and Practices","C. Tao; J. Gao; T. Wang","College of Computer Science and Technology, Nanjing University of Aeronautics and Astronautics, Nanjing, China; Department of Computer Engineering, San José State University, San Jose, CA, USA; College of Computer Science and Technology, Nanjing University of Aeronautics and Astronautics, Nanjing, China","IEEE Access","5 Sep 2019","2019","7","","120164","120175","With the fast growth of artificial intelligence and big data computing technologies, more and more software service systems have been developed using diverse machine learning models and technologies to make business and intelligent decisions based on their multimedia input to achieve intelligent features, such as image recognition, recommendation, decision making, prediction, etc. Nevertheless, there are increasing quality problems resulting in erroneous testing costs in enterprises and businesses. Existing work seldom discusses how to perform testing and quality validation for AI software. This paper focuses on quality validation for AI software function features. The paper provides our understanding of AI software testing for new features and requirements. In addition, current AI software testing categories are presented and different testing approaches are discussed. Moreover, test quality assessment and criteria analysis are illustrated. Furthermore, a practical study on quality validation for an image recognition system is performed through a metamorphic testing method. Study results show the feasibility and effectiveness of the approach.","2169-3536","","10.1109/ACCESS.2019.2937107","National Basic Research Program of China (973 Program)(grant numbers:2018YFB1003900); National Natural Science Foundation of China(grant numbers:61402229,61602267); Collaborative Innovation Center of Novel Software Technology and Industrialization; Fundamental Research Funds for the Central Universities(grant numbers:NS2019058); State Key Laboratory of Novel Software Technology(grant numbers:KFKT2018B19); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811507","AI software quality validation;AI testing;testing AI software","Artificial intelligence;Software;Software testing;Data models;Quality assurance;Big Data","Big Data;image recognition;learning (artificial intelligence);program testing;software quality","artificial intelligence;big data computing technologies;software service systems;decision making;quality validation;AI software function features;test quality assessment;image recognition system;metamorphic testing method;machine learning models;AI software testing categories","","7","","49","CCBY","23 Aug 2019","","","IEEE","IEEE Journals"
"Agaric — A hybrid cloud based testing platform","J. Wu; C. Wang; Y. Liu; L. Zhang","School of Computer Science and Engineering, Beihang Univeristy (BUAA), Beijing, China; School of Computer Science and Engineering, Beihang Univeristy (BUAA), Beijing, China; School of Computer Science and Engineering, Beihang Univeristy (BUAA), Beijing, China; School of Computer Science and Engineering, Beihang Univeristy (BUAA), Beijing, China","2011 International Conference on Cloud and Service Computing","26 Jan 2012","2011","","","87","94","Cloud computing technology enables developers spend much more time on application quality without considering computing resource constraint, load balancing and performance tuning, etc. It raises challenges along with the benefits it offers to software testing. This paper is motivated with the concerns on how to test the online web applications in a scalable and diverse way. The resources occupied in the proposed cloud testing are diverse in computing ability, network performance, and software configuration (including operating system and browser, etc.). This paper at first identifies the eight unique features to define cloud testing. Then, this paper introduces the design of Agaric - hybrid cloud based testing platform. In Agaric we use both the diverse internet distributed and user owned computing resources, and the centered computing resources. The key to organize the test network is the proposed Test Flow Control Protocol (TFCP). TFCP is verified formally with Colored Petri Net and the platform is evaluated with both controlled and uncontrolled experiments.","","978-1-4577-1637-9","10.1109/CSC.2011.6138558","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6138558","software testing;cloud computing;cloud testing","Testing;Cloud computing;Protocols;Reliability;Servers","cloud computing;Internet;Petri nets;program testing;program verification;quality of service;resource allocation","software testing;online Web application;cloud computing technology;computing ability;network performance;Agaric;hybrid cloud based testing platform;Internet;centered computing resources;user owned computing resources;test flow control protocol;TFCP verification;colored Petri net;software configuration","","6","","11","","26 Jan 2012","","","IEEE","IEEE Conferences"
"Estimating Fault Numbers Remaining After Testing","M. Roper","Dept. Comput. & Inf. Sci., Univ. of Strathclyde, Glasgow, UK","2013 IEEE Sixth International Conference on Software Testing, Verification and Validation","29 Jul 2013","2013","","","272","281","Testing is an essential component of the software development process, but also one which is exceptionally difficult to manage and control. For example, it is well understood that testing techniques are not guaranteed to detect all faults, but more frustrating is that after the application of a testing technique the tester has little or no knowledge of how many faults might still be left undiscovered. This paper investigates the performance of a range of capture-recapture models to determine the accuracy with which they predict the number of defects remaining after testing. The models are evaluated with data from two empirical testing-related studies and from one larger publicly available project and the factors affecting the accuracy of the models are analysed. The paper also considers how additional information (such as structural coverage data) may be used to improve the accuracy of the estimates. The results demonstrate that diverse sets of faults resulting from different testers using different techniques tend to produce the most accurate results, and also illustrate the sensitivity of the estimators to the patterns of fault data.","2159-4848","978-0-7695-4968-2","10.1109/ICST.2013.43","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6569739","Testing;Fault Estimation;Capture-Recapture","Testing;Animals;Charge carrier processes;Data models;Software;Sociology;Statistics","program testing;software fault tolerance","fault number estimation;software testing;software development process;fault detection;capture-recapture model;empirical testing","","2","","22","","29 Jul 2013","","","IEEE","IEEE Conferences"
"Generating Tests for the Discovery of Security Flaws in Product Variants","F. Araújo; I. Medeiros; N. Neves","Universidade de Lisboa,LASIGE, Faculdade de Ciências,Portugal; Universidade de Lisboa,LASIGE, Faculdade de Ciências,Portugal; Universidade de Lisboa,LASIGE, Faculdade de Ciências,Portugal","2020 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","4 Aug 2020","2020","","","133","142","Industrial products, like vehicles and trains, integrate embedded systems implementing diverse and complicated functionalities. Such functionalities are programmable by software and contain a multitude of parameters necessary for their configuration, which have been increasing due to the market diversification and customer demand. In addition, industrial products are often built by aggregating different software parts (components), constituting thus product variants. Product variants with such variability need to be tested adequately, in particular if one is concerned with security vulnerabilities. While efficient automated testing approaches already exist, such as fuzzing, no tool is able to use results from previous testing campaigns to increase the efficiency of security testing the next product variant that shares certain functionalities. This paper presents an approach that can ignore already covered functionalities by previous tests and give more importance to blocks of code that have yet to be checked. The benefit is to avoid repeating unnecessary work, hence increasing the speed and the coverage in the new variant. The approach was implemented in a tool based on the AFL fuzzer and was validated with a set of programs of different versions. The experimental results show that the tool can perform better than AFL in our testing scenario.","","978-1-7281-1075-2","10.1109/ICSTW50294.2020.00033","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9155944","Fuzzing;Vulnerability detection;Coverage testing;Software Variant testing;Software security","Software;Fuzzing;Computer bugs;Security;Tools","embedded systems;production engineering computing;program testing;security of data","security flaws;testing scenario;previous tests;security testing;previous testing campaigns;efficient automated testing approaches;different software parts;complicated functionalities;diverse functionalities;industrial products;product variant","","","","27","","4 Aug 2020","","","IEEE","IEEE Conferences"
"Using mutation testing to measure behavioural test diversity","F. G. d. O. Neto; F. Dobslaw; R. Feldt","Chalmers and the University of Gothenburg,Dept. of Computer Science and Engineering,Gothenburg,Sweden; Chalmers and the University of Gothenburg,Dept. of Computer Science and Engineering,Gothenburg,Sweden; Chalmers and the University of Gothenburg,Dept. of Computer Science and Engineering,Gothenburg,Sweden","2020 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","4 Aug 2020","2020","","","254","263","Diversity has been proposed as a key criterion to improve testing effectiveness and efficiency. It can be used to optimise large test repositories but also to visualise test maintenance issues and raise practitioners' awareness about waste in test artefacts and processes. Even though these diversitybased testing techniques aim to exercise diverse behavior in the system under test (SUT), the diversity has mainly been measured on and between artefacts (e.g., inputs, outputs or test scripts). Here, we introduce a family of measures to capture behavioural diversity (b-div) of test cases by comparing their executions and failure outcomes. Using failure information to capture the SUT behaviour has been shown to improve effectiveness of history-based test prioritisation approaches. However, historybased techniques require reliable test execution logs which are often not available or can be difficult to obtain due to flaky tests, scarcity of test executions, etc. To be generally applicable we instead propose to use mutation testing to measure behavioral diversity by running the set of test cases on various mutated versions of the SUT. Concretely, we propose two specific b-div measures (based on accuracy and Matthew's correlation coefficient, respectively) and compare them with artefact-based diversity (a-div) for prioritising the test suites of 6 different open-source projects. Our results show that our b-div measures outperform a-div and random selection in all of the studied projects. The improvement is substantial with an average increase in average percentage of faults detected (APFD) of between 19% to 31% depending on the size of the subset of prioritised tests.","","978-1-7281-1075-2","10.1109/ICSTW50294.2020.00051","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9155915","diversity-based testing;test prioritisation;test selection;empirical study","Testing;Fault detection;Reliability;Optimization;Atmospheric measurements;Particle measurements;Diversity reception","fault diagnosis;program testing","reliable test execution logs;flaky tests;test executions;mutation testing;b-div measures;artefact-based diversity;test suites;prioritised tests;behavioural test diversity;testing effectiveness;test repositories;diversity-based testing techniques;open-source projects;random selection;history-based test;SUT behaviour;failure outcomes;test scripts;diverse behavior;test artefacts;test maintenance issues","","","","31","","4 Aug 2020","","","IEEE","IEEE Conferences"
"A Theoretical and Empirical Study of Diversity-Aware Mutation Adequacy Criterion","D. Shin; S. Yoo; D. Bae","KAIST, Daejeon, Republic of Korea; KAIST, Daejeon, Republic of Korea; KAIST, Daejeon, Republic of Korea","IEEE Transactions on Software Engineering","14 Oct 2018","2018","44","10","914","931","Diversity has been widely studied in software testing as a guidance towards effective sampling of test inputs in the vast space of possible program behaviors. However, diversity has received relatively little attention in mutation testing. The traditional mutation adequacy criterion is a one-dimensional measure of the total number of killed mutants. We propose a novel, diversity-aware mutation adequacy criterion called distinguishing mutation adequacy criterion, which is fully satisfied when each of the considered mutants can be identified by the set of tests that kill it, thereby encouraging inclusion of more diverse range of tests. This paper presents the formal definition of the distinguishing mutation adequacy and its score. Subsequently, an empirical study investigates the relationship among distinguishing mutation score, fault detection capability, and test suite size. The results show that the distinguishing mutation adequacy criterion detects 1.33 times more unseen faults than the traditional mutation adequacy criterion, at the cost of a 1.56 times increase in test suite size, for adequate test suites that fully satisfies the criteria. The results show a better picture for inadequate test suites; on average, 8.63 times more unseen faults are detected at the cost of a 3.14 times increase in test suite size.","1939-3520","","10.1109/TSE.2017.2732347","Information & communications Technology Promotion (IITP); Korea government (MSIP)(grant numbers:R0126-17-1101); Software R&D for Model-based Analysis and Verification of Higher-order Large Complex System; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7994647","Mutation testing;test adequacy criteria;diversity","Fault detection;Software engineering;Software testing;Correlation;Indexes;Subspace constraints","fault diagnosis;program testing;software engineering","empirical study;diversity-aware mutation adequacy criterion;software testing;test inputs;mutation testing;distinguishing mutation score;distinguishing mutation adequacy criterion;adequate test suites;inadequate test suites;theoretical study;program behaviors;killed mutants;fault detection capability","","13","","58","IEEE","27 Jul 2017","","","IEEE","IEEE Journals"
"Automated Test Suite Generation for Time-Continuous Simulink Models","R. Matinnejad; S. Nejati; L. C. Briand; T. Bruckmann","SnT Centre, Univ. of Luxembourg, Luxembourg, Luxembourg; SnT Centre, Univ. of Luxembourg, Luxembourg, Luxembourg; SnT Centre, Univ. of Luxembourg, Luxembourg, Luxembourg; Delphi Automotive Syst., Luxembourg","2016 IEEE/ACM 38th International Conference on Software Engineering (ICSE)","3 Apr 2017","2016","","","595","606","All engineering disciplines are founded and rely on models, although they may differ on purposes and usages of modeling. Interdisciplinary domains such as Cyber Physical Systems (CPSs) seek approaches that incorporate different modeling needs and usages. Specifically, the Simulink modeling platform greatly appeals to CPS engineers due to its seamless support for simulation and code generation. In this paper, we propose a test generation approach that is applicable to Simulink models built for both purposes of simulation and code generation. We define test inputs and outputs as signals that capture evolution of values over time. Our test generation approach is implemented as a meta-heuristic search algorithm and is guided to produce test outputs with diverse shapes according to our proposed notion of diversity. Our evaluation, performed on industrial and public domain models, demonstrates that: (1) In contrast to the existing tools for testing Simulink models that are only applicable to a subset of code generation models, our approach is applicable to both code generation and simulation Simulink models. (2) Our new notion of diversity for output signals outperforms random baseline testing and an existing notion of signal diversity in revealing faults in Simulink models. (3) The fault revealing ability of our test generation approach outperforms that of the Simulink Design Verifier, the only testing toolbox for Simulink.","1558-1225","978-1-4503-3900-1","10.1145/2884781.2884797","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886937","Simulink models;Software testing;Time-continuous behaviors;Search-based software testing;Output diversity;Signal features;Structural coverage;Simulink Design Verifier (SLDV)","Software packages;Computational modeling;Fuels;Testing;Mathematical model;Shape","automatic testing;program compilers;program testing;search problems","automated test suite generation;time-continuous Simulink models;code generation;test inputs;test outputs;meta-heuristic search algorithm;industrial domain models;public domain models;simulation Simulink models;signal diversity;fault revealing ability","","17","","61","","3 Apr 2017","","","IEEE","IEEE Conferences"
"Metamorphic Testing for Cybersecurity","T. Y. Chen; F. -C. Kuo; W. Ma; W. Susilo; D. Towey; J. Voas; Z. Q. Zhou",Swinburne University of Technology; Swinburne University of Technology; University of Wollongong; University of Wollongong; University of Nottingham Ningbo China; US National Institute of Standards and Technology; University of Wollongong,"Computer","13 Jun 2016","2016","49","6","48","55","Metamorphic testing (MT) can enhance security testing by providing an alternative to using a test oracle, which is often unavailable or impractical. The authors report how MT detected previously unknown bugs in real-world critical applications such as code obfuscators, giving evidence that software testing requires diverse perspectives to achieve greater cybersecurity.","1558-0814","","10.1109/MC.2016.176","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7490306","metamorphic testing;cybersecurity;software testing;oracle problem;cyberthreats;software vulnerability;obfuscator testing;Web testing;Heartbleed bug;logic error;fuzzing","Testing;Computer bugs;Computer security;Program processors","program testing;security of data","metamorphic testing;cybersecurity;security testing;test oracle;MT;code obfuscators;software testing","","49","","16","","13 Jun 2016","","","IEEE","IEEE Magazines"
"The Art, Science, and Engineering of Fuzzing: A Survey","V. J. M. Manès; H. Han; C. Han; S. K. Cha; M. Egele; E. J. Schwartz; M. Woo","KAIST Cyber Security Research Center, Daejeon, Korea; KAIST, Daejeon, Korea; Naver Corp., Daejeon, Korea; KAIST, Daejeon, Korea; Boston University, Boston, MA, USA; Software Engineering Institute, Carnegie Mellon University, Pittsburgh, PA, USA; Carnegie Mellon University, Pittsburgh, PA, USA","IEEE Transactions on Software Engineering","11 Nov 2021","2021","47","11","2312","2331","Among the many software testing techniques available today, <italic>fuzzing</italic> has remained highly popular due to its conceptual simplicity, its low barrier to deployment, and its vast amount of empirical evidence in discovering real-world software vulnerabilities. At a high level, fuzzing refers to a process of repeatedly running a program with generated inputs that may be syntactically or semantically malformed. While researchers and practitioners alike have invested a large and diverse effort towards improving fuzzing in recent years, this surge of work has also made it difficult to gain a comprehensive and coherent view of fuzzing. To help preserve and bring coherence to the vast literature of fuzzing, this paper presents a unified, general-purpose model of fuzzing together with a taxonomy of the current fuzzing literature. We methodically explore the design decisions at every stage of our model fuzzer by surveying the related literature and innovations in the art, science, and engineering that make modern-day fuzzers effective.","1939-3520","","10.1109/TSE.2019.2946563","Institute of Information & communications Technology Planning & Evaluation(grant numbers:2019-0-01697); Development of Automated Vulnerability Discovery Technologies for Blockchain Platform Security; Siemens; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8863940","Software security;automated software testing;fuzzing;fuzz testing","Fuzzing;Security;Computer bugs;Terminology","program testing;security of data","software testing techniques;real-world software vulnerabilities;fuzzing","","39","","250","IEEE","11 Oct 2019","","","IEEE","IEEE Journals"
"Reusing testing of reusable software components","C. C. Michael","Reliable Software Technol. Corp., USA","Proceedings of COMPASS '97: 12th Annual Conference on Computer Assurance","6 Aug 2002","1997","","","97","104","A software component that is reused in diverse settings can experience diverse operational environments. Unfortunately, a change in the operating environment can also invalidate past experience about the component's quality of performance. Indeed, most statistical methods for estimating software quality assume that the operating environment remains the same. Specifically, the probability density governing the selection of program inputs is assumed to remain constant. However, intuition suggests that such a stringent requirement is unnecessary. If a component has been executed very many times in one environment without experiencing a failure, one would expect it to be relatively failure-free in other similar environments. This paper seeks to quantify that intuition. The question asked is, ""how much can be said about a component's probability of failure in one environment after observing its operation in other environments?"" Specifically, we develop bounds on the component's probability of failure in the new environment based on its past behavior.","","0-7803-3979-7","10.1109/CMPASS.1997.613254","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=613254","","Software testing;Software reusability;Software measurement;Statistical analysis;Software quality;Density measurement;Probability density function","software reusability;program testing;software quality;software performance evaluation;statistical analysis;probability;software fault tolerance","reusable software component testing;diverse operational environments;software quality;software performance;statistical methods;probability density;program inputs;software failure;probability of failure","","3","1","7","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Communicating with Your Customers Determining Their Needs","E. C. Dzupinka; M. D. Langenbahn; M. E. Randall; C. M. Sliva",International Business Machines; NA; NA; NA,"Proceedings of the 1987 IEEE Southern Tier Technical Conference, 1987.","10 Dec 2002","1987","","","244","252","One of the more difficult aspects of providing a product to a customer is determining what the customer really needs. Frequently, the customer is not sure exactly what they need. They just have a problem and they are looking to you to provide the solution. The difficulty in determining product requirements is compounded by the fact that Test Design Automation (TDA) products need to be useful to a wide range of customers with diverse needs. That is the situation in which we found ourselves. TDA has the responsibility of supplying the IBM Corporation with its needed Test Generation and Fault Simulation capabilities. These products are software solutions designed to run on a wide range of general purpose system 370 computers under both VM and MVS operating systems. Our customer mix is a widely diverse set of product development groups; from the designers of the 3090 series in Poughkeepsie to a typewriter design group in Uxington, Kentucky. Not only is the product mix diverse, but also the geographic locations of the development groups. We serve product development labs worldwide. First, we had to be able to identify our ""representative"" customer. Once this was done we would need to open up more direct lines of communication with these customers. The method we used to improve upon these problems is the subject for this paper. It will cover the cross-section of the group which went about solving the problems; the methods chosen to attack the problems; implementation; and the mechanisms put into place to continue the work after the group's dissolution.","","","10.1109/STIER.1987.716400","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=716400","","Automatic testing;Design automation;Product design;Software testing;Documentation;Programming profession;Ducts;Software design;Virtual manufacturing;Operating systems","","","","","","4","","10 Dec 2002","","","IEEE","IEEE Conferences"
"Industrial real-time regression testing and analysis using firewalls","L. White; B. Robinson","Dept. of EECS, Case Western Reserve Univ., Cleveland, OH, USA; NA","20th IEEE International Conference on Software Maintenance, 2004. Proceedings.","22 Nov 2004","2004","","","18","27","Industrial real-time systems are complex and need to be thoroughly tested before being released to the customer. We have found that last minute changes are often responsible for the introduction of defects, causing serious problems for the customer. We demonstrate that these defects can be introduced into real-time software in diverse ways, and there is no simple regression testing method that can deal with all of these defect sources. This paper describes the application of a testing firewall for regression testing whose form differs depending upon the defect. The idea of the testing firewall is to limit the regression testing to those potentially affected system elements directly dependent upon changed system elements, and then to thoroughly test these elements. This has resulted in substantial savings in regression testing costs, and yet has been effective in detecting critical defects with significant implication in terms of customer acceptance at ABB. Empirical studies are reported for these experiences in an industrial setting.","1063-6773","0-7695-2213-0","10.1109/ICSM.2004.1357786","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1357786","","Software testing;System recovery;System testing;Real time systems;Costs;Software design;Software maintenance;Application software;Software quality;Robustness","program testing;real-time systems;system recovery;regression analysis;authorisation","industrial real-time systems;regression testing;regression analysis;testing firewall;real-time software;customer acceptance;ABB;software testing;software defect detection;deadlock","","18","","23","","22 Nov 2004","","","IEEE","IEEE Conferences"
"Achieving dependability throughout the development process: a distributed software experiment","J. P. J. Kelly; S. C. Murphy","Dept. of Electr. & Comput. Eng., California Univ., Santa Barbara, CA, USA; NA","IEEE Transactions on Software Engineering","6 Aug 2002","1990","16","2","153","165","Distributed software engineering techniques and methods for improving the specification and testing phases are considered. To examine these issues, an experiment was performed using the design diversity approach in the specification, design, implementation, and testing of distributed software. In the experiment, three diverse formal specifications were used to produce multiple independent implementations of a distributed communication protocol in Ada. The problems encountered in building complex concurrent processing systems in Ada were also studied. Many pitfalls were discovered in mapping the formal specifications into Ada implementations.<<ETX>></ETX>","1939-3520","","10.1109/32.44379","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=44379","","Software testing;Automatic testing;Fault tolerance;Software engineering;Formal specifications;Hardware;Fault detection;Software performance;Protocols;Buildings","Ada;computer communications software;data communication systems;distributed processing;formal specification;program testing;protocols","distributed software engineering;B/B testing;automated testing;software testing;dependability;multiple independent implementations;distributed communication protocol;Ada;complex concurrent processing systems","","18","","29","","6 Aug 2002","","","IEEE","IEEE Journals"
"The effect of testing on reliability of fault-tolerant software","P. Popov; B. Littlewood","Centre for Software Reliability, City Univ., London, UK; Centre for Software Reliability, City Univ., London, UK","International Conference on Dependable Systems and Networks, 2004","26 Jul 2004","2004","","","265","274","Previous models have investigated the impact upon diversity - and hence upon the reliability of fault-tolerant software built from 'diverse' versions - of the variation in 'difficulty' of demands over the demand space. These models are essentially static, taking a single snapshot view of the system. In this paper, we consider a generalisation in which the individual versions are allowed to evolve - and their reliability to grow - through debugging. In particular, we examine the trade-off that occurs in testing between, on the one hand, the increasing reliability of individual versions, and on the other hand the possible diminution of diversity.","","0-7695-2052-9","10.1109/DSN.2004.1311896","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1311896","","Software testing;Fault tolerance;Fault tolerant systems;Battery powered vehicles;Software reliability;Debugging;Stochastic processes;Parameter estimation;Computer industry;Hardware","program testing;software fault tolerance;reliability;program debugging","reliability testing;fault-tolerant software;software debugging;software testing","","9","","7","","26 Jul 2004","","","IEEE","IEEE Conferences"
"Dynamic Exerciser Template Weighting in x86 Processor Verification","A. Wahba; J. Hohnerlein; F. Rahman; L. Wang","Dept. of ECE, Univ. of California Santa Barbara, Santa Barbara, CA, USA; NA; NA; Dept. of ECE, Univ. of California Santa Barbara, Santa Barbara, CA, USA","2017 18th International Workshop on Microprocessor and SOC Test and Verification (MTV)","28 Jun 2018","2017","","","26","31","Modern digital designs are becoming increasingly complex, which makes their verification a harder process. In modern processors, Random ISA level verification is used to run many diverse stimulus programs to verify a wide variety of desired properties. Random verification uses Exercisers to randomly generate functional ISA level stimulus using predefined templates. The number of simulation slots that are assigned to each template is determined by their assigned weights which reflect the importance of the template, and is currently determined by expert engineers. In this paper, we present a tool to dynamically assign a proper weight to each template based on its ability to successfully generate stimulus programs and its potential of capturing defects in the current phase of the design. The tool is integrated to the verification of a state of the art x86 processor and it was able to hit four new and unique bugs, as well as achieving 40% reduction in the rate of failed to generate stimulus programs while maintaining pass rate and number of signatures hit unchanged.","2332-5674","978-1-5386-3351-9","10.1109/MTV.2017.19","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8396945","","Computer bugs;Tools;Measurement;Mathematical model;Software;Testing;Machine learning","microprocessor chips;program verification","modern digital designs;x86 processor verification;dynamic exerciser template weighting;simulation slots;predefined templates;functional ISA level stimulus;diverse stimulus programs;Random ISA level verification;modern processors","","1","","8","","28 Jun 2018","","","IEEE","IEEE Conferences"
"Implementing Continuous Integration towards rapid application development","F. A. Abdul; M. C. S. Fhang","Software Development Lab, Application Process, MIMOS Berhad, Kuala Lumpur, Malaysia; Corporate Quality, Process Quality, MIMOS Berhad, Kuala Lumpur, Malaysia","2012 International Conference on Innovation Management and Technology Research","12 Jul 2012","2012","","","118","123","If one is working in isolation, Continuous Integration may not be good for him or her. However, not many of us have the lavishness of working alone in software development. Most software development are done in a team, leveraging on diverse functional groups delivering different modules or subsystem. In an enterprise where development of software involves a collection of developers working on modules, integration management is absolutely a necessity; we need to find ways to work efficiently and effectively to make the long and heavy integration process to a simpler and joyful task. The value of an integrated, streamlined build process is something that any software engineers would immediately recognize, all this needs lead us to the philosophy of Continuous Integration. It is the intent of this paper to illustrate a journey and learning process in setting up a Continuous Integration for a software group.","","978-1-4673-0654-6","10.1109/ICIMTR.2012.6236372","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6236372","Continuous Integration;Software Configuration Management;Build Process","Servers;Software;Testing;Packaging;Programming;Automation;Libraries","software development management","continuous integration;rapid application development;software development;diverse functional groups;streamlined build process;software engineers;software group","","1","3","3","","12 Jul 2012","","","IEEE","IEEE Conferences"
"Comparing decision aids for technology transfers","T. H. Murray",NA,"International Conference on Information-Decision-Action Systems in Complex Organisations, 1992.","6 Aug 2002","1992","","","100","104","Proponents of various decision aid systems loudly proclaim the merits of 'their' system over all competition, especially 'brand X,' and justify their own process because it does a 'better job of decision making' than that done by competing products. In order to compare such decision aids independently, a systematic process was conceived, designed, constructed, tested and implemented. The purpose was to use automation to standardize a decision process among diverse adversaries in a dynamic, complex, technological environment. The process first step structured the factors needed to arrive at an equitable decision on technology transfer from domestic to foreign ownership, control, or influence. The factors were identified by participants in the decentralized decision process. Using group problem solving techniques, the most important factors were identified and ranked. Factor weights were determined with automated aids. Four decision processes were evaluated to determine their accuracy in arriving at a decision dealing with proposed technology transfers. The author deals with the process of identifying the factors and testing the decision aids.<<ETX>></ETX>","","0-85296-541-9","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=140394","","Decision support systems;Government data processing;Software testing;Technology transfer","decision support systems;government data processing;program testing;software selection;technology transfer","technology transfers;decision aid systems;decision making;competing products;systematic process;decision process;diverse adversaries;technological environment;equitable decision;foreign ownership;decentralized decision process;group problem solving techniques;automated aids","","1","","","","6 Aug 2002","","","IET","IET Conferences"
"Correspondent computing for software implementation fault tolerance","P. . -N. Lee; J. Blankenship","Dept. of Comput. Sci., Houston Univ., University Park, TX, USA; Dept. of Comput. Sci., Houston Univ., University Park, TX, USA","Proceedings of the 1990 Symposium on Applied Computing","6 Aug 2002","1990","","","12","19","Correspondent computing, which achieves diversity through correspondent operations and uses a decision algorithm which is based on correspondence checking rather than majority voting or assertion checking, is proposed. The significance of this is that multiple diverse software versions are produced from a single algorithm and the assertions used in the correspondence test are more exact and easier to formulate. The ability of the correspondent computing method to generate correspondent versions systematically is further enhanced by the introduction of 'partial' reciprocal operations. Their role in creating reciprocal correspondent program modules tolerant to software implementation faults is explored in an actual program which implements a well-known triangle algorithm.<<ETX>></ETX>","","0-8186-2031-5","10.1109/SOAC.1990.82133","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=82133","","Fault tolerance;Fault tolerant systems;Voting;Software algorithms;Programming profession;Software testing;Software systems;Application software;Computer science;Space vehicles","fault tolerant computing;software engineering","software implementation fault tolerance;correspondent operations;decision algorithm;correspondence checking;multiple diverse software versions;correspondence test;correspondent computing method;reciprocal operations;reciprocal correspondent program modules;well-known triangle algorithm","","","","8","","6 Aug 2002","","","IEEE","IEEE Conferences"
"A Parallel Self-Similar Network Traffic Simulation Method on a Large Time Scale","J. Tian; J. Xu; H. C. Zhang","Inst. of Machine Intell., Nankai Univ., Tianjin; Inst. of Machine Intell., Nankai Univ., Tianjin; Inst. of Machine Intell., Nankai Univ., Tianjin","2008 International Symposium on Information Science and Engineering","30 Dec 2008","2008","2","","149","153","Measurements of network traffic have shown that self-similarity is a ubiquitous phenomenon spanning across diverse network environments. Previously, the researchers designed network traffic simulation system with sequential methods to generate a small number of network traffics in a short time scale. But there is one difficulty in simulating network traffics using parallel methods with high accuracy in a large time scale. In this paper, we present a parallel method of generating self-similar network traffic based on parallel algorithm and implement it via TCP/IP. We also carry out some experiments to show that this parallel method can generate highly accurate network simulation traffics with specified Hurst parameters.","2160-1291","978-0-7695-3494-7","10.1109/ISISE.2008.194","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4732363","Self-Similar Model;Network Traffic Simulation;Parallel Simulation Algorithm","Telecommunication traffic;Traffic control;System testing;Software testing;Computer networks;Software systems;Software tools;Automatic testing;Network synthesis;Computational modeling","parallel algorithms;telecommunication traffic;transport protocols;ubiquitous computing","parallel self-similar network traffic simulation method;network traffic measurements;ubiquitous phenomenon;diverse network environments;TCP;IP","","","","6","","30 Dec 2008","","","IEEE","IEEE Conferences"
"Review Sharing via Deep Semi-Supervised Code Clone Detection","C. Guo; H. Yang; D. Huang; J. Zhang; N. Dong; J. Xu; J. Zhu","College of Computer Science, Nankai University, Tianjin, China; College of Computer Science, Nankai University, Tianjin, China; College of Computer Science, Nankai University, Tianjin, China; College of Artificial Intelligence, Nankai University, Tianjin, China; School of Computing, National University of Singapore, Singapore; College of Artificial Intelligence, Nankai University, Tianjin, China; College of Software, Nankai University, Tianjin, China","IEEE Access","7 Feb 2020","2020","8","","24948","24965","Code review as a typical type of user feedback has recently drawn increasing attentions for improving code quality. To carry out research on code review, sufficient review data is normally required. As a result, recent efforts commonly focus on analysis for projects with sufficient reviews (called “s-projects”), rather than projects with extremely few ones (called “f-projects”). Actually, through statistics on public platforms, the latter ones dominate open source software, in which novel approaches should be explored to improve their review-based code improvement. In this paper, we try to address the problem via building a review sharing channel where the informative review can be reasonably delivered from s-projects to the f-projects. To ensure the accuracy of shared reviews, we introduce a novel code clone detection model based on Convolutional Neural Network (CNN), and build suitable “s-projects, f-projects” pairs through the clone detection. Especially, to alleviate the dataset heterogeneity between the training and testing, an autoencoder-based semi-supervised learning strategy is employed. Furthermore, to improve the sharing experience, heuristic filtering tactics are applied to reduce the time cost. Meanwhile, the LDA (Latent Dirichlet Allocation)-based ranking algorithm is used for presenting diverse review themes. We have implemented the sharing channel as a prototype system RSharer+, which contains three representative modules: data preprocessing, code clone detection and review presentation. The collected datasets are first transformed into context-sensitive numerical vectors in the data proprecessing. Then in the clone detection, data vectors are trained and tested on the BigCloneBench and real code-review pairs. At last, the presentation module provides review classification and theme extraction for better sharing experience. Extensive comparative experiments on hundreds of real labelled code fragments demonstrate the precision of clone detection and the effectiveness of review sharing.","2169-3536","","10.1109/ACCESS.2020.2966532","Science and Technology Planning Project of Tianjin, China(grant numbers:17JCZDJC30700,17YFZCGX00610,18ZXZNGX00310); Natural Science Foundation of Tianjin City(grant numbers:19JCQNJC00300); Fundamental Research Funds for the Central Universities(grant numbers:63191402); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8959206","Code clone;software review;deep learning;semi-supervised CNN;review sharing","Cloning;Deep learning;Computational modeling;Syntactics;Computer bugs;Software;Testing","convolutional neural nets;learning (artificial intelligence);public domain software;software maintenance;software quality","RSharer+;sharing channel;latent Dirichlet allocation-based ranking algorithm;heuristic filtering tactics;f-projects;s-projects;CNN;convolutional neural network;user feedback;labelled code fragments;review classification;real code-review pairs;diverse review themes;LDA-based ranking algorithm;sharing experience;autoencoder-based semisupervised learning strategy;novel code clone detection model;shared reviews;informative review;review sharing channel;review-based code improvement;sufficient review data;code quality;code review;deep semisupervised code clone detection","","2","","73","CCBY","14 Jan 2020","","","IEEE","IEEE Journals"
"Taming a Fuzzer Using Delta Debugging Trails","Y. Pei; A. Christi; X. Fern; A. Groce; W. Wong","Sch. of Electr. Eng. & Comput. Sci., Oregon State Univ., Corvallis, OR, USA; Sch. of Electr. Eng. & Comput. Sci., Oregon State Univ., Corvallis, OR, USA; Sch. of Electr. Eng. & Comput. Sci., Oregon State Univ., Corvallis, OR, USA; Sch. of Electr. Eng. & Comput. Sci., Oregon State Univ., Corvallis, OR, USA; Sch. of Electr. Eng. & Comput. Sci., Oregon State Univ., Corvallis, OR, USA","2014 IEEE International Conference on Data Mining Workshop","29 Jan 2015","2014","","","840","843","Fuzzers, or random testing tools, are powerful tools for finding bugs. A major problem with using fuzzersis that they often trigger many bugs that are already known. The fuzzer taming problem addresses this issue by ordering bug-triggering random test cases generated by a fuzzer such that test cases exposing diverse bugs are found early in the ranking. Previous work on fuzzer taming first reduces each test case into a minimal failure-inducing test case using delta debugging, then finds the ordering by applying the Furthest Point First algorithm over the reduced test cases. During the delta debugging process, a sequence of failing test cases is generated (the ""delta debugging trail""). We hypothesize that these additional failing test cases also contain relevant information about the bug and could be useful for fuzzertaming. In this paper, we propose to use these additional failing test cases generated during delta debugging to help tame fuzzers. Our experiments show that this allows for more diverse bugs to be found early in the furthest point first ranking.","2375-9259","978-1-4799-4274-9","10.1109/ICDMW.2014.58","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7022682","Software Testing;Automated Testing;Fuzzing;Fuzzer Taming;Test-Case Reduction","Computer bugs;Debugging;Testing;Engines;Software;Feature extraction;Conferences","program debugging;program testing;software tools","fuzzer taming;delta debugging trails;random testing tools;bug-triggering random test cases;minimal failure-inducing test case;furthest point first ranking algorithm","","","","12","","29 Jan 2015","","","IEEE","IEEE Conferences"
"DeepRoad: GAN-Based Metamorphic Testing and Input Validation Framework for Autonomous Driving Systems","M. Zhang; Y. Zhang; L. Zhang; C. Liu; S. Khurshid","University of Texas at Austin,USA; Shenzhen Key Laboratory of Computational Intelligence, Southern University of Science and Technology,Department of Computer Science and Engineering,China; University of Texas at Dallas,USA; University of Texas at Dallas,USA; University of Texas at Austin,USA","2018 33rd IEEE/ACM International Conference on Automated Software Engineering (ASE)","17 Feb 2020","2018","","","132","142","While Deep Neural Networks (DNNs) have established the fundamentals of image-based autonomous driving systems, they may exhibit erroneous behaviors and cause fatal accidents. To address the safety issues in autonomous driving systems, a recent set of testing techniques have been designed to automatically generate artificial driving scenes to enrich test suite, e.g., generating new input images transformed from the original ones. However, these techniques are insufficient due to two limitations: first, many such synthetic images often lack diversity of driving scenes, and hence compromise the resulting efficacy and reliability. Second, for machine-learning-based systems, a mismatch between training and application domain can dramatically degrade system accuracy, such that it is necessary to validate inputs for improving system robustness. In this paper, we propose DeepRoad, an unsupervised DNN-based framework for automatically testing the consistency of DNN-based autonomous driving systems and online validation. First, DeepRoad automatically synthesizes large amounts of diverse driving scenes without using image transformation rules (e.g. scale, shear and rotation). In particular, DeepRoad is able to produce driving scenes with various weather conditions (including those with rather extreme conditions) by applying Generative Adversarial Networks (GANs) along with the corresponding real-world weather scenes. Second, DeepRoad utilizes metamorphic testing techniques to check the consistency of such systems using synthetic images. Third, DeepRoad validates input images for DNN-based systems by measuring the distance of the input and training images using their VGGNet features. We implement DeepRoad to test three well-recognized DNN-based autonomous driving systems in Udacity self-driving car challenge. The experimental results demonstrate that DeepRoad can detect thousands of inconsistent behaviors for these systems, and effectively validate input images to potentially enhance the system robustness as well.","2643-1572","978-1-4503-5937-5","10.1145/3238147.3238187","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9000040","Software testing;Test generation;Input validation;Deep Neural Networks","","feature extraction;learning (artificial intelligence);mobile robots;neural nets;program testing","system robustness;GAN-based metamorphic testing;input validation framework;image-based autonomous driving systems;artificial driving scenes;synthetic images;machine-learning-based systems;unsupervised DNN-based framework;DNN-based autonomous driving systems;diverse driving scenes;image transformation rules;metamorphic testing techniques;Udacity self-driving car challenge;deeproad;deep neural networks;generative adversarial networks","","78","1","45","","17 Feb 2020","","","IEEE","IEEE Conferences"
"Mobile Compatibility Testing Using Multi-objective Genetic Algorithm","J. Cheng; Y. Zhu; T. Zhang; C. Zhu; W. Zhou","Sch. of Comput., Northwest Polytech. Univ., Xi'an, China; Sch. of Comput., Northwest Polytech. Univ., Xi'an, China; Sch. of Software & Microelectron., Northwest Polytech. Univ., Xi'an, China; Sch. of Software & Microelectron., Northwest Polytech. Univ., Xi'an, China; Sch. of Software & Microelectron., Northwest Polytech. Univ., Xi'an, China","2015 IEEE Symposium on Service-Oriented System Engineering","25 Jun 2015","2015","","","302","307","Mobile compatibility testing has been identified as one urgent and challenging issue. Mobile apps are expected to work on thousand kinds of mobile devices with diverse device features and mobile platforms. So mobile compatibility testing is complex and costly, it is impossible to test mobile apps on all mobile devices and in all environments with limited test resources. Then the question is how to select test devices in cost-effective mobile app compatibility testing. This paper proposes a novel test device selection approach using multi-objective genetic algorithm. Using the proposed approach, the minimum number of mobile devices is selected, and the multiple test coverage requirements are met simultaneously. Furthermore, the case study results have successfully demonstrated that the proposed approach is effective for mobile compatibility testing.","","978-1-4799-8356-8","10.1109/SOSE.2015.36","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7133545","software testing;mobile testing;compatibility testing;clustering algorithm;test coverage","Mobile communication;Testing;Mobile handsets;Biological cells;Genetic algorithms;Sociology;Statistics","genetic algorithms;mobile computing;program testing","cost-effective mobile app compatibility testing;multiobjective genetic algorithm;mobile devices;diverse device features;mobile platforms;limited test resources;test device selection approach;multiple test coverage requirements","","2","","29","","25 Jun 2015","","","IEEE","IEEE Conferences"
"An object model for embedded system development","D. Elegy; R. Gilbert","Battelle Memorial Inst., Richland, WA, USA; Battelle Memorial Inst., Richland, WA, USA","Proceedings of NORTHCON'93 Electrical and Electronics Convention","6 Aug 2002","1993","","","234","238","The successful development and delivery of an embedded system requires the collaboration of many diverse talents from the areas of marketing, project management and electrical, mechanical and software engineering. The management of these projects is complicated by the need to integrate and coordinate the development methodologies from these various disciplines. The paper considers how the application of object oriented techniques to the product development cycle provides a simplified framework for describing, developing and managing the product from concept to delivery.","","0-7803-9972-2","10.1109/NORTHC.1993.505060","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=505060","","Embedded system;Product development;System testing;Object oriented modeling;Project management;Fabrication;Software testing;Collaborative software;Software engineering;Energy consumption","product development;software development management;object-oriented programming;real-time systems;project management","object model;embedded system development;marketing;project management;software engineering;mechanical engineering;electrical engineering;software development methodologies;object oriented programming;product development cycle","","","","","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Ate software, whence - whither","R. T. Oishi","RLG Associates, Inc.","International Automatic Testing Conference AUTOTESTCON '78.","10 Dec 2002","1978","","","210","214","Standardization efforts within ATE software have been aimed pri marily at the languages used to prepare test programs. In the future the diversity of computer con figurations available to ATE will increase tremendously. To take full advantage of this diversity in a coherent manner will require some standardization of operating system features. The primary goal of such standardization should be the operator to computer interface. Given such standardization a wide range of possibilities become available without the disadvantages that diverse operator interfaces impose.","","","10.1109/AUTEST.1978.764367","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=764367","","Standardization;Operating systems;System testing;Programming profession;Costs;Control systems;System software;Manufacturing;Software testing;Computer interfaces","","","","","","","","10 Dec 2002","","","IEEE","IEEE Conferences"
"Validation, verification, and testing: diversity rules","B. Kitchenham; S. Linkman","Keele Univ., UK; NA","IEEE Software","6 Aug 2002","1998","15","4","46","49","Many software project managers try to decide whether to enhance reliability by performing detailed inspections or by doing execution-based testing using operational profiles. The authors regard this as a false choice. Operational-profile-based testing is an important method, but it is not a simple, cost-effective panacea. Instead, they suggest a better approach: a diverse validation, verification, and testing strategy that includes inspections and execution-based testing. Such an approach addresses the more appropriate question of what selection of W and T techniques should a project employ to achieve the functionality and quality that the product requires?.","1937-4194","","10.1109/52.687944","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=687944","","System testing;Software testing;Software systems;Aircraft;Printers;Research and development;Boundary conditions;Reliability engineering","software development management;project management;software reliability;program testing;program verification;software quality","verification;validation;software project management;reliability;inspections;execution-based testing;quality;functionality","","3","","","IEEE","6 Aug 2002","","","IEEE","IEEE Magazines"
"Georgia Tech Software Radio Laboratory","T. G. Pratt","Georgia Institute of Technology, Atlanta, Georgia 30332-0821, USA, thomas.pratt@gtri.gatech.edu","54th ARFTG Conference Digest","12 Mar 2007","2000","36","","1","4","The Georgia Tech Broadband Institute of the Georgia Institute of Technology is establishing a Software Radio Laboratory in the Georgia Center for Advanced Telecommunications Technology (GCATT). The laboratory, which is planned to be operational in early 2000, has been designed as a testbed for research, development, test, and evaluation of software radio concepts. The laboratory consists of waveform generators and communications signal sources, local area networking transceivers, radio frequency (RF) channel emulators with branch diversity and smart antenna emulation capabilities, and a multichannel programmable VME-based software radio platform. The software radio platform incorporates a programmable RF front-end, digital down-converters, and multiple Quad TI-C6x DSP boards to facilitate algorithm development for intermediate frequency (IF), baseband, and bitstream processing. The laboratory promises to have capability for addressing a broad spectrum of problems including the development and test of communications modulation techniques, access methods, traffic types, channel distortion effects, transmitter diversity, receiver signal processing algorithms, coding, power control, and many other diverse topics of research.","","978-1-6654-5036-2","10.1109/ARFTG.1999.327381","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4120060","","Software radio;Laboratories;Radio frequency;Software testing;Signal processing algorithms;Signal generators;RF signals;LAN emulation;Transceivers;Digital signal processing","","","","1","","3","","12 Mar 2007","","","IEEE","IEEE Conferences"
"Position Statement: Evolving Software Models for Global Organizations","U. Basu","Tata Consultancy Services, Shanghai, China","2009 Third IEEE International Conference on Secure Software Integration and Reliability Improvement","10 Nov 2009","2009","","","320","320","In an increasingly global world, organizations are opening up to working across diverse geographies and providing goods and / or services across boundaries. This need to globalize stems from increased stakeholders demands on RoI, increased competition and an ever shrinking pie of the market share for organizations not able to adapt. Revenues and costs remain the two main driving factors. This need to globalize brings with it a multitude of operational challenges, including the need for a global IT program and a need for global software delivery. IT programs are increasingly architected at global levels, with specific local flavors to deal with a mix of operating environments and operational frameworks. Global software systems like this are characterized by their flexibility, fast speed of deployment, scalability and ability to adapt to local needs.","","978-0-7695-3758-0","10.1109/SSIRI.2009.69","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5325358","","Collaborative software;Geography;Costs;Software systems;Scalability;Programming;Chaotic communication;Software testing;Bridges;Communication system control","","","","","","","","10 Nov 2009","","","IEEE","IEEE Conferences"
"Virtual environment for robots interfaces design and testing","E. Franti; D. Tufis; S. Goschin; M. Dascalu; P. L. Milea; G. Stefan; T. Balan; C. Slav; R. Demco","Nat. Inst. for Res. & Dev. in Microtechnol., Bucharest, Romania; NA; NA; NA; NA; NA; NA; NA; NA","CAS 2005 Proceedings. 2005 International Semiconductor Conference, 2005.","19 Dec 2005","2005","2","","463","466 vol. 2","This paper refers to the implementation of a virtual environment for the robot interfaces testing. This software environment is very useful because, comparing to the experiments with real robots, it allow the testing and evaluation of different types of interfaces and different working environments with diverse configurations. A very important facility of this interactive software environment is the fact that the designers of the robots sensors and interfaces are able to work in parallel to design test, optimize and realize different control devices for the robot.","2377-0678","0-7803-9214-0","10.1109/SMICND.2005.1558827","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1558827","","Virtual environment;Robot sensing systems;Artificial intelligence;Intelligent robots;Mobile robots;Electronic equipment testing;Software testing;Parallel robots;Robot control;Education","control engineering computing;mobile robots","robot interface design;robot interface testing;virtual environment;interactive software environment;robot sensor designers;control devices","","3","","5","","19 Dec 2005","","","IEEE","IEEE Conferences"
"Modular test architectures for the aerospace industry","C. Nair",NA,"Proceedings, IEEE AUTOTESTCON","10 Dec 2002","2002","","","241","247","This paper lays the ground work for a common test platform architecture being adopted by a number of organizations in the aerospace industry. Test engineers realize that integration is not a one time event. This paper discusses an architecture based on a modular hardware and software platform that ensures design freedom and the ability to upgrade test systems without rearchitecting the entire test system. Additionally engineers in diverse applications such as structural test, turbine/engine test, avionics, environmental screening, and hydraulic actuator test can now use common elements of design and implementation hence saving their organizations money and development time.","1080-7725","0-7803-7441-X","10.1109/AUTEST.2002.1047895","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1047895","","Aerospace testing;Aerospace industry;Computer architecture;Software testing;System testing;Hardware;Design engineering;Systems engineering and theory;Application software;Hydraulic turbines","automatic test equipment;aerospace testing;field buses","modular test architectures;aerospace industry;common test platform architecture;modular hardware platform;modular software platform;test system upgrade ability;PC based platform;PXI instrumentation platform;VXI instrumentation platform","","2","","","","10 Dec 2002","","","IEEE","IEEE Conferences"
"Standard processes developed to insure the quality of software through system test","S. J. Gartner; D. C. Droupa","AT&T Network Syst., Lisle, IL, USA; AT&T Network Syst., Lisle, IL, USA","IEEE Global Telecommunications Conference and Exhibition. Communications for the Information Age","6 Aug 2002","1988","","","451","455 vol.1","Describes system testing processes that were standardized for 19 diverse systems during the implementation of a quality improvement plan. Standardization of system test processes improved the process quality and, in turn, the product quality of released software systems. The standard processes developed include: a file management system used to ensure the integrity of the system test; complete general and specific test plans; standard release of systems to the user; and complete documentation for both processes and products. The authors describe how the processes are used.<<ETX>></ETX>","","","10.1109/GLOCOM.1988.25881","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=25881","","Software standards;Standards development;Software quality;Software systems;Software testing;System testing;Documentation;Standardization;Performance evaluation;Disaster management","DP management;file organisation;program testing;quality control;software reliability;standardisation","standard processes;standardisation;systems release;system test;quality improvement plan;process quality;product quality;software systems;file management system;documentation","","","","","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Study and implementation of model-driven testing method for network management interface","Y. Chen; Limin Hou; Yichang Liu; Yongping Zhang; Feng Qi","State Key Laboratory of Networking and Switching Technology, Beijing University of Posts and Telecommunications, 100876, China; Department of Information Engineering, Railway Vocational and Technical College, Zhengzhou 450052, Henan, China; State Key Laboratory of Networking and Switching Technology, Beijing University of Posts and Telecommunications, 100876, China; State Key Laboratory of Networking and Switching Technology, Beijing University of Posts and Telecommunications, 100876, China; State Key Laboratory of Networking and Switching Technology, Beijing University of Posts and Telecommunications, 100876, China","2009 IEEE International Conference on Communications Technology and Applications","8 Dec 2009","2009","","","259","263","A model-driven testing method for network management interface was proposed in order to minimize the impact of changeful test requirement and diverse interface technologies, improve the test efficiency as well as lower test cost. This method was founded on testing models including test case model and test scenario model, which can be transformed and constructed from platform-independent model (PIM) and platform-specific model (PSM) defined in network management interface specifications automatically or manually. This paper also gave composing of test model and transformation rules from PIM/PSM to test model. Furthermore, an automatic testing platform tool was implemented and applied to the interface testing of 3G mobile communication networks management.","","978-1-4244-4816-6","10.1109/ICCOMTA.2009.5349199","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5349199","model-driven;network management interface;testing method;testing tool","Automatic testing;Technology management;Software testing;Programming;Software maintenance;Computer integrated manufacturing;System testing;Communication system software;Software tools;Laboratories","3G mobile communication;mobile computing;program testing;telecommunication network management","model-driven testing;network management interface;platform-independent model;platform-specific model;test case model;test scenario model;3G mobile communication","","1","","7","","8 Dec 2009","","","IEEE","IEEE Conferences"
"Artificial Intelligence-Powered Worker Engagement in Software Crowdsourcing","J. Wang; Y. Yang; Q. Wang","Software, Chinese Academy of Sciences, China; Systems and Enterprises, Stevens Institute of Technology; Software, Chinese Academy of Science, China","IEEE Software","26 Oct 2020","2020","37","6","94","98","Crowdsourced Software Engineering (CSE) evolved from outsourcing and open source development. It has created a fundamental shift; there are now many open-call software minitasks that are advertised and performed through popular CSE platforms. For instance, TopCoder currently has more than 1.5 million registered designers, developers, and quality engineers; uTest has 400,000-plus testing specialists with diverse expertise to validate various aspects of digital quality.","1937-4194","","10.1109/MS.2020.3017035","National Key R and D Program of China(grant numbers:2018YFB1403400); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9239287","","Task analysis;Computer bugs;Crowdsourcing;Artificial intelligence;Software;Testing;Context modeling","artificial intelligence;crowdsourcing;personnel;public domain software;software quality","artificial intelligence;crowdsourced software engineering;open source development;TopCoder;digital quality;open call software minitasks;outsourcing development;software crowdsourcing;CSE platforms;worker engagement;quality engineers","","","","4","IEEE","26 Oct 2020","","","IEEE","IEEE Magazines"
"Helping End-User Programmers ""Engineer"" Software: an Opportunity for Empirical Researchers","G. Rothermel","University of Nebraska-Lincoln, USA","First International Symposium on Empirical Software Engineering and Measurement (ESEM 2007)","15 Oct 2007","2007","","","9","10","While much of the software that people depend on is written by professional software engineers, increasingly, important applications are being created by non-professional (end-user) programmers. Using tools such as spreadsheet environments and web authoring tools, these programmers are creating software that is being used to support significant activities and inform decisions. Such software needs to work dependably and increase user productivity, but evidence shows that it frequently does not. For example, studies have shown that a large percentage of the spreadsheets created by end-users contain faults, and data suggests that time spent maintaining web macros may actually impede their users' overall efforts. In recent years researchers have begun to address this problem, considering various approaches to adapting software engineering techniques to the realm of end-user programming. For example, researchers have sought ways to help end users test and debug spreadsheets, and to increase productivity in web macros by combining them with various software engineering devices. To make progress in this area, researchers are turning to empirical studies, in order to investigate new approaches, understand the factors that influence them, and better understand issues related to end user programmers themselves. In this talk I will present recent work being done in end-user software engineering, with a particular focus on the state of the art of empirical research in the area. I will show that there is a pressing need for further empirical work in this context, and that there are interesting questions that researchers from the ESEM community could help to answer. For example, how are end-users different from programmers, and how does that affect how we conduct the research? (Are there assumptions we make when doing studies with programmers that do not hold with end-users? What are the threats to validity when, say, we use CS students as subjects in end-user studies?) As another example, how are end-users different from each other and how does that affect study results? (The end-user community is much more diverse than the professional programmer community. What are the important context variables one needs to capture when studying them?) A concerted effort by the ESEM community on such issues could result in a substantial impact on society as a whole, and on the everyday lives of many people.","1949-3789","978-0-7695-2886-1","10.1109/ESEM.2007.42","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4343727","","Programming profession;Software engineering;Computer science;Software testing;Software quality;Application software;Productivity;Software maintenance;Computer aided manufacturing;Software measurement","authoring systems;personal computing;software engineering;spreadsheet programs","software engineering techniques;end-user programming;spreadsheet environments;web authoring tools","","","","","","15 Oct 2007","","","IEEE","IEEE Conferences"
"Successful use of rate monotonic theory on a formidable real time system","L. Doyle; J. Elzey",ITT Aerospace/Commun. Div.; ITT Aerospace/Commun. Div.,"Proceedings of 11th IEEE Workshop on Real-Time Operating Systems and Software","6 Aug 2002","1994","","","74","78","The navigation payload software for the next block of Global Positioning System satellites recently completed testing. The computer program for the onboard computer is sufficiently complex to expose almost every issue that has been put forward in rate monotonic theory. The success of this effort demonstrates the utility of the theory in this type of application. The system designed required the processor to perform a highly diverse set of hard deadline real-time functions. This design would have been difficult or impossible prior to the development of rate monotonic theory. The use of utilization bounds has important advantages from a software engineering point of view. The problems of insuring schedulability over the course of development and verifying the schedulability of the finished system are discussed.<<ETX>></ETX>","","0-8186-5710-3","10.1109/RTOSS.1994.292557","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=292557","","Satellite navigation systems;Payloads;Global Positioning System;Software testing;System testing;Application software;Process design;Real time systems;Software engineering;Processor scheduling","real-time systems;software engineering;satellite relay systems;radionavigation;program testing;computer testing;scheduling;aerospace computing","rate monotonic theory;formidable real time system;navigation payload software;Global Positioning System satellites;computer program;onboard computer;utilization bounds;software engineering;schedulability;embedded space vehicle application","","2","","11","","6 Aug 2002","","","IEEE","IEEE Conferences"
"There's Nothing Like a Good Argument ...","S. B. Shum",Knowledge Media Institute,"IEEE Software","17 Sep 2007","2007","24","5","21","23","Since computing pioneers Vannevar Bush and Doug Engelbart envisioned computational support for argumentation, many have pursued the exciting vision of tools for capturing and augmenting collective reasoning. Designers would be able to capture their deliberations on the fly during design sessions, with intuitive visualizations assisting participatory analysis by diverse stakeholders. These traces would later help recover design rationale. When managing requirements, we can think of argument schemes as reusable patterns for tightening up deliberations. Project reviews are an obvious candidate, where decisions must be justified, often to be signed off, and resources committed. As meeting capture becomes a practical reality, we have the basis for requirements platforms that provide new forms of multimedia requirements and rationale traceability.","1937-4194","","10.1109/MS.2007.148","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4302680","software requirements;argument schemes;concept mapping;tools","Indexing;Engineering management;Software engineering;Software testing;System testing;Design engineering;Knowledge engineering;Software libraries;Software tools;Real time systems","object-oriented programming;program visualisation;software reusability;systems analysis","computational support;collective reasoning argumentation;design session;reusable patterns;project reviews;multimedia requirement;rationale traceability","","1","","3","","17 Sep 2007","","","IEEE","IEEE Magazines"
"Software safety assessment and the Sizewell B applications","A. E. Betts; D. Welbourne","NNC Ltd., Knutsford, UK; NNC Ltd., Knutsford, UK","1992 International Conference on Electrical and Control Aspects of the Sizewell B PWR","6 Aug 2002","1992","","","204","207","The Sizewell B PWR has two diverse protection systems which initiate automatic reactor trip and engineered safety features (ESF) needed for any fault, by detecting if measured plant signals are outside defined limits. Both systems have four redundant channels with two-out-of-four voting for each action. The primary protection system (PPS) is a computer based system and protects the reactor for all design basis faults. The station also has a computer based integrated system for centralised operations (ISCO), which includes self-contained high integrity computer system (HICS) sections. The authors describe the processes of assessment carried out for Nuclear Electric (NE), of the software provided by Westinghouse, as suppliers of the PPS and HICS. NE conducted extensive reviews and analysis of the software, in the course of establishing the safety case.<<ETX>></ETX>","","0-85296-550-8","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=172006","","Fission reactor safety;Nuclear power generation;Software testing;Software reliability","fission reactor safety;nuclear power stations;power station computer control;program testing;software reliability","nuclear power stations;UK;power station computer control;software reliability;Sizewell B;PWR;engineered safety features;redundant channels;two-out-of-four voting;primary protection system;integrated system for centralised operations;high integrity computer system","","","","","","6 Aug 2002","","","IET","IET Conferences"
"Re-host factors and a method to maintain the integrity of a test","L. Kirkland","WesTest Engineering, 810 Shepard Lane, Farmington, Utah 84025, 801-451-9191 ext 124, USA","2009 IEEE AUTOTESTCON","6 Nov 2009","2009","","","24","28","Re-hosting test program sets (TPS) is a diverse science. Methods of re-host are determined by many multifaceted factors. Some of these factors are: circuit complexity, customer requirements, documentation, optimal circuit coverage, schematics and data availability, existence of and obtainable test specs, legacy TPS history (no-fault-found and could-not duplicate problems or a high quality reliable TPS), quality of unit under test (UUT) data, technology of the TPS (digital, analog, hybrid, etc.), legacy ATEs, software (SW) development environment, SW tools and translators, interface test adapters (ITA), contractual requirements; mating connectors, test connectors and fixtures and usability and accessibility of existing legacy TPS code. This paper will cover various TPS re-hosting philosophies. Also, the paper will discuss the details of using the soft front panel method to duplicate a non-simulated digital legacy TPS.","1558-4550","978-1-4244-4980-4","10.1109/AUTEST.2009.5314098","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5314098","","Circuit testing;Software testing;Connectors;Complexity theory;Documentation;Availability;History;Software quality;Software tools;Fixtures","circuit testing;electronic engineering computing","test program sets;re-host factors;TPS re-hosting philosophies;soft front panel method;digital legacy TPS","","","","2","","6 Nov 2009","","","IEEE","IEEE Conferences"
"The development and application of a testing system of reaction time based on mesopic vision","S. Tong; Z. Jiandong; L. Haoran","Dept. Mechanical Electronic and Control engineering, Beijing Jiaotong University, Beijing China; Dept. Mechanical Electronic and Control engineering, Beijing Jiaotong University, Beijing China; Dept. Mechanical Electronic and Control engineering, Beijing Jiaotong University, Beijing China","2011 International Conference on Mechatronic Science, Electric Engineering and Computer (MEC)","22 Sep 2011","2011","","","418","420","The paper indicates a self-developed testing system of reaction time based on the theory of mesopic vision. The system is supposed to simulate the actual effects of tunnel lighting with varies of light sources, which could be attributed to mesopic visual environment. By adopting lights of different brightness, projecting designated graphs on the screen and capturing reaction time with a button, the effect of lighting condition to the human body can be obtained. The system equips with software, in which diverse projects can be created and also all the parameters and data can be put into a chart for later research. By providing theories and sequential experiments, the paper introduces hardware and software composition of the developed system. It is proved by facts that this system could throw light in the field of mesopic vision.","","978-1-61284-722-1","10.1109/MEC.2011.6025490","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6025490","mesopic vision;reaction time;testing system","Lighting;Software;Testing;Roads;Control systems;Brightness;Humans","automatic testing;brightness;light sources;lighting;tunnels;vision","self-developed testing system;reaction time;mesopic vision;tunnel lighting;light sources;mesopic visual environment;brightness;designated graphs;hardware composition;software composition","","","","4","","22 Sep 2011","","","IEEE","IEEE Conferences"
"Role-based wiki for reuse of Off-the-Shelf Components","Jingyue Li; C. Ayala; R. Conradi","Norwegian University of Science and Technology (NTNU), Norway; Norwegian University of Science and Technology (NTNU), Norway; Norwegian University of Science and Technology (NTNU), Norway","2009 ICSE Workshop on Wikis for Software Engineering","10 Jun 2009","2009","","","78","81","IT companies are confronted with a huge, growing Off-the-Shelf (OTS) marketplace containing incredibly large amount of diverse, partial, ephemeral, sometimes tacit and not always trustable information about OTS components. Our empirical studies illustrate that different users, such as OTS evaluator, OTS integrator, system tester, and system maintainer, need different information and knowledge about OTS components when facing different scenarios. Although a few companies are using mini-wikis internally to manage and share OTS related knowledge, knowledge sharing across companies is rare. Searching existing web portals or sites of OTS components is time consuming and often does not bring systematic knowledge. This position paper proposes role-based wikis to organize OTS components related knowledge in a systematic way. One motivation of constructing such a wiki is to provide necessary knowledge for different users to help them reduce risks. Another motivation is to provide a global centralized platform, so that OTS users can systematically share their knowledge across organizations.","","978-1-4244-3742-9","10.1109/WIKIS4SE.2009.5069999","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5069999","","Portals;Open source software;Software maintenance;Collaboration;System testing;Knowledge management;Internet;Scattering;Programming;Software testing","object-oriented programming;portals;Web sites","role-based wiki;off-the-shelf components reuse;knowledge sharing;Web portals;Web sites;global centralized platform","","","","17","","10 Jun 2009","","","IEEE","IEEE Conferences"
"Filtering in Chinese document images based on templates and confidence measure","Chen Jiewei; Xu Weiran; Guo Jun","Sch. of Inf. Eng., Beijing Univ. of Posts & Telecommun., China; Sch. of Inf. Eng., Beijing Univ. of Posts & Telecommun., China; Sch. of Inf. Eng., Beijing Univ. of Posts & Telecommun., China","Proceedings 7th International Conference on Signal Processing, 2004. Proceedings. ICSP '04. 2004.","27 Jun 2005","2004","2","","1376","1379 vol.2","A fast approach to keyword spotting in Chinese document images based on multiple templates matching and confidence measure is presented. The system generates keyword lexicon of diverse fonts and two-stage feature vectors prior to the procedure of keyword searching. A two-stage retrieval scheme and Boyer-Moore Algorithm is proposed aiming at accelerating the retrieval process. A distance measure between the candidate character and the templates is used to identify and rank similar templates. The performance of new system has been significantly improved when compared to traditional OCR and image-based approach. Experimental results confirmed the robust of the proposed approach over a wide range of degradations.","","0-7803-8406-7","10.1109/ICOSP.2004.1441582","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1441582","","Information filtering;Optical character recognition software;Testing;Degradation;Image recognition;Image segmentation;Image retrieval;Information retrieval;Character recognition;Acceleration","image retrieval;feature extraction;information filtering;document image processing;natural languages;image matching;character recognition","Chinese document image filter;confidence measure;multiple template matching;keyword lexicon;two-stage feature vector;two-stage retrieval scheme;Boyer-Moore algorithm;candidate character;information filtering","","","","6","","27 Jun 2005","","","IEEE","IEEE Conferences"
"Working Session Reports","J. Stafford; J. Bosch",Tufts University; NA,"5th Working IEEE/IFIP Conference on Software Architecture (WICSA'05)","24 Apr 2006","2005","","","181","184","WICSA is a working conference and in 2005 continued the tradition of providing working sessions as a forum supportive of communication among the diverse population that makes up the software architecture community. The working sessions of WICSA 5 reflected on the achievements in the field of software architecture during the past decade, took stock of the current state of the field, and identified opportunities for researchers to contribute to improving the practice.","","0-7695-2548-2","10.1109/WICSA.2005.76","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1620103","","Software architecture;Computer architecture;Software testing;Application software;Software quality;Documentation;Architecture description languages;Disk recording;Software systems;Vehicles","","","","","","","","24 Apr 2006","","","IEEE","IEEE Conferences"
"The application of an automated software tool for modeling test processes","J. A. Rajhel","Support Syst. Assoc. Inc., USA","Proceedings of AUTOTESTCON '94","6 Aug 2002","1994","","","307","310","To obtain a consensus model of a complex system utilizing a diverse group of people requires a standard automated modeling tool. Without this type of modeling tool various models must be interpreted to be incorporated into a single model. Misinterpretation of the different views is inevitable causing models to be incorrect. Use of an automated tool such as IDEFO will eliminate integration problems because of its ability to express the point of the model in a standard graphic way.<<ETX>></ETX>","","0-7803-1910-9","10.1109/AUTEST.1994.381604","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=381604","","Application software;Software tools;Automatic testing;Software testing;Computer aided manufacturing;Graphics;Personnel;Design automation;CADCAM;Modeling","software tools;automatic test software;software reusability;software engineering","automated software tool;complex system;standard automated modeling tool;IDEFO model;integration problems;integrated definition zero;ATAG;DoD","","1","","4","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Test-Driven Anonymization in Health Data: A Case Study on Assistive Reproduction","C. Augusto; M. A. Olivero; J. Morán; L. Morales; C. d. la Riva; J. Aroba; J. Tuya","University of Oviedo,Department of Computing,Gijón,Spain; ISTI-CNR- Pisa, Italy IWT2 - University of Seville,Sevilla,Spain; University of Oviedo,Department of Computing,Gijón,Spain; Web Engineering and Early Testing Research Group University of Seville,Sevilla,Spain; University of Oviedo,Department of Computing,Gijón,Spain; University of Huelva,Department of Information Technologies,Huelva,Spain; University of Oviedo,Department of Computing,Gijón,Spain","2020 IEEE International Conference On Artificial Intelligence Testing (AITest)","25 Aug 2020","2020","","","81","82","Artificial intelligence (AI) is a broad field whose prevalence in the health sector has increased during recent years. Clinical data are the basic staple that feeds intelligent healthcare applications, but due to its sensitive character, its sharing and usage by third parties require compliance with both confidentiality agreements and security measures. Data Anonymization emerges as a solution to both increasing the data privacy and reducing the risk against unintentional disclosure of sensitive information through data modifications. Although the anonymization improves privacy, the diverse modifications also harm the data functional suitability. These data modifications can affect applications that employ the anonymized data, especially those that are data-centric such as the AI tools. To obtain a trade-off between both qualities (privacy and functional suitability), we use the Test-Driven Anonymization (TDA) approach, which anonymizes incrementally the data to train the AI tools and validates with the real data until maximizing its quality. The approach is evaluated on a real-world dataset from the Spanish Institute for the Study of the Biology of Human Reproduction (INEBIR). The anonymized datasets are used to train AI tools and select the dataset that gets the best trade-off between privacy and functional quality requirements. The results show that TDA can be successfully applied to anonymize the clinical data of the INEBIR, allowing third parties to transfer without transgressing user privacy and develop useful AI Tools with the anonymized data.","","978-1-7281-6984-2","10.1109/AITEST49225.2020.00019","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9176766","Anonymization;Software Testing;Artificial intelligence;Health-Care Data;k-Anonymity","Artificial intelligence;Data privacy;Tools;Testing;Bagging;Data models","artificial intelligence;data privacy;health care;security of data","health data;assistive reproduction;artificial intelligence;broad field whose prevalence;health sector;clinical data;intelligent healthcare applications;sensitive character;data anonymization;data privacy;data modifications;data functional suitability;anonymized data;anonymized datasets;AI tools;test-driven anonymization","","","","6","","25 Aug 2020","","","IEEE","IEEE Conferences"
"Search-Based Test Input Generation for String Data Types Using the Results of Web Queries","P. McMinn; M. Shahbaz; M. Stevenson","Univ. of Sheffield, Sheffield, UK; Univ. of Sheffield, Sheffield, UK; Univ. of Sheffield, Sheffield, UK","2012 IEEE Fifth International Conference on Software Testing, Verification and Validation","17 May 2012","2012","","","141","150","Generating realistic, branch-covering string inputs is a challenging problem, due to the diverse and complex types of real-world data that are naturally encodable as strings, for example resource locators, dates of different localised formats, international banking codes, and national identity numbers. This paper presents an approach in which examples of inputs are sought from the Internet by reformulating program identifiers into web queries. The resultant URLs are downloaded, split into tokens, and used to augment and seed a search-based test data generation technique. The use of the Internet as part of test input generation has two key advantages. Firstly, web pages are a rich source of valid inputs for various types of string data that may be used to improve test coverage. Secondly, the web pages tend to contain realistic, human-readable values, which are invaluable when test cases need manual confirmation due to the lack of an automated oracle. An empirical evaluation of the approach is presented, involving string input validation code from 10 open source projects. Well-formed, valid string inputs were retrieved from the web for 96% of the different string types analysed. Using the approach, coverage was improved for 75% of the Java classes studied by an average increase of 14%.","2159-4848","978-0-7695-4670-4","10.1109/ICST.2012.94","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6200106","Automatic test data generation;search based testing;string inputs;web queries","Electronic mail;Testing;Web pages;Internet;Search problems;Java;Search engines","automatic test pattern generation;program testing;public domain software;query processing;Unified Modeling Language;Web services","string data type;Web query;branch covering string;Internet;program identifier;URL;search-based test data generation;Web page;test coverage;automated oracle;open source project;information retrieval;Java","","28","","33","","17 May 2012","","","IEEE","IEEE Conferences"
"Combinatorial Testing on Implementations of HTML5 Support","X. Deng; T. Wu; J. Yan; J. Zhang","Technol. Center of Software Eng., Inst. of Software, Beijing, China; State Key Lab. of Comput. Sci., Inst. of Software, Beijing, China; Technol. Center of Software Eng., Inst. of Software, Beijing, China; State Key Lab. of Comput. Sci., Inst. of Software, Beijing, China","2017 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","17 Apr 2017","2017","","","262","271","The fifth version of HTML standard, which is widely accepted in the diverse landscape of browser vendors and their continuously upgrading releases, requires web browsers to support playback of multimedia natively, instead of by third-party plugins. Works on testing browsers' implementations of the HTML5 support, however, are not efficient enough till now. Regarding a browser's processing on HTML5 element tags of web pages and attributes of multimedia files, this paper treats the browser as a parameterized black-box and employs the combinatorial testing technique to design web pages to test its system behavior. Experiments are conducted on two sets of browsers. The first set includes nine popular ones in both desktop and mobile for discovering the distribution of multimedia related errors, and the second set contains five versions of the same browser for revealing the evolution of such errors. The experimental results indicate that the proposed approach is promising as it can reveal errors in browsers by various vendors and in various versions, and that the upgrades of the browser will not necessarily fix the existing bugs, and even introduce new ones, due to inefficient testing.","","978-1-5090-6676-6","10.1109/ICSTW.2017.47","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7899064","","Browsers;Media;Containers;HTML;Testing;Multimedia communication;Web pages","hypermedia markup languages;Internet;multimedia computing;online front-ends;Web sites","combinatorial testing;HTML5 support;HTML standard;browser vendors;Web browsers;third-party plugins;Web pages;multimedia files;parameterized black-box;desktop","","3","","14","","17 Apr 2017","","","IEEE","IEEE Conferences"
"Automated Random Testing in Multiple Dispatch Languages","S. Poulding; R. Feldt","Software Eng. Res. Lab., Blekinge Inst. of Technol., Karlskrona, Sweden; Software Eng. Res. Lab., Blekinge Inst. of Technol., Karlskrona, Sweden","2017 IEEE International Conference on Software Testing, Verification and Validation (ICST)","18 May 2017","2017","","","333","344","In programming languages that use multiple dispatch, a single function can have multiple implementations, each of which may specialise the function's operation. Which one of these implementations to execute is determined by the data types of all the arguments to the function. Effective testing of functions that use multiple dispatch therefore requires diverse test inputs in terms of the data types of the input's arguments as well as their values. In this paper we describe an approach for generating test inputs where both the values and types are chosen probabilistically. The approach uses reflection to automatically determine how to create inputs with the desired types, and dynamically updates the probability distribution from which types are sampled in order to improve both the test efficiency and efficacy. We evaluate the technique on 247 methods across 9 built-in functions of Julia, a technical computing language that applies multiple dispatch at runtime. In the process, we identify three real faults in these widely-used functions.","","978-1-5090-6031-3","10.1109/ICST.2017.37","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7927987","","Concrete;Testing;Probabilistic logic;Probability distribution;Context;Software engineering;Electronic mail","program testing;programming languages","automated random testing;multiple dispatch languages;programming languages;probability distribution;Julia;technical computing language","","2","","11","","18 May 2017","","","IEEE","IEEE Conferences"
"Behind an Application Firewall, Are We Safe from SQL Injection Attacks?","D. Appelt; C. D. Nguyen; L. Briand","Interdiscipl. Centre for Security, Reliability & Trust (SnT Centre), Univ. of Luxembourg, Luxembourg, Luxembourg; Interdiscipl. Centre for Security, Reliability & Trust (SnT Centre), Univ. of Luxembourg, Luxembourg, Luxembourg; Interdiscipl. Centre for Security, Reliability & Trust (SnT Centre), Univ. of Luxembourg, Luxembourg, Luxembourg","2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST)","7 May 2015","2015","","","1","10","Web application firewalls are an indispensable layer to protect online systems from attacks. However, the fast pace at which new kinds of attacks appear and their sophistication require that firewalls be updated and tested regularly as otherwise they will be circumvented. In this paper, we focus our research on web application firewalls and SQL injection attacks. We present a machine learning-based testing approach to detect holes in firewalls that let SQL injection attacks bypass. At the beginning, the approach can automatically generate diverse attack payloads, which can be seeded into inputs of web- based applications, and then submit them to a system that is protected by a firewall. Incrementally learning from the tests that are blocked or passed by the firewall, our approach can then select tests that exhibit characteristics associated with bypassing the firewall and mutate them to efficiently generate new bypassing attacks. In the race against cyber attacks, time is vital. Being able to learn and anticipate more attacks that can circumvent a firewall in a timely manner is very important in order to quickly fix or fine-tune the firewall. We developed a tool that implements the approach and evaluated it on ModSecurity, a widely used application firewall. The results we obtained suggest a good performance and efficiency in detecting holes in the firewall that could let SQLi attacks go undetected.","2159-4848","978-1-4799-7125-1","10.1109/ICST.2015.7102581","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7102581","","Grammar;Testing;Security;Databases;Syntactics;Servers;Radio access networks","firewalls;Internet;learning (artificial intelligence);SQL","SQL injection attacks;SQLi attacks;Web application firewalls;online system protection;machine learning-based testing approach;bypassing attacks;cyber attacks;ModSecurity","","18","","20","","7 May 2015","","","IEEE","IEEE Conferences"
"Automatic Detection of Visibility Faults by Layout Changes in HTML5 Web Pages","Y. Ryou; S. Ryu","Sch. of Comput., KAIST, Daejeon, South Korea; Sch. of Comput., KAIST, Daejeon, South Korea","2018 IEEE 11th International Conference on Software Testing, Verification and Validation (ICST)","28 May 2018","2018","","","182","192","Modern HTML5 web pages (pages) often change various elements of their documents dynamically to provide rich functionality to users interactively. As users interact with a document via events, the combination of HTML, CSS, and JavaScript dynamically changes the document layout, which is the arrangement of the document elements visualized to the users. Web pages change their layouts not only to support user interaction but also to react to different screen sizes being used to run the pages. To support diverse devices with different screen sizes using a single web page document, developers use Responsive Web Design, which enables web page layouts to change when the sizes of the underlying devices change. While such dynamic features of web pages provide powerful experiences to users, they also make development of web pages more difficult. Even expert developers find it difficult to write HTML5 web pages correctly. In this paper, we first define the problem that functionalities of HTML5 web pages may become unusable due to layout changes, and propose a technique to detect the problem automatically. We show that our implementation detects such problems in real-world HTML5 web pages.","","978-1-5386-5012-7","10.1109/ICST.2018.00027","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8367047","visibility faults;automatic bug detection;HTML5 web pages;layout changes","Web pages;Layout;Browsers;Tools;Cascading style sheets;Visualization","human computer interaction;hypermedia markup languages;interactive systems;Internet;software fault tolerance;Web design","layout changes;user interaction;web page layouts;HTML5 web pages;automatic visibility faults detection;web page document;CSS;JavaScript;Responsive Web Design","","8","","67","","28 May 2018","","","IEEE","IEEE Conferences"
"Support for Finding Presentation Failures by Using Computer Vision Techniques","H. Tanno; Y. Adachi","NTT Labs., Tokyo, Japan; NTT Labs., Tokyo, Japan","2018 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","19 Jul 2018","2018","","","356","363","When testing applications that run on diverse client devices, operating systems, and browsers, it is necessary to check whether application screens display correctly in various environments and ensure that there is no presentation failure. Applications are typically composed of many screens, and there are many types and combinations of environments in which they may run. Accordingly, it is very labor intensive to visually confirm large numbers of such screens, and there is a strong possibility of missing presentation failures. Finding a way of efficiently confirming large numbers of application screen images is hence a challenge facing real-world testing and industry. Here, we propose a method to support discovery of presentation failures. It detects differences in screen elements, e.g., a disappearance of or change in the position of a button, by comparing the images of the correct screen and the target screen by utilizing computer vision techniques and displays those differences to the tester in an easy-to-understand way. As a result, the tester can quickly confirm the differences and find presentation failures efficiently. Our method uses only images of the application screen, therefore it does not depend on a specific implementation technology. Thus, it can be utilized for confirming the test results of various implementations (Web, android, iOS, etc.). In experiments with application screens in which presentation failures were intentionally embedded, we measured how much the proposed method increases failure discovery rate and determined whether it reduces the amount of labor.","","978-1-5386-6352-3","10.1109/ICSTW.2018.00073","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8411776","Test result verification;presentation failure;visual GUI testing;test oracle;image processing","Feature extraction;Testing;Tools;Browsers;Androids;Humanoid robots;Smart phones","computer vision;formal verification;mobile computing;program testing;software fault tolerance","presentation failure;application screen images;computer vision;applications testing;test result verification","","5","","14","","19 Jul 2018","","","IEEE","IEEE Conferences"
"Towards a Latin-Square Search Engine","W. Fang; R. J. Stones; T. G. Marbach; G. Wang; X. Liu","Nankai University, China; Nankai University, China; Nankai University, China; Nankai University, China; Nankai University, China","2019 IEEE Intl Conf on Parallel & Distributed Processing with Applications, Big Data & Cloud Computing, Sustainable Computing & Communications, Social Computing & Networking (ISPA/BDCloud/SocialCom/SustainCom)","26 Mar 2020","2019","","","727","735","Latin squares are combinatorial matrices that are widely used in diverse areas of research such as codes and cryptography, software testing, mathematical research, and experimental designs. All of these fields would benefit from a search engine for Latin squares. One major obstacle to developing a Latin-square search engine is that any Latin square has a large number of equivalent Latin squares, which are contained in multiple equivalence classes, and thus we need an efficient online method for canonical labelling Latin squares. Canonical labelling usually proceeds via the Nauty graph isomorphism software, but this incurs conversion costs. Moreover, the canonical labels are practically random members of their equivalence classes. A second obstacle is how large amounts of searchable Latin-square data may be stored efficiently. In this paper, we design data structures and algorithms suitable for a Latin-square search engine. We use a tree-based data structure for storing large numbers of Latin squares that also enables efficient search capabilities. We design an efficient canonical labelling algorithm (via partial Latin squares, PLSs) which does not require graph conversion, facilitates compression, and the labels are more humanly meaningful. We implement and experiment with a skeletal prototype of the Latin-square search engine. Experimental results confirm that the PLS method is faster than Nauty, and has reduced space requirements.","","978-1-7281-4328-6","10.1109/ISPA-BDCloud-SustainCom-SocialCom48970.2019.00110","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9047384","Latin square;partial Latin square;search engine;storage;information retrieval;mathematical knowledge management","Search engines;Indexes;Labeling;Cryptography;Data structures;Zinc;Software testing","data structures;graph theory;least squares approximations;matrix algebra;program testing;search engines;trees (mathematics)","Latin-square search engine;canonical labelling Latin squares;searchable Latin-square data;partial Latin squares;Nauty graph isomorphism software;tree-based data structure;canonical labelling algorithm","","1","","42","","26 Mar 2020","","","IEEE","IEEE Conferences"
"Source Code Vulnerability Detection Based On SAR-GIN","X. Xia; Y. Wang; Y. Yang","Donghua University,Shanghai,China; Donghua University,Shanghai,China; Shanghai Software Testing Center,Shanghai,China","2021 2nd International Conference on Electronics, Communications and Information Technology (CECIT)","1 Apr 2022","2021","","","1144","1149","With the development of the Internet era, software technology is being used more and more commonly, and the detection of vulnerabilities in the corresponding software must be efficient and accurate. However, software vulnerabilities are diverse, and mining vulnerabilities through source code requires a high level of professional experience for developers. Previous vulnerability detection solutions either relied on expert-defined features or used recursive neural networks only for code sequences, making it difficult to extract complex features of vulnerabilities in the traditional code space. In recent years, with the booming development of artificial intelligence technology, some scholars have started to try to combine graph neural networks to extract graph structure information of source code for software vulnerability detection. In this paper, by introducing a method based on Graph Isomorphism Network (GIN) combined with a self-attention aggregation mechanism for vulnerability detection, we achieve superior detection results. By assigning different attention weights to each layer, the self-attention mechanism helps to solve the problem of too smooth node representation and poor comprehensive performance of graph-level output. In this paper, we propose Self Attention Readout Graph Isomorphism Network (SAR-GIN), which efficiently extracts and utilizes global information at all depths by combining GIN with a self-attention mechanism in generating global graph-level features. Meanwhile, the experimental results on CWE-400, CWE-190 datasets, combined with the discrete Fourier transform, show that the modeling approach in this paper achieves superior results compared to other models.","","978-1-6654-3757-8","10.1109/CECIT53797.2021.00202","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9741883","vulnerability detection;graph network;self-attention;Fourier transform","Measurement;Codes;Discrete Fourier transforms;Transforms;Feature extraction;Software;Internet","","","","","","19","","1 Apr 2022","","","IEEE","IEEE Conferences"
"Data diversity: an approach to software fault tolerance","P. E. Ammann; J. C. Knight","Dept. of Comput. Sci., Virginia Univ., Charlottesville, VA, USA; Dept. of Comput. Sci., Virginia Univ., Charlottesville, VA, USA","IEEE Transactions on Computers","6 Aug 2002","1988","37","4","418","425","Data diversity is described, and the results of a pilot study are presented. The regions of the input space that cause failure for certain experimental programs are discussed, and data reexpression, the way in which alternate input data sets can be obtained, is examined. A description is given of the retry block which is the data-diverse equivalent of the recovery block, and a model of the retry block, together with some empirical results is presented. N-copy programming which is the data-diverse equivalent of N-version programming is considered, and a simple model and some empirical results are also given.<<ETX>></ETX>","1557-9956","","10.1109/12.2185","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=2185","","Fault tolerance;System testing;Application software;Buildings;Computer applications;Software testing;Redundancy;Software algorithms;NASA;Computer science","fault tolerant computing","data diversity;software fault tolerance;data reexpression;retry block;N-copy programming;N-version programming","","220","6","12","","6 Aug 2002","","","IEEE","IEEE Journals"
"Implementing design diversity to achieve fault tolerance","J. P. J. Kelly; T. I. McVittie; W. I. Yamamoto","Dept. of Electr. & Comput. Eng., California Univ., Santa Barbara, CA, USA; Dept. of Electr. & Comput. Eng., California Univ., Santa Barbara, CA, USA; Dept. of Electr. & Comput. Eng., California Univ., Santa Barbara, CA, USA","IEEE Software","6 Aug 2002","1991","8","4","61","71","The software faults that are particularly significant in a real-time concurrent system are identified, and the use of design diversity to prevent their occurrence is examined. Two approaches to enforced diversity, recovery-block software and multiversion software, are discussed. The recovery-block scheme combines N diverse software versions arranged (conceptually, at least) in sequential order, although the versions may also be organized to execute concurrently. The multiversion-software approach excuses all N versions in parallel, taking advantage of the redundant processors likely to be available in any system that must tolerate hardware and software faults. Although different, both approaches require sufficiently diverse development environments and that faults in the specification do not lead to similar errors.<<ETX>></ETX>","1937-4194","","10.1109/52.300038","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=300038","","Fault tolerance;Real time systems;Hardware;Fault tolerant systems;Application software;Fault detection;Timing;Software testing;Life testing;System testing","fault tolerant computing;multiprocessing programs;multiprocessing systems;real-time systems;software reliability","fault tolerant computing;hardware faults;software faults;real-time concurrent system;design diversity;recovery-block software;multiversion software","","41","1","12","IEEE","6 Aug 2002","","","IEEE","IEEE Magazines"
"A methodology for operational profile refinement","S. Elbaum; S. Narla","Dept. of Comput. Sci. & Eng., Nebraska Univ., Lincoln, NE, USA; NA","Annual Reliability and Maintainability Symposium. 2001 Proceedings. International Symposium on Product Quality and Integrity (Cat. No.01CH37179)","7 Aug 2002","2001","","","142","149","Numerous reliability models and testing practices are based on operational profiles. Typically, a single operational profile is used to represent the usage of a system with the assumption that a homogeneous customer base executes the system. However, if the customer base is heterogeneous, estimates computed on a single operational profile may be inaccurate. A single operational profile does not reflect the diverse customer patterns and it only ""averages"" the usage of the system, obscuring the real information about the operations probabilities. Decisions made on these estimates are likely to be biased and of limited usefulness. This paper presents a refinement methodology for the generation of more accurate operational profiles that truly represent the diverse customer usage patterns. Clustering analysis supports the refinement methodology for identifying groups of customers with similar characteristics. Empirical stopping rules and validation procedures complete the refining methodology. A complete example of the methodology is presented on a large application. The example evidences the different perspective and accuracy that can be obtained through this refining methodology.","0149-144X","0-7803-6615-8","10.1109/RAMS.2001.902457","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=902457","","Software reliability;Reliability engineering;Software testing;Application software;Software systems;Communication industry;Performance evaluation;Resource management;System testing;Terminology","reliability;failure analysis;testing;probability;pattern clustering","operational profile refinement methodology;reliability models;testing practices;customer patterns;operations probabilities;clustering analysis;empirical stopping rules;validation procedures","","4","","10","","7 Aug 2002","","","IEEE","IEEE Conferences"
"Finding test data with specific properties via metaheuristic search","R. Feldt; S. Poulding","Dept. of Computer Science and Engineering, Chalmers University of Technology, Sweden; Dept. of Computer Science, University of York, York, UK","2013 IEEE 24th International Symposium on Software Reliability Engineering (ISSRE)","2 Jan 2014","2013","","","350","359","For software testing to be effective the test data should cover a large and diverse range of the possible input domain. Boltzmann samplers were recently introduced as a systematic method to randomly generate data with a range of sizes from combinatorial classes, and there are a number of automated testing frameworks that serve a similar purpose. However, size is only one of many possible properties that data generated for software testing should exhibit. For the testing of realistic software systems we also need to trade off between multiple different properties or search for specific instances of data that combine several properties. In this paper we propose a general search-based framework for finding test data with specific properties. In particular, we use a metaheuristic, differential evolution, to search for stochastic models for the data generator. Evaluation of the framework demonstrates that it is more general and flexible than existing solutions based on random sampling.","2332-6549","978-1-4799-2366-3","10.1109/ISSRE.2013.6698888","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6698888","","Generators;Grammar;Testing;Adaptation models;Arrays;Data models","data structures;evolutionary computation;information retrieval;program testing","test data;metaheuristic search;software testing;Boltzmann samplers;combinatorial classes;automated testing frameworks;realistic software systems;general search-based framework;differential evolution;random sampling;data generator;data structures","","26","","19","","2 Jan 2014","","","IEEE","IEEE Conferences"
"BugSwarm: Mining and Continuously Growing a Dataset of Reproducible Failures and Fixes","D. A. Tomassi; N. Dmeiri; Y. Wang; A. Bhowmick; Y. Liu; P. T. Devanbu; B. Vasilescu; C. Rubio-González","University of California, Davis; University of California, Davis; University of California, Davis; University of California, Davis; University of California, Davis; University of California, Davis; Carnegie Mellon University; University of California, Davis","2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE)","26 Aug 2019","2019","","","339","349","Fault-detection, localization, and repair methods are vital to software quality; but it is difficult to evaluate their generality, applicability, and current effectiveness. Large, diverse, realistic datasets of durably-reproducible faults and fixes are vital to good experimental evaluation of approaches to software quality, but they are difficult and expensive to assemble and keep current. Modern continuous-integration (CI) approaches, like TRAVIS-CI, which are widely used, fully configurable, and executed within custom-built containers, promise a path toward much larger defect datasets. If we can identify and archive failing and subsequent passing runs, the containers will provide a substantial assurance of durable future reproducibility of build and test. Several obstacles, however, must be overcome to make this a practical reality. We describe BUGSWARM, a toolset that navigates these obstacles to enable the creation of a scalable, diverse, realistic, continuously growing set of durably reproducible failing and passing versions of real-world, open-source systems. The BUGSWARM toolkit has already gathered 3,091 fail-pass pairs, in Java and Python, all packaged within fully reproducible containers. Furthermore, the toolkit can be run periodically to detect fail-pass activities, thus growing the dataset continually.","1558-1225","978-1-7281-0869-8","10.1109/ICSE.2019.00048","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812141","Bug Database;Reproducibility;Software Testing;Program Analysis;Experiment Infrastructure","Tools;Software maintenance;Libraries;Open source software;Software quality;Java;Python","data mining;Java;program debugging;program testing;Python;software fault tolerance;software maintenance;software quality","reproducible failures;fault-detection;repair methods;software quality;realistic datasets;durably-reproducible faults;TRAVIS-CI;BUGSWARM toolkit;fail-pass pairs;fully reproducible containers;fail-pass activities;continuous-integration approach;mining;fault localization;Java;Python","","20","","32","","26 Aug 2019","","","IEEE","IEEE Conferences"
"Efficient Modelling of Embedded Software Systems and their Formal Verification","V. Estivill-Castro; R. Hexel; D. A. Rosenblueth","Sch. of ICT, Griffith Univ., Nathan, NSW, Australia; Sch. of ICT, Griffith Univ., Nathan, NSW, Australia; IIMAS, UNAM, Mexico City, Mexico","2012 19th Asia-Pacific Software Engineering Conference","18 Feb 2013","2012","1","","428","433","We propose vectors of finite-state machines whose transitions are labeled by formulas of a common-sense logic as the modeling tool for embedded systems software. We have previously shown that this methodology is very efficient in producing succinct and clear models (e.g., in contrast to plain finite-state machines, Petri nets, or Behavior Trees). We show that we can capture requirements precisely and that we can simulate and validate the models. We can, therefore, directly apply Model-Driven Engineering and deploy the models into software for diverse platforms with full tractability of requirements. Moreover, the sequential semantics of our vector of finite-state machines enables model-checking, formally establishing the correctness of the model. Finally, our approach facilitates systematic Failure Modes and Effects Analysis (FMEA) for diverse target platforms. We demonstrate the effectiveness of our methodology with several examples widely discussed in the software engineering literature and compare this with other approaches, showing that we can prove more properties, and that some claims about verification in such approaches have been exaggerated or are incomplete.","1530-1362","978-1-4673-4930-7","10.1109/APSEC.2012.21","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6462690","Software testing;verification and validation;formal methods in software engineering;software requirements engineering;model-driven engineering","Unified modeling language;Software;Semantics;Computational modeling;Presses;Pumps;Atmospheric modeling","embedded systems;finite state machines;formal specification;formal verification","embedded software system;formal verification;finite state machines;common-sense logic;Petri nets;behavior tree;model-driven engineering;requirement tractability;model checking;model correctness;FMEA;failure mode and effect analysis;software engineering","","8","","15","","18 Feb 2013","","","IEEE","IEEE Conferences"
"Scheduling algorithms for dedicated nodes in Alchemi grid","Z. Stanfel; G. Martinovic; Z. Hocenski","Faculty of Electrical Engineering, J.J. Strossmayer University of Osijek, Croatia; Faculty of Electrical Engineering, J.J. Strossmayer University of Osijek, Croatia; Faculty of Electrical Engineering, J.J. Strossmayer University of Osijek, Croatia","2008 IEEE International Conference on Systems, Man and Cybernetics","7 Apr 2009","2008","","","2531","2536","Computational grids are useful tools for bringing supercomputing power to users by using idle resources in the network. In the following paper we give a short overview of architecture of the Alchemi grid developed on .Net platform. We created a grid application, which utilizes Rabin-Karp string searching algorithm to test Alchemi grid performances in situation when requests put diverse demands for computing resources to the different grid nodes. Scheduling and dispatching jobs to the computing resources is a critical activity of the grid software. We present a scheduling algorithm which showed performance improvements to the original algorithm shipped with Alchemi grid software.","1062-922X","978-1-4244-2383-5","10.1109/ICSMC.2008.4811676","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4811676","computational grid;dedicated resources scheduling","Scheduling algorithm;Grid computing;Computer networks;Computer architecture;Application software;Testing;Performance evaluation;Processor scheduling;Dispatching;Software algorithms","dispatching;grid computing;scheduling","scheduling algorithms;dedicated nodes;Alchemi grid;supercomputing power;.Net platform;Rabin-Karp string searching algorithm;dispatching jobs;grid software","","","","22","","7 Apr 2009","","","IEEE","IEEE Conferences"
"Software measurement: a necessary scientific basis","N. Fenton","Centre for Software Reliability, City Univ., London, UK","IEEE Transactions on Software Engineering","6 Aug 2002","1994","20","3","199","206","Software measurement, like measurement in any other discipline, must adhere to the science of measurement if it is to gain widespread acceptance and validity. The observation of some very simple, but fundamental, principles of measurement can have an extremely beneficial effect on the subject. Measurement theory is used to highlight both weaknesses and strengths of software metrics work, including work on metrics validation. We identify a problem with the well-known Weyuker properties (E.J. Weyuker, 1988), but also show that a criticism of these properties by J.C. Cherniavsky and C.H. Smith (1991) is invalid. We show that the search for general software complexity measures is doomed to failure. However, the theory does help us to define and validate measures of specific complexity attributes. Above all, we are able to view software measurement in a very wide perspective, rationalising and relating its many diverse activities.<<ETX>></ETX>","1939-3520","","10.1109/32.268921","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=268921","","Software measurement;Software metrics;Humans;Gain measurement;Counting circuits;Software reliability;Software testing;Blood pressure;Cost function","software metrics;measurement theory;programming theory","software measurement;scientific basis;measurement theory;software metrics work;metrics validation;software complexity measures;complexity attributes","","278","2","47","","6 Aug 2002","","","IEEE","IEEE Journals"
"Towards Adaptive Beamforming in Indoor Wireless Networks: An Experimental Approach","S. Lakshmanan; K. Sundaresan; R. Kokku; A. Khojestepour; S. Rangarajan","Sch. of ECE, Georgia Inst. of Technol., Atlanta, GA; NA; NA; NA; NA","IEEE INFOCOM 2009","2 Jun 2009","2009","","","2621","2625","Several research works have argued that adaptive beamforming has the potential to realize the high spectral efficiency requirements of next-generation wireless standards, and is especially well-suited for multipath-rich environments such as indoors. Most works have been limited to theory; few works in literature address the practical benefits and realizability of adaptive beamforming. In this paper, we design and implement the first indoor WLAN beamforming system with multi-element array antennas and software radio platforms, that forms a testbed for exploration of practical benefits of beamforming, and evaluation of algorithms for efficient beamforming in diverse environments. In the process of building the system, we identify and address several challenges with practical beamforming that are often ignored in theoretical works. Most importantly, channel estimation for forming the best beam to a user is hindered by oscillator drifts on the transmitter and receiver side that introduce hard-to-isolate phase and frequency offsets from the estimated channel coefficients. We describe these issues and incorporate novel solutions in our system to address them without requiring hardware modifications. We use the system to demonstrate the realizable benefits of adaptive beamforming in a typical indoor office environment.","0743-166X","978-1-4244-3512-8","10.1109/INFCOM.2009.5062199","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5062199","","Array signal processing;Wireless networks;Frequency estimation;Algorithm design and analysis;Wireless LAN;Antenna arrays;Software radio;Software testing;System testing;Software algorithms","antenna arrays;indoor radio;software radio;wireless LAN","adaptive beamforming;indoor wireless networks;next-generation wireless standards;indoor WLAN beamforming system;multielement array antennas;software radio;channel estimation","","21","2","18","","2 Jun 2009","","","IEEE","IEEE Conferences"
"Adaptation of traditional usability testing methods for remote testing","J. Scholtz","Nat. Inst. of Stand. & Technol., USA","Proceedings of the 34th Annual Hawaii International Conference on System Sciences","7 Aug 2002","2001","","","8 pp.","","Traditional usability testing methods are difficult to use in producing Web sites and Web applications, mainly because of the decreased development times that companies demand for this type of software. Users of Web sites have diverse platforms, computer expertise and expectations. Companies want to use Web sites to sell merchandise and provide services to customers. Therefore, it is essential to make usability a high priority in the development of Web-based software. How can we resolve this seemingly contradictory situation? We believe that usability testing tools that are remote, rapid and automated would be helpful in providing more usability information in a shorter time and in a form that can be immediately useful to usability professionals. In this paper, we discuss the approach we have taken to designing such tools. We currently have several tools available for public use that are also discussed in this paper. Our next steps will be to conduct methodological studies to validate the use of these tools.","","0-7695-0981-9","10.1109/HICSS.2001.926546","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=926546","","Usability;Software testing;Application software;Programming;NIST;Merchandise;Automatic testing;Web sites;Books;Investments","program testing;human factors;information resources;distributed programming","usability testing methods;remote testing;Web sites;World Wide Web applications;software development times;hardware platforms;computer expertise;user expectations;merchandise;electronic commerce;customer services;Web-based software development;usability testing tools","","9","","9","","7 Aug 2002","","","IEEE","IEEE Conferences"
"The distributed generator placement and sizing test suite and analysis tool","A. M. Berry; D. J. Cornforth; G. M. Platt","Secure Grids project in the Energy Technology division of CSIRO, Mayfield West, NSW, 2304, Australia; Secure Grids project in the Energy Technology division of CSIRO, Mayfield West, NSW, 2304, Australia; Secure Grids project in the Energy Technology division of CSIRO, Mayfield West, NSW, 2304, Australia","2009 IEEE/PES Power Systems Conference and Exposition","24 Apr 2009","2009","","","1","9","The concept of integrating small-scale embedded generators into the distribution system has been gaining increasing traction in the research community and with it has come a growing set of contemporary works from the field of artificial intelligence. Thus far however, the studies have failed to explore a diverse set of problems, lack analytical rigour, offer scant comparison between approaches and often fail to use models based on real-world loads or generators. This work describes the new DG PAST SAT software, which is freely available, open to community input and features a rich repository of distribution system resources and a comprehensive test problem suite. When coupled with included analysis utilities, the DG PAST SAT system provides the tools and data for improved research quality in the distribution system planning phase.","","978-1-4244-3810-5","10.1109/PSCE.2009.4839983","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4839983","Artificial Intelligence;Cogeneration;Industrial Power Systems;Interconnected Power Systems;Power Distribution Planning;Power Generation;Software Tools;Testing","Cogeneration;System testing;Power generation;Distributed power generation;Power system planning;Artificial intelligence;Software testing;Industrial power systems;Power system interconnection;Power distribution","distributed power generation;power distribution planning;power engineering computing;power generation planning","distributed generator placement;test suite;analysis tool;small-scale embedded generators;artificial intelligence;DG PAST SAT software;distribution system planning;distributed generator sizing","","2","","39","","24 Apr 2009","","","IEEE","IEEE Conferences"
"Genetic Improvement of Software: A Comprehensive Survey","J. Petke; S. O. Haraldsson; M. Harman; W. B. Langdon; D. R. White; J. R. Woodward","University College London, London, U.K.; University of Stirling, Stirling, U.K.; University College London, London, U.K.; University College London, London, U.K.; University College London, London, U.K.; University of Stirling, Stirling, U.K.","IEEE Transactions on Evolutionary Computation","28 May 2018","2018","22","3","415","432","Genetic improvement (GI) uses automated search to find improved versions of existing software. We present a comprehensive survey of this nascent field of research with a focus on the core papers in the area published between 1995 and 2015. We identified core publications including empirical studies, 96% of which use evolutionary algorithms (genetic programming in particular). Although we can trace the foundations of GI back to the origins of computer science itself, our analysis reveals a significant upsurge in activity since 2012. GI has resulted in dramatic performance improvements for a diverse set of properties such as execution time, energy and memory consumption, as well as results for fixing and extending existing system functionality. Moreover, we present examples of research work that lies on the boundary between GI and other areas, such as program transformation, approximate computing, and software repair, with the intention of encouraging further exchange of ideas between researchers in these fields.","1941-0026","","10.1109/TEVC.2017.2693219","EPSRC Project(grant numbers:DAASE EP/J017515/1); EPSRC Project(grant numbers:GISMOE EP/I033688/1); DAASE Project(grant numbers:EP/J017515/1); FAIME Project(grant numbers:EP/N002849/1); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7911210","Genetic improvement (GI);survey","Genetic programming;Software;Software testing;History;Software engineering","genetic algorithms;software engineering;software maintenance","core publications;evolutionary algorithms;genetic programming;GI;computer science;dramatic performance improvements;software repair;system functionality;Software genetic improvement","","81","","219","CCBY","25 Apr 2017","","","IEEE","IEEE Journals"
"Cecil: a sequencing constraint language for automatic static analysis generation","K. M. Olender; L. J. Osterweil","Dept. of Comput. Sci., Colorado Univ., Boulder, CO, USA; Dept. of Comput. Sci., Colorado Univ., Boulder, CO, USA","IEEE Transactions on Software Engineering","6 Aug 2002","1990","16","3","268","280","A flexible and general mechanism for specifying problems relating to the sequencing of events and mechanically translating them into dataflow analysis algorithms capable of solving those problems is presented. Dataflow analysis has been used for quite some time in compiler code optimization. Most static analyzers have been custom-built to search for fixed and often quite limited classes of dataflow conditions. It is shown that the range of sequences for which it is interesting and worthwhile to search in actually quite broad and diverse. A formalism for specifying this diversity of conditions is created. It is shown that these conditions can be modeled essentially as dataflow analysis problems for which effective solutions are known. It is also shown how these solutions can be exploited to serve as the basis for mechanical creation of analyzers for these conditions.<<ETX>></ETX>","1939-3520","","10.1109/32.48935","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=48935","","Software quality;Computer science;Data analysis;Software tools;Software testing;Security;Software engineering;Algorithm design and analysis;Optimizing compilers;Automata","automatic programming;parallel programming;program compilers;specification languages","Cecil;sequencing constraint language;automatic static analysis generation;general mechanism;dataflow analysis algorithms;compiler code optimization;custom-built;dataflow conditions;dataflow analysis problems","","63","2","34","","6 Aug 2002","","","IEEE","IEEE Journals"
"The software strategy for SPA Plug and play spacecraft","K. B. Center; D. C. Fronterhouse; M. Martin","PnP Innovations, Inc., 2017 Yale Blvd. SE, Suite A, Albuquerque, NM 87106, USA; PnP Innovations, Inc., 2017 Yale Blvd. SE, Suite A, Albuquerque, NM 87106, USA; AFRL VSSE, Kirtland AFB, NM, USA","2010 IEEE Aerospace Conference","15 Apr 2010","2010","","","1","11","The space market could benefit immensely from satellites that not only start their service lives as soon as possible, but can perform their on-orbit roles with minimal intervention from ground operations. The development of flight software techniques that addresses both of these issues has been ongoing at the Air Force Research Laboratories (AFRL) Responsive Space Testbed (RST) for a number of years. The Space Plug&play Avionics (SPA) standards define the means by which software (and hardware) components installed on a networked spacecraft bus deliver their data interfaces and self-organize into a coherent, functional system. A collection of modular, pre-validated software applications are maintained in a ¿virtual store room¿ and are called upon to configure tailored mission capabilities based upon operational needs. Mission ¿Activity Agents¿ encapsulate the logic and sequences necessary to accomplish satellite operations autonomously. Their execution is coordinated using on-orbit planning resources and a priority-based scheduler. The PnPSat mission was the first formal application of these techniques. In the course of the program a spectrum of software tools were authored to support the rapid design, prototyping, and testing of flight software modules for SPA-based satellites. The AFRL Operationally Responsive Space (ORS) assembly depot is being populated with an assortment of hardware and software components sufficient to build a reasonably diverse array of tactical small satellites. The tools being used, and the philosophies employed in their application, are ready for exposure to the larger space community.","1095-323X","978-1-4244-3887-7","10.1109/AERO.2010.5446806","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5446806","","Plugs;Space vehicles;Aerospace electronics;Satellites;Application software;Software testing;Hardware;Software maintenance;Software tools;Laboratories","artificial satellites;avionics;planning (artificial intelligence);system buses;virtual storage","SPA plug and play spacecraft;space market;satellites;flight software techniques;air force research laboratories;responsive space testbed;space plug&play avionics;networked spacecraft bus;virtual store room;activity agents;on-orbit planning resources;priority based scheduler;PnPSat mission;operationally responsive space assembly depot","","","","10","","15 Apr 2010","","","IEEE","IEEE Conferences"
"Enhancing the semiconductor fab layout process","J. J. Plata","Texas Instrum. Inc., Dallas, TX, USA","Proceedings of 1994 IEEE/SEMI Advanced Semiconductor Manufacturing Conference and Workshop (ASMC)","6 Aug 2002","1994","","","11","15","With the dramatically increasing cost of building semiconductor facilities, all aspects of factory design and operation must be evaluated to search for cost reduction opportunities. Enhancing the factory layout process using advanced software tools may be one of those opportunities. SEMATECH's future factory design group is evaluating new software products that attempt to increase the productivity and effectiveness of the layout task and thus increase the value of the factory layout. This article focuses on Texas Instruments' findings as a part of SEMATECH's software beta test. This paper explores new semiconductor fab layout software technology and demonstrates the layout productivity gains and value added to the final layout when it was exercised by Texas Instruments newest 200 mm fab. Additionally, semiconductor layout methodology, metrics, and inherit difficulties are discussed. Emphasis is placed on the software's ability to integrate quantitative and qualitative inputs into the layout process, and provide real time feedback to diverse groups of layout users, dramatically increasing the involvement of the customer and thus the value of the final layout, while decreasing the cycle time in generating an optimized layout. Reference is made to the potential added value to the actual manufacturing operation and process. Extendibility of the layout drawings to aid in the operation and future planning of the fab are discussed.","","0-7803-2053-0","10.1109/ASMC.1994.588156","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=588156","","Production facilities;Costs;Productivity;Instruments;Buildings;Software tools;Software testing;Software quality;Feedback;Manufacturing processes","integrated circuit manufacture","semiconductor fab layout;semiconductor facilities;factory design;cost;software tools;SEMATECH;productivity;Texas Instruments;beta test;real time feedback;customers;manufacturing;cycle time","","3","","1","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Rigorous, Effortless and Timely Assessment of Cellular Network Changes","A. Mahimkar; Z. Ge; S. Ahuja; S. Pathak; N. Shafi",AT&T; AT&T; AT&T; AT&T; AT&T,"2019 49th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN)","22 Aug 2019","2019","","","256","263","Cellular service providers continuously deploy changes in their network in the form of new software releases, service feature introductions, configuration changes, equipment re-homes, firmware upgrades, and topology modifications. It is important to carefully assess the impact of these changes on service performance to validate expected behaviors and take mitigation actions in a timely fashion in case of any unexpected degradation. The diverse nature of the network changes, complex interactions across different layers of the cellular network, and the rapid evolution of the network make it challenging to accurately conduct the assessment. In this paper, we present the design and implementation of our system that enables rigorous, effortless and timely assessment of performance around network changes. We share our lessons learned from the deployment in an operational cellular network over the last eight years.","1530-0889","978-1-7281-0057-9","10.1109/DSN.2019.00037","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8809521","Network changes;performance impact;rigorous analytics;effortless specification;timely assessment","Base stations;Hardware;Measurement;Cellular networks;Software;Testing;Long Term Evolution","cellular radio;mobile communication;smart phones","cellular network changes;cellular service providers;software releases;service feature introductions;configuration changes;firmware upgrades;topology modifications;smartphone users","","","1","27","","22 Aug 2019","","","IEEE","IEEE Conferences"
"Sensitivity of Two Coverage-Based Software Reliability Models to Variations in the Operational Profile","O. J. da Silva; A. N. Crespo; M. L. Chaim; M. Jino","Ospra Software, Campinas, Brazil; Renato Archer-CTI, Centro de Tecnol. da Informacao, Campinas, Brazil; Univ. of Sao Paulo-USP, São Paulo, Brazil; Univ. of Campinas - UNICAMP, Campinas, Brazil","2010 Fourth International Conference on Secure Software Integration and Reliability Improvement","8 Jul 2010","2010","","","113","120","Software in field use may be utilized by users with diverse profiles. The way software is used affects the reliability perceived by its users, that is, software reliability may not be the same for different operational profiles. Two software reliability growth models based on structural testing coverage were evaluated with respect to their sensitivity to variations in operational profile. An experiment was performed on a real program (SPACE) with real defects, submitted to three distinct operational profiles. Distinction among the operational profiles was assessed by applying the Kolmogorov-Smirnov test. Testing coverage was measured according to the following criteria: all-nodes, all-arcs, all-uses, and all-potential-uses. Reliability measured for each operational profile was compared to the reliabilities estimated by the two models, estimated reliabilities were obtained using the coverage for the four criteria. Results from the experiment show that the predictive ability of the two models is not affected by variations in the operational profile of the program.","","978-1-4244-7434-9","10.1109/SSIRI.2010.24","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5502848","software reliability;operational profile;software test;test coverage;testing criteria","Software reliability;Software testing;Production;Robustness;Predictive models;Software measurement;Application software","program testing;software reliability","coverage based software reliability model;structural testing coverage;Kolmogorov-Smirnov test;operational profiles;software reliability growth models","","4","","25","","8 Jul 2010","","","IEEE","IEEE Conferences"
"Assessing a learning object standard adherence","C. M. Tobar; S. I. de Lima","Pontifical Catholic University of Campinas, Spain; FAI-SRS, Spain","2007 37th Annual Frontiers In Education Conference - Global Engineering: Knowledge Without Borders, Opportunities Without Passports","4 Jan 2008","2007","","","T2D-7","T2D-12","New technology has the potential to relate teachers and students to diverse learning resources, bringing up the paradigm of learning objects. A learning object is any digital or non-digital entity that can be used in education through computing. There are many standards defining how to search, evaluate, acquire, share, and use this kind of resource by instructors, students, and automated software processes. Aiming to explore the learning-object paradigm, it was modeled, built, and tested a learning-object database that is part of a collaborative environment, which supports distance learning of computer programming languages. One of the available standards was adopted, the learning object metadata standard - LOM. In order to build and manipulate the learning-object database, some strategies showed to be necessary and thus they were defined. This paper presents an adherence analysis of the LOM standard, considering the development of a learning object repository. The features about LOM utilization by automatic software processes are targeted and some detected problems have their proposed solutions considered and discussed.","2377-634X","978-1-4244-1083-5","10.1109/FIE.2007.4418177","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4418177","learning objects;learning object repositories;LOM standard;adherence;LOM profile","Collaborative work;Standards development;Proposals;Software standards;Collaboration;Computer aided instruction;Collaborative tools;Logic programming;Collaborative software;Testing","computer aided instruction;computer science education;distance learning;meta data;programming languages","learning-object database;computer programming language distance learning;learning object metadata standard;learning object repository;automatic software processes","","2","","10","","4 Jan 2008","","","IEEE","IEEE Conferences"
"Can Robot Navigation Bugs Be Found in Simulation? An Exploratory Study","T. Sotiropoulos; H. Waeselynck; J. Guiochet; F. Ingrand","LAAS, Univ. de Toulouse, Toulouse, France; LAAS, Univ. de Toulouse, Toulouse, France; LAAS, Univ. de Toulouse, Toulouse, France; LAAS, Univ. de Toulouse, Toulouse, France","2017 IEEE International Conference on Software Quality, Reliability and Security (QRS)","14 Aug 2017","2017","","","150","159","The ability to navigate in diverse and previously unknown environments is a critical service of autonomous robots. The validation of the navigation software typically involves test campaigns in the field, which are costly and potentially risky for the robot itself or its environment. An alternative approach is to perform simulation-based testing, by immersing the software in virtual worlds. A question is then whether the bugs revealed in real worlds can also be found in simulation. The paper reports on an exploratory study of bugs in an academic software for outdoor robots navigation. The detailed analysis of the triggers and effects of these bugs shows that most of them can be revealed in low-fidelity simulation. It also provides insights into interesting navigation scenarios to test as well as into how to address the test oracle problem.","","978-1-5386-0592-9","10.1109/QRS.2017.25","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8009918","simulation-based testing;autonomous systems;safety;domain specific defects;exploratory study","Robots;Computer bugs;Navigation;Software;Testing;Unified modeling language;Three-dimensional displays","control engineering computing;digital simulation;mobile robots;navigation;program testing;virtual reality","robot navigation bugs;autonomous robots;navigation software;simulation-based testing;virtual worlds;academic software;outdoor robot navigation;low-fidelity simulation;test oracle problem;test campaigns","","23","","24","","14 Aug 2017","","","IEEE","IEEE Conferences"
"Generic adaptation mechanism for the support of flexible service provision in 3G networks","N. Houssos; S. Pantazis; A. Alonistioti","Commun. Networks Lab., Athens Univ., Greece; Commun. Networks Lab., Athens Univ., Greece; Commun. Networks Lab., Athens Univ., Greece","The 13th IEEE International Symposium on Personal, Indoor and Mobile Radio Communications","10 Dec 2002","2002","2","","760","764 vol.2","The forthcoming era of 3rd generation (3G) mobile communications is heralded to change the wireless telecommunication experience dramatically. User expectations are raised to a significantly higher level, towards the demand for terminal-, network- and location-aware provision of ubiquitous, personalized multimedia services. Under this perspective, the need for adaptability of services and systems to largely diverse contexts is clearly identified. Generic, dynamically extensible adaptation mechanisms that are independent of the subject and criteria of adaptation can be a significant step towards this direction. In the present paper, we introduce a mechanism aiming to fulfill these requirements. The proposed adaptation system has been designed, implemented and successfully integrated and tested in a distributed software platform for provision of value added services to 3G mobile users.","","0-7803-7589-0","10.1109/PIMRC.2002.1047324","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1047324","","Intelligent networks;Context-aware services;Communication networks;Laboratories;Informatics;3G mobile communication;Context;Software testing;System testing;Telecommunication services","3G mobile communication;quality of service;multimedia communication","generic adaptation mechanism;flexible service provision;3G networks;3rd generation mobile communications;3G mobile communications;terminal-aware provision;network-aware provision;location-aware provision;ubiquitous multimedia services;personalized multimedia services;adaptation system;value added services","","","","13","","10 Dec 2002","","","IEEE","IEEE Conferences"
"Path selection in the structural testing: proposition, implementation and application of strategies","L. M. Peres; S. R. Vergilio; M. Jino; J. C. Maldonado",NA; NA; NA; NA,"SCCC 2001. 21st International Conference of the Chilean Computer Science Society","6 Aug 2002","2001","","","240","246","Structural testing criteria help the tester in the generation and evaluation of a test case set T. They are predicates to be satisfied to consider the testing activity ended and generally require the execution of a set P of paths, capable of exercising certain elements in the program under testing. Determining P is an important and hard task, and its automation is strongly desirable for easing the criteria application. This task can influence on the efficacy and on the testing effort and costs. This work explores the use of diverse programs characteristics to propose strategies for selection of testing paths. The work also describes a module that implements a framework for representation and automation of those strategies. Using this module, a testing procedure is presented and a strategy, that uses the number of predicates to select paths, is evaluated. The obtained results give some information about the main advantage of this strategy: to easy the automatic test data generation by reducing the number of selected infeasible paths.","1522-4902","0-7695-1396-4","10.1109/SCCC.2001.972653","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=972653","","Automatic testing;Software testing;Flow graphs;Automation;Costs;Software metrics;Software engineering;Software quality;Input variables","program testing;software metrics","path selection;structural testing;test case set evaluation;test case set generation;automation","","5","","22","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Estimation of software diversity by fault simulation and failure searching","Luping Chen; J. May; G. Hughes","Dept. of Comput. Sci., Bristol Univ., UK; Dept. of Comput. Sci., Bristol Univ., UK; Dept. of Comput. Sci., Bristol Univ., UK","Proceedings 12th International Symposium on Software Reliability Engineering","7 Aug 2002","2001","","","122","131","An important problem for computer-based systems is providing fault tolerance for unknown (at the time of commencement of service) systematic design errors. Such design errors can have a long latency in normal operation and only become apparent under specific conditions associated with particular combinations of input and internal system states. The use of 'diverse' software versions remains a possible approach to prevent coincidental failure, but its potential value has never been quantified. This paper presents the application of data-flow and constant perturbation to simulate the introduction of faults or errors into programs and explores methods to establish the magnitudes and locations of the associated input space failure regions. Used together, these two techniques enable failure behaviour to be described in a quantitative way and provide a method to estimate the diversity of multi-version software. A simple case and a industrial software are studied to illustrate the applications of the approach.","1071-9458","0-7695-1306-9","10.1109/ISSRE.2001.989465","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=989465","","Software testing;Computer errors;Software safety;Computational modeling;Computer simulation;Fault tolerant systems;Application software;Software quality;Software engineering;Fault tolerance","software fault tolerance;program testing;data flow analysis","fault tolerance;systematic design errors;latency;data-flow;failure behaviour;software engineering;fault injection;software fault injection","","1","","28","","7 Aug 2002","","","IEEE","IEEE Conferences"
"Model-based testing in practice","S. R. Dalal; A. Jain; N. Karunanithi; J. M. Leaton; C. M. Lott; G. C. Patton; B. M. Horowitz","Bellcore, Morristown, NJ, USA; NA; NA; NA; NA; NA; NA","Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002)","6 Aug 2002","1999","","","285","294","Model-based testing is a new and evolving technique for generating a suite of test cases from requirements. Testers using this approach concentrate on a data model and generation infrastructure instead of hand-crafting individual tests. Several relatively small studies have demonstrated how combinatorial test generation techniques allow testers to achieve broad coverage of the input domain with a small number of tests. We have conducted several relatively large projects in which we applied these techniques to systems with millions of lines of code. Given the complexity of testing, the model-based testing approach was used in conjunction with test automation harnesses. Since no large empirical study has been conducted to measure efficacy of this new approach, we report on our experience with developing tools and methods in support of model-based testing. The four case studies presented here offer details and results of applying combinatorial test-generation techniques on a large scale to diverse applications. Based on the four projects, we offer our insights into what works in practice and our thoughts about obstacles to transferring this technology into testing organizations.","0270-5257","1-58113-074-0","10.1145/302405.302640","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=841019","","Automatic testing;System testing;Data models;Software testing;Contracts;Costs;Large-scale systems;Telecommunications;Maintenance;Permission","program testing;automatic testing","model-based testing;test case suite generation;requirements;data model;generation infrastructure;combinatorial test generation techniques;test automation harnesses","","140","10","12","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Predictability measures for software reliability models","Y. K. Malaiya; N. Karunanithi; P. Verma","Dept. of Comput. Sci., Colorado State Univ., Ft. Collins, CO, USA; Dept. of Comput. Sci., Colorado State Univ., Ft. Collins, CO, USA; NA","Proceedings., Fourteenth Annual International Computer Software and Applications Conference","6 Aug 2002","1990","","","7","12","A two-component predictability measure is presented that characterizes the long-term predictability of a software reliability growth model. The first component, average predictability, measures how well a model predicts throughout the testing phase. The second component, average bias, is a measure of the general tendency to overestimate or underestimate the number of faults. Data sets for both large and small projects from diverse sources have been analyzed. The results seem to support the observation that the logarithmic model appears to have good predictability is most cases. However, at very low fault densities, the exponential model may be slightly better. The delayed S-shaped model which in some cases has been shown to have good fit, generally performed poorly.<<ETX>></ETX>","","0-8186-2054-4","10.1109/CMPSAC.1990.139306","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=139306","","Software measurement;Software reliability;Predictive models;Software testing;Computer science;Software packages;Guidelines;Phase measurement;Software performance;Software systems","software metrics;software reliability","software reliability models;two-component predictability measure;average predictability;average bias;logarithmic model;delayed S-shaped model","","14","","23","","6 Aug 2002","","","IEEE","IEEE Conferences"
"The Workflow Trace Archive: Open-Access Data From Public and Private Computing Infrastructures","L. Versluis; R. Mathá; S. Talluri; T. Hegeman; R. Prodan; E. Deelman; A. Iosup","Computer Science, Vrije Universiteit Amsterdam, HV Amsterdam, Netherlands; Institute of Computer Science, Universitat Innsbruck, Innsbruck, Tyrol, Austria; Computer Science, Vrije Universiteit Amsterdam, HV Amsterdam, Netherlands; Computer Science, Vrije Universiteit Amsterdam, HV Amsterdam, Netherlands; Institute of Software Technology, University of Klagenfurt, Klagenfurt am, Austria; Information Sciences Institute, University of Southern California, Los Angeles, CA, USA; Computer Science, Vrije Universiteit Amsterdam, HV Amsterdam, Netherlands","IEEE Transactions on Parallel and Distributed Systems","4 May 2020","2020","31","9","2170","2184","Realistic, relevant, and reproducible experiments often need input traces collected from real-world environments. In this work, we focus on traces of workflows-common in datacenters, clouds, and HPC infrastructures. We show that the state-of-the-art in using workflow-traces raises important issues: (1) the use of realistic traces is infrequent and (2) the use of realistic, open-access traces even more so. Alleviating these issues, we introduce the Workflow Trace Archive (WTA), an open-access archive of workflow traces from diverse computing infrastructures and tooling to parse, validate, and analyze traces. The WTA includes > 48 million workflows captured from > 10 computing infrastructures, representing a broad diversity of trace domains and characteristics. To emphasize the importance of trace diversity, we characterize the WTA contents and analyze in simulation the impact of trace diversity on experiment results. Our results indicate significant differences in characteristics, properties, and workflow structures between workload sources, domains, and fields.","1558-2183","","10.1109/TPDS.2020.2984821","Vidi MagnaData; European Union's Horizon 2020 Research and Innovation Programme(grant numbers:801091); National Science Foundation(grant numbers:1664162); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9066946","Workflow;open-source;open-access;traces;characterization;archive;survey;simulation","Cloud computing;Open source software;Testing;Labeling;Computational modeling;Task analysis;Tools","cloud computing;public domain software;resource allocation;workflow management software","datacenters;clouds infrastructures;workflow trace archive;workflow structures;trace diversity;trace domains;computing infrastructures;open-access traces;HPC infrastructures;open-access data","","6","","60","CCBY","14 Apr 2020","","","IEEE","IEEE Journals"
"A universal random test generator for functional verification of microprocessors and system-on-chip","K. Uday Bhaskar; M. Prasanth; G. Chandramouli; V. Kamakoti","Dept. of Comput. Sci. & Eng., Indian Inst. of Technol., Madras, India; Dept. of Comput. Sci. & Eng., Indian Inst. of Technol., Madras, India; Dept. of Comput. Sci. & Eng., Indian Inst. of Technol., Madras, India; Dept. of Comput. Sci. & Eng., Indian Inst. of Technol., Madras, India","18th International Conference on VLSI Design held jointly with 4th International Conference on Embedded Systems Design","24 Jan 2005","2005","","","207","212","This paper presents a universal random test generator template for the design verification of microprocessors and system-on-chips (SOCs). The tool enables verification of the product in one continuous, integrated environment, from C model to behavioral RTL and gate to system-level integration, all in one self-contained chassis. Due to complexity of large designs, it has been a common practice to rely on the power of randomization, to bless us with the humanly not-conceivable corner cases that can arise in reality. There are lots of common features shared by random tools used for testing products with diverse functionalities. This paper proposes a template which captures the commonalities among the different random testing tools and enables the user to quickly design a random test generator by adding product-specific details and using most of the methods available in the template. This leads to high degree of code reuse, less debugging of the random tool and huge reduction in design-cycle time. In addition the template provides enough flexibility and interfaces to enable the execution of the generated tests on targets which may be a C model, RTL or the final chip. By this, one may test a software component, say a bootup code for the system-on-chip or microprocessor at all stages of its design, namely, the software prototype, the RTL at the pre-silicon level and finally the chip, at a post-silicon level. This satisfies the expectations out of a verification platform for a hardware-software codesign environment. The random test generator template was employed for testing a x86-compatible microprocessor both at RTL and post-silicon stage and a software model of a 802.11 MAC. The results are presented in the paper.","2380-6923","0-7695-2264-5","10.1109/ICVD.2005.37","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1383278","","System testing;Microprocessors;System-on-a-chip;Hardware;Software testing;Computer science;Design engineering;Automatic testing;Debugging;Software prototyping","automatic test pattern generation;microprocessor chips;system-on-chip;formal verification","universal random test generator;functional verification;microprocessors;system-on-chip;C model;behavioral RTL;system-level integration;design complexity;code reuse;debugging;random tool;design-cycle time reduction;software prototype;pre-silicon level;post-silicon level;verification platform;hardware-software codesign environment","","10","","12","","24 Jan 2005","","","IEEE","IEEE Conferences"
"An object-oriented testbed for the evaluation of checkpointing and recovery systems","B. Ramamurthy; S. J. Upadhyaya; R. K. Iyer","Dept. of Electr. & Comput. Eng., State Univ. of New York, Buffalo, NY, USA; NA; NA","Proceedings of IEEE 27th International Symposium on Fault Tolerant Computing","6 Aug 2002","1997","","","194","203","The paper presents the design and development of an object-oriented testbed for simulation and analysis of checkpointing and recovery schemes in distributed systems. An important contribution, of the testbed is a unified environment that provides a set of specialized components for easy and detailed simulation of checkpointing and recovery schemes. The testbed allows a designer to mix and match different components either to study the effectiveness of a particular scheme or to freely experiment with hybrid designs before the actual implementation. The testbed also facilitates the evaluation of interdependencies among the various parameters such as communication and application dynamics and their effect on the performance of checkpointing and recovery schemes. The implementation of the testbed as an extension of DEPEND which is an integrated design and fault-injection environment, provides for unique system-level dependability analysis under realistic fault conditions unlike existing simulation tools. The authors illustrate the versatility of the testbed by using four diverse applications, ranging from the comparison of performances of two checkpointing and recovery schemes to the study of the effect of checkpoint size.","0731-3071","0-8186-7831-3","10.1109/FTCS.1997.614092","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=614092","","System testing;Checkpointing;Object oriented modeling;Computational modeling;Analytical models;Distributed computing;Design engineering;Computer simulation;Software testing;Application software","system recovery;virtual machines;distributed processing;distributed processing;object-oriented programming;object-oriented methods;software performance evaluation;testing","object-oriented testbed;recovery system evaluation;checkpointing system evaluation;distributed systems;specialized components;simulation;hybrid designs;parameter interdependencies;application dynamics;communication dynamics;extended DEPEND;integrated design/fault-injection;system-level dependability analysis;realistic fault conditions;checkpoint size effect;performances","","9","","29","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Take Your VNF to the Gym: A Testing Framework for Automated NFV Performance Benchmarking","R. V. Rosa; C. Bertoldo; C. E. Rothenberg",NA; NA; NA,"IEEE Communications Magazine","8 Sep 2017","2017","55","9","110","117","A VNF is a software entity to be run in diverse execution environments with variable configuration options and capabilities (e.g., hardware acceleration) impacting performance. NFV resource multiplexed infrastructures can impose hard-topredict relationships between VNF performance metrics (e.g., latency, frame loss), the underlying allocated resources (e.g., units of vCPU), and the overall system workload. Characterized by many-fold platform configuration and environment variables, the evolving scenario of NFV calls for adequate testing methodologies embracing modern continuous development and integration practices and leveraging open source tools and mindset. To this end, we introduce Gym as our proposed testing framework and methodology for automated NFV performance benchmarking. We present our design principles and the outcomes from a practical validation on a vIMS scenario. A discussion of the lessons learned and the overall NFV performance testing landscape are further contributions of this article.","1558-1896","","10.1109/MCOM.2017.1700127","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8030496","","Benchmark testing;Measurement;Monitoring;Software testing;Visualization;Network function virtualization","program testing;virtualisation","VNF;automated NFV performance benchmarking;software entity;testing framework;vIMS scenario;network functions virtualization","","20","","15","","8 Sep 2017","","","IEEE","IEEE Magazines"
"An exploration of software faults and failure behaviour in a large population of programs","M. J. P. van der Meulen; P. G. Bishop; R. Villa","Centre for Software Reliability, City Univ., London, UK; Centre for Software Reliability, City Univ., London, UK; NA","15th International Symposium on Software Reliability Engineering","24 Jan 2005","2004","","","101","112","A large part of software engineering research suffers from a major problem-there are insufficient data to test software hypotheses, or to estimate parameters in models. To obtain statistically significant results, a large set of programs is needed, each set comprising many programs built to the same specification. We have gained access to such a large body of programs (written in C, C++, Java or Pascal) and in this paper we present the results of an exploratory analysis of around 29,000 C programs written to a common specification. The objectives of this study were to characterise the types of fault that are present in these programs; to characterise how programs are debugged during development; and to assess the effectiveness of diverse programming. The findings are discussed, together with the potential limitations on the realism of the findings.","1071-9458","0-7695-2215-7","10.1109/ISSRE.2004.7","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1383110","","Software reliability;Software engineering;Software testing;Java;Reliability engineering;Mathematics;Parameter estimation;Mathematical model;Statistical analysis;Algorithm design and analysis","software fault tolerance;program testing","software faults;failure behaviour;software engineering;program specification","","15","","8","","24 Jan 2005","","","IEEE","IEEE Conferences"
"Principles and methods of testing finite state machines-a survey","D. Lee; M. Yannakakis","AT&T Bell Labs., Murray Hill, NJ, USA; AT&T Bell Labs., Murray Hill, NJ, USA","Proceedings of the IEEE","6 Aug 2002","1996","84","8","1090","1123","With advanced computer technology, systems are getting larger to fulfill more complicated tasks: however, they are also becoming less reliable. Consequently, testing is an indispensable part of system design and implementation; yet it has proved to be a formidable task for complex systems. This motivates the study of testing finite stare machines to ensure the correct functioning of systems and to discover aspects of their behavior. A finite state machine contains a finite number of states and produces outputs on state transitions after receiving inputs. Finite state machines are widely used to model systems in diverse areas, including sequential circuits, certain types of programs, and, more recently, communication protocols. In a testing problem we have a machine about which we lack some information; we would like to deduce this information by providing a sequence of inputs to the machine and observing the outputs produced. Because of its practical importance and theoretical interest, the problem of testing finite state machines has been studied in different areas and at various times. The earliest published literature on this topic dates back to the 1950's. Activities in the 1960's mid early 1970's were motivated mainly by automata theory and sequential circuit testing. The area seemed to have mostly died down until a few years ago when the testing problem was resurrected and is now being studied anew due to its applications to conformance testing of communication protocols. While some old problems which had been open for decades were resolved recently, new concepts and more intriguing problems from new applications emerge. We review the fundamental problems in testing finite state machines and techniques for solving these problems, tracing progress in the area from its inception to the present and the stare of the art. In addition, we discuss extensions of finite state machines and some other topics related to testing.","1558-2256","","10.1109/5.533956","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=533956","","Circuit testing;Automata;System testing;Sequential circuits;Protocols;Software testing;Paper technology;Automatic testing;Sequential analysis;Fault detection","finite state machines;logic testing;sequential circuits;conformance testing;reviews;protocols;identification;sequences","finite state machines;conformance testing;communication protocols;sequential circuit testing;automata theory;FSM testing","","748","10","153","","6 Aug 2002","","","IEEE","IEEE Journals"
"Yet Another Performance Testing Framework","S. Chen; D. Moreland; S. Nepal; J. Zic","Networking Technol. Lab., Epping; Networking Technol. Lab., Epping; Networking Technol. Lab., Epping; Networking Technol. Lab., Epping","19th Australian Conference on Software Engineering (aswec 2008)","3 Apr 2008","2008","","","170","179","Performance testing is one of the vital activities spanning the whole life cycle of software engineering. While there are a considerable number of performance testing products and open source tools available, they are either too expensive and complicated for small projects, or too specific and simple for diverse performance tests. This paper presents a general-purpose testing framework for both simple and small, and complicated and large-scale performance testing. Our framework proposes an abstraction to facilitate performance testing by separating the application logic from the common performance testing functionalities. This leads to a set of general-purpose data models and components, which form the core of the framework. The framework has been prototyped on both .NET and Java platforms and was used for a number of performance-related projects.","2377-5408","978-0-7695-3100-7","10.1109/ASWEC.2008.4483205","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4483205","","Logic testing;Grinding machines;Java;Software testing;Automatic testing;Life testing;Australia;Software engineering;Data models;Prototypes","Java;program testing;software performance evaluation","performance testing framework;software engineering;performance testing product;general-purpose testing framework;general-purpose data model;.NET platform;Java platform","","7","","13","","3 Apr 2008","","","IEEE","IEEE Conferences"
"Investigation on Academic Research Software Development","D. Liu; S. Xu; M. Brockmeyer","Dept. of Comput. Sci., Wayne State Univ., Detroit, MI; Dept. of Comput. Sci., Algoma Univ., Sault Ste. Marie, ON; Dept. of Comput. Sci., Wayne State Univ., Detroit, MI","2008 International Conference on Computer Science and Software Engineering","22 Dec 2008","2008","2","","626","630","Studying software development processes can help us to understand the software development models which in turn can help programmers to build high-quality software products. Software is not all homogeneous, and industrial software and software developed in academia seem to be different. In order to understand the characteristics of academic software development, we surveyed ten student programmers in five research fields and conducted content analysis. We found that although academic software is highly diverse, the development processes are fairly similar to some extent. We also found some common weaknesses, such as lacking of code management and documentation, and proposed some suggestions to improve the process.","","978-0-7695-3336-0","10.1109/CSSE.2008.1400","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4722129","Software Development;Academic Research;Interviewing;Content Analysis","Computer science;Software engineering;Programming profession;Open source software;Computer industry;Education;Documentation;Software testing;Feedback;Industrial training","computer science education;project management;software engineering","academic research software project development process;high-quality software product;industrial software;code management;code documentation","","3","","17","","22 Dec 2008","","","IEEE","IEEE Conferences"
"WSBen: A Web Services Discovery and Composition Benchmark","S. -c. Oh; H. Kil; D. Lee; S. R. T. Kumara","Penn State University, PA 16802, USA; Penn State University, PA 16802, USA; Penn State University, PA 16802, USA; Penn State University, PA 16802, USA","2006 IEEE International Conference on Web Services (ICWS'06)","19 Dec 2006","2006","","","239","248","A novel benchmark, WSBen, for testing web services discovery and composition is presented. WSBen includes: (1) A collection of synthetic web services (WSDL) files with diverse characteristics and sizes; (2) Test discovery and composition queries and solutions; and (3) External files for statistical analysis and AI planners. Users can fine-tune the generated WSDL files using various parameters such as skewness or matching type. It is our hope that WSBen will provide useful insights for researchers evaluating the performance of web services discovery and composition algorithms and softwares.","","0-7695-2669-1","10.1109/ICWS.2006.148","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4032033","","Web services;Benchmark testing;Acoustical engineering;Simple object access protocol;Computer industry;Manufacturing industries;Computer aided manufacturing;Computer science;Educational institutions;Software testing","benchmark testing;planning (artificial intelligence);program testing;software performance evaluation;statistical analysis;Web services","Web service discovery benchmark;Web service composition benchmark;synthetic Web services files;test discovery;composition queries;statistical analysis;AI planners","","28","","18","","19 Dec 2006","","","IEEE","IEEE Conferences"
"A Comparative Study of VoIP Standards with Asterisk","P. Montoro; E. Casilari","Dipt. Tecnol. Electron., Univ. of Malaga, Malaga, Spain; Dipt. Tecnol. Electron., Univ. of Malaga, Malaga, Spain","2009 Fourth International Conference on Digital Telecommunications","18 Aug 2009","2009","","","1","6","Since the apparition of Voice over IP (VoIP), many standards (mainly signaling protocols and codecs) have arisen with the aim of enabling voice calls through data networks. This paper describes a comparative study to evaluate the performance of a representative set of these standards when transmitting voice streams in a packet network. Asterisk PBX software is employed to define a testbed that allows to monitor diverse performance parameters in actual VoIP connections after the call establishment phase. Performed tests include the use of SIP and IAX (with and without trunking) signaling protocols as well as four different codecs. The obtained Results (expressed in terms of processor utilization, memory usage and network bandwidth consumption) show the clear benefits of employing IAX with trunking.","","978-0-7695-3695-8","10.1109/ICDT.2009.8","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5205247","Voice over IP;Asterisk;SIP;trunking","Protocols;Codecs;Internet telephony;Software testing;Bandwidth;Streaming media;Packet switching;Telecommunication standards;Code standards;Software performance","codecs;Internet telephony;protocols","VoIP standards;Voice over IP;voice streams;packet network;asterisk PBX software;trunking","","20","","24","","18 Aug 2009","","","IEEE","IEEE Conferences"
"A Flexible Approach to WSN Deployment","L. D. Pedrosa; P. Melo; R. M. Rocha; R. Neves","Inst. de Telecomun., Tech. Univ. of Lisbon, Lisbon; NA; NA; NA","2008 Proceedings of 17th International Conference on Computer Communications and Networks","17 Nov 2008","2008","","","1","6","A flexible wireless sensor network platform for easier implementation of diverse applications has been developed and deployed at the Institute Superior Tecnico - Technical University of Lisbon (IST-TUL). This test-bed integrates multiple projects into a single common network, thus creating an expandable platform that facilitates the development of future applications. To achieve this flexibility, a dedicated software framework was developed that not only provides a centralized configuration panel that is accessible over the Internet, allowing the administrator to configure common network parameters, but also supports application programmability, enabling fine-grained control of in-network sensing, processing, and actuation. On top of this platform, three initial applications have been developed and are currently coexisting within the same network, thus demonstrating the new platform's capabilities. The paper discusses the main issues related with the test-bed architecture and the development of an environmental interaction application, with an illustrative purpose, along with the deployment challenges. Results of the experimental evaluation of the test-bed are also shown, focusing on the performance of the environmental interaction application's in-network processing system. A particularly relevant result is denoted by the minimum time the network needs to complete its processing tasks (approximately 200 ms in our test topology).","1095-2055","978-1-4244-2389-7","10.1109/ICCCN.2008.ECP.161","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4674320","","Wireless sensor networks;Application software;System testing;Temperature sensors;Vibration measurement;Telecommunications;Sensor systems and applications;IP networks;Intelligent sensors;Software testing","Internet;telecommunication computing;wireless sensor networks","flexible wireless sensor network platform;dedicated software framework;centralized configuration panel;Internet;application programmability;in-network sensing;test-bed architecture;environmental interaction application","","3","","14","","17 Nov 2008","","","IEEE","IEEE Conferences"
"Utilizing a service-oriented architecture to perform closed-loop diagnostics in network centric support environments","A. L. Alwardt; A. R. Nielson","The Boeing Company, P.O. Box 516 M/C S221-2110, St. Louis, MO 63156-0516 , USA; The Boeing Company, P.O. Box 516 M/C S221-2110, St. Louis, MO 63156-0516 , USA","2007 IEEE Autotestcon","5 Nov 2007","2007","","","332","339","Service-Oriented Architecture (SOA) is one of the latest technology enablers that supports closed-loop diagnostics in Network Centric Support Environments (NCSEs). SOA provides patterns for the architecture, design, implementation, deployment, and management of loosely coupled software services that support the requirements of business processes and software users regardless of the underlying platform or implementation. The focus of this paper will be to examine providing a SOA via Web services. More specifically, this paper will discuss an architecture for developing Web services that perform closed-loop diagnostics in military NCSEs. The military information technology infrastructure is comprised of many diverse systems that together provide to key personnel the processed information necessary to support our war-fighters. When new or upgraded systems are deployed, it is far too costly to rewrite all legacy applications. A more cost effective method is to take a System-of-Systems approach to provide a non-intrusive solution that blends well with existing support processes and leverages existing applications and their data stores. A SOA readily supports implementing a System-of-Systems solution to provide closed-loop diagnostics in NCSEs in which various components reside at multiple levels and within multiple domains. When utilizing a SOA to implement closed-loop diagnostics in NCSEs, there are several key ingredients in developing a suitable architecture. These ingredients include leveraging the architecture defined in the Institute of Electrical and Electronics Engineers (IEEE) STD 1232 -Artificial Intelligence Exchange and Service Tie to All Test Environments (AI-ESTATE) specification, leveraging standard data format specifications such as the IEEE STD P1636.1 Draft Trial-Use Standard for Software Interface for Maintenance Information Collection and Analysis (SIMICA): Exchanging Test Results and Session Information via the Extensible Markup Language (XML) specification, leveraging the XML transaction communication framework, ensuring information assurance compliance, and ensuring 24/7 system availability.","1558-4550","978-1-4244-1238-9","10.1109/AUTEST.2007.4374238","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4374238","","Service oriented architecture;Computer architecture;Electronic equipment testing;XML;Web services;Software testing;System testing;Communication standards;Software standards;Software maintenance","artificial intelligence;business process re-engineering;closed loop systems;IEEE standards;Web services;XML","service oriented architecture;closed-loop diagnostics;network centric support environments;software services;business process;software users;Web services;military information technology infrastructure;IEEE STD 1232;artificial intelligence exchange;service tie;IEEE STD P1636.1;draft trial-use standard;software interface;maintenance information collection;extensible markup language;XML specification;transaction communication framework;system-of-systems solution","","3","","10","","5 Nov 2007","","","IEEE","IEEE Conferences"
"Employing classifying terms for testing model transformations","M. Gogolla; A. Vallecillo; L. Burgueño; F. Hilken","University of Bremen, Germany; University of Málaga, Spain; University of Málaga, Spain; University of Bremen, Germany","2015 ACM/IEEE 18th International Conference on Model Driven Engineering Languages and Systems (MODELS)","30 Nov 2015","2015","","","312","321","This contribution proposes a new technique for developing test cases for UML and OCL models. The technique is based on an approach that automatically constructs object models for class models enriched by OCL constraints. By guiding the construction process through so-called classifying terms, the built test cases in form of object models are classified into equivalence classes. A classifying term can be an arbitrary OCL term on the class model that calculates for an object model a characteristic value. From each equivalence class of object models with identical characteristic values one representative is chosen. The constructed test cases behave significantly different with regard to the selected classifying term. By building few diverse object models, properties of the UML and OCL model can be explored effectively. The technique is applied for automatically constructing relevant source model test cases for model transformations between a source and target metamodel.","","978-1-4673-6908-4","10.1109/MODELS.2015.7338262","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7338262","","Unified modeling language;Computational modeling;Data models;Buildings;Software testing;Context","program testing;Unified Modeling Language","classifying terms;model transformation testing;UML models;OCL models;object models;class models;relevant source model test cases","","9","","31","","30 Nov 2015","","","IEEE","IEEE Conferences"
"Analytical Study of Agile Methodology in Information Technology Sector","R. Singh; D. Kumar; B. B. Sagar","Amity University Uttar Pradesh,Noida,India; Amity University Uttar Pradesh,Noida,India; Birla Institute of Technology Mesra","2019 4th International Conference on Information Systems and Computer Networks (ISCON)","16 Mar 2020","2019","","","422","426","With increasing demand of agile methodology in software development, almost every software organization is trying to move far from previous methods to adopt agile methodology in software development. In place of being extrapolative, agile somewhat being adaptive and focuses on customer satisfaction. It supports self-organized groups that work for technical excellence to increase agility. But number of team members is an issue that is in turn controlled by team perspective. The technique used in this research focuses on three diverse sized agile groups making software's using the same technologies. Both objective and subjective actions are used and the outcomes are reinforced by a study. The result clearly demonstrates that for better results in agile software development, it is critical to select the right persons to be considered as a good team. This paper focuses on different programming advancement techniques, their benefits and demerits, and how to choose the appropriate strategies for a specific circumstance. In addition it examines agile methodologies with the help of a case study that focuses on the advantages of agile over the conventional methods used in the software industry. This paper introduces a concept namely “Two Way Assessment” an approach to boost the process to make it more effective by identifying and removing the defects.","","978-1-7281-3651-6","10.1109/ISCON47742.2019.9036280","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9036280","Agile;Agile Methodologies;Two-Way Assessment","Software;Testing;Programming;Organizations;Agile software development;Industries;Planning","DP industry;project management;software development management;software prototyping;team working","agile methodology;information technology sector;software organization;agile software development;software industry;two way assessment approach","","3","","20","","16 Mar 2020","","","IEEE","IEEE Conferences"
"A Discussion on Experimental Model Validation","S. Leye; J. Himmelspach; A. M. Uhrmacher","Dept. of Comput. Sci., Univ. of Rostock, Rostock; Dept. of Comput. Sci., Univ. of Rostock, Rostock; Dept. of Comput. Sci., Univ. of Rostock, Rostock","2009 11th International Conference on Computer Modelling and Simulation","26 May 2009","2009","","","161","167","Model validation is essential in modeling and simulation. It ldquofinalizesrdquo the modeling process, and provides the base for reliable experiments with the model, and thus to gain trustworthy insights of the system under study. Diverse techniques have been developed addressing different needs and are used during different phases in the modeling and simulation life cycle. Experimental model validation depends on the execution of the model. Thus, the peculiarities of the simulation engine might influence the results of experiments and thus have to be taken into account. Execution also underlies some techniques of software validation which can be adopted for experimental model validation. New approaches apply model checking techniques for trace inspections, and emphasize the importance of an explicit description of requirements. All of this implies new requirements for systems intended to support experimental model validation.","","978-1-4244-3771-9","10.1109/UKSIM.2009.20","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4809756","verification;validation;modeling;simulation","Context modeling;Computational modeling;Computer simulation;Software testing;Programming;Software standards;ISO standards;Computer science;Engines;Inspection","formal specification;program diagnostics;program verification","experimental model validation;modeling process;software validation;model checking technique;program trace inspection;simulation life cycle;formal specification","","15","","39","","26 May 2009","","","IEEE","IEEE Conferences"
"A heterogeneous solution for improving the return on investment of requirements traceability","J. Cleland-Huang; G. Zemont; W. Lukasik","Sch. of Comput. Sci., Telecommun., & Inf. Syst., DePaul Univ., Chicago, IL, USA; Sch. of Comput. Sci., Telecommun., & Inf. Syst., DePaul Univ., Chicago, IL, USA; Sch. of Comput. Sci., Telecommun., & Inf. Syst., DePaul Univ., Chicago, IL, USA","Proceedings. 12th IEEE International Requirements Engineering Conference, 2004.","20 Sep 2004","2004","","","230","239","This work describes a best-of-breed approach to traceability, in which the return-on-investment of the requirements traceability effort is maximized through the strategic deployment of a heterogeneous set of traceability techniques. This contrasts with typical traceability practices that tend to utilize a single technique such as a matrix or tool embedded into a requirements management package even though it may not provide the optimal solution for the traceability needs of a diverse set of requirements. The proposed solution, named TraCS (traceability for complex systems), defines project level trace strategies for categories of requirements and establishes links strategically in order to optimize returns of the traceability effort and minimize the risk inherent to software evolution. The paper provides a rationale for heterogeneous traceability, describes an extensible traceability framework, and then defines the process for establishing project level trace strategies. It concludes with an example drawn from a system to control chemical reactions at a catalyst plant.","1090-705X","0-7695-2174-6","10.1109/ICRE.2004.1335680","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1335680","","Investments;Packaging;Costs;Information retrieval;Computer science;Information systems;Control systems;Chemicals;Software engineering;Software testing","systems analysis;large-scale systems;risk management;investment","return-on-investment;requirements traceability;best-of-breed approach;traceability practices;requirements management package;TraCS;complex system traceability;software evolution","","25","1","31","","20 Sep 2004","","","IEEE","IEEE Conferences"
"Evolution of an active networks testbed","S. Berson; S. Dawson; R. Braden","Inf. Sci. Inst., Univ. of Southern California, Marina del Rey, CA, USA; NA; NA","Proceedings DARPA Active Networks Conference and Exposition","7 Aug 2002","2002","","","446","465","This paper explores the requirements for a network testbed designed specifically to support research in active networking. It also describes the design of the wide-area active networks testbed named the ABone. The ABone provides a virtual and real network infrastructure for active network experiments, using a diverse set of OS platforms. Its design embodies a tradeoff among the testbed goals of scalability, availability, security, heterogeneity, and modularity.","","0-7695-1564-9","10.1109/DANCE.2002.1003513","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1003513","","Computer architecture;System testing;Computer networks;Life testing;Computational modeling;Application software;Software testing;Protocols;Scalability;Linear particle accelerator","wide area networks;transport protocols;telecommunication security;security of data;network operating systems","active networks testbed;wide-area active networks;ABone;network infrastructure;scalability;availability;network security;network programmability;native IP connectivity;heterogeneity;modularity;network operating system","","9","","15","","7 Aug 2002","","","IEEE","IEEE Conferences"
"NETEMBED: A network resource mapping service for distributed applications","J. Londono; A. Bestavros","Computer Science Department, Boston University, USA; Computer Science Department, Boston University, USA","2008 IEEE International Symposium on Parallel and Distributed Processing","3 Jun 2008","2008","","","1","8","Emerging configurable infrastructures (large-scale overlays, grids, distributed testbeds, and sensor networks among others) comprise diverse sets of computing resources and network conditions. The distributed applications to be deployed on these infrastructures exhibit increasingly complex constraints and requirements on the resources they require. Thus, a common problem facing the efficient deployment of distributed applications on these infrastructures is that of mapping application-level requirements onto the network in such a manner that the requirements of the application are realized. We present two new techniques to tackle this combinatorially-hard problem that thanks to a number of heuristics, are able to find feasible solutions or determine the non-existence of a solution in most cases, where otherwise the problem would be intractable. These techniques are also false negative free, a common problem among other heuristics currently in use.","1530-2075","978-1-4244-1693-6","10.1109/IPDPS.2008.4536207","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4536207","","Application software;Testing;Grid computing;Resource management;Computer science;Large-scale systems;Computer networks;Distributed computing;Heart;Search problems","grid computing;information networks","network resource mapping service;configurable infrastructures;mapping application-level requirements;combinatorially-hard problem","","6","2","16","","3 Jun 2008","","","IEEE","IEEE Conferences"
"A Model for Usage-Based Testing of Event-Driven Software","S. Herbold; J. Grabowski; S. Waack","Inst. of Comput. Sci., Georg-August-Univ. Gottingen, Gottingen, Germany; Inst. of Comput. Sci., Georg-August-Univ. Gottingen, Gottingen, Germany; Inst. of Comput. Sci., Georg-August-Univ. Gottingen, Gottingen, Germany","2011 Fifth International Conference on Secure Software Integration and Reliability Improvement - Companion","25 Aug 2011","2011","","","172","178","Event-driven software is very diverse, e.g., in form of Graphical User Interfaces (GUIs), Web applications, or embedded software. Regardless of the application, the challenges for testing event-driven software are similar. Most event-driven systems allow a huge number of possible event sequences, which makes exhaustive testing infeasible. As a possible solution, usage-based testing has been proposed for several types of event-driven software. However, previous work has always focused on one type of event-driven software. In this paper, we propose a usage-based testing model for event-driven software in general. The model is divided into three layers to provide a maximum of platform independence while allowing interoperability with existing platform dependent solutions.","","978-1-4577-0781-0","10.1109/SSIRI-C.2011.32","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6004520","Usage-based testing;event-driven software","Software;Testing;Graphical user interfaces;Markov processes;Solid modeling;Probabilistic logic","graphical user interfaces;open systems;program testing","usage-based testing model;event-driven software;graphical user interfaces;Web applications;embedded software","","6","","22","","25 Aug 2011","","","IEEE","IEEE Conferences"
"Supporting troubleshooting in machine and plant manufacturing by backstepping of PLC-control software","B. Werner; B. Vogel-Heuser; S. Ziegltrum; H. Gröbl; C. Botzenhardt","CODESYS GmbH,Kempten,Germany; Technical University Munich,Chair of Automation and Information Systems,Garching,Germany; Technical University Munich,Chair of Automation and Information Systems,Garching,Germany; Technologies GmbH & Co.,DORST,KG Kochel am See,Germany; GmbH & Co. KG,MULTIVAC Sepp Haggenmüller,Wolfertschweden,Germany","2020 IEEE Conference on Industrial Cyberphysical Systems (ICPS)","4 Dec 2020","2020","1","","242","249","Inreasingly flexible production systems realize functions using a combination of versatile sensors and actuators with complex control software. Hence, quality control of software and debugging of sporadic and difficult to find errors is becoming more and more expensive. Therefore a method to monitor and replay the behavious of the system would be highly beneficial. For the realization of a PLC-based ""flight recorder"" for machines or plants, technical as well as industrial requirements are analyzed. Interviews conducted in two representative machine and plant manufacturers allow the derivation of a comprehensive set of diverse use cases, which could be used as benchmark set for similar concepts in the future. Based on the use cases, two different concepts for the recorder functionality were developed, prototypically implemented, and tested according to the machine and plant manufacturers' requirements. New programming language elements, necessary for the implementation of this functionality like an operator to identify the actual running task and the possibility to control a code dump form within the program have already found their way into the public software development environment (IDE) of CODESYS. After an evaluation using a real laboratory plant, the concepts were iteratively improved. Finally, insights of remaining research challenges or beneficial future applications for the developed methods are given.","","978-1-7281-6389-5","10.1109/ICPS48405.2020.9274778","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9274778","PLC;Replay;Troubleshooting;Backstepping;Computer and Control Systems","Software;Testing;Runtime;Data acquisition;Companies;Unified modeling language;Real-time systems","control engineering computing;flexible manufacturing systems;industrial plants;machinery production industries;production engineering computing;programmable controllers;programming languages;quality control;system monitoring","troubleshooting;plant manufacturing;PLC-control software;flexible production systems;versatile sensors;actuators;complex control software;quality control;debugging;flight recorder;industrial requirements;machine manufacturing;plant manufacturers;use cases;CODESYS;public software development environment;programming language elements;laboratory plant;recorder functionality","","","","21","","4 Dec 2020","","","IEEE","IEEE Conferences"
"Learning from experience: operating system vulnerability trends","S. C. Lee; L. B. Davis","Appl. Phys. Lab., Johns Hopkins Univ., MD, USA; Appl. Phys. Lab., Johns Hopkins Univ., MD, USA","IT Professional","6 Feb 2003","2003","5","1","17","24","Despite their failings, collections of vulnerability bulletins and incident reports still provide the best source for data that could give security engineering a quantitative basis. For this reason, we used vulnerability bulletins to extract statistics about the security of common products; specifically the diverse security characteristics of operating systems in the Windows, Unix, and Linux families. In many cases, the data that was available, rather than security engineering requirements, dictated which statistics we derived. Nevertheless, our findings provide interesting insights into how the various products differ and suggest which security mechanisms would most effectively protect different system designs.","1941-045X","","10.1109/MITP.2003.1176486","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1176486","","Operating systems;Data security;Information security;Data engineering;Reliability engineering;Information systems;Design engineering;Software testing;Statistics;Acoustical engineering","security of data;operating systems (computers);software reliability;Unix","operating system vulnerability;incident reports;data security;vulnerability bulletins;Windows;Unix;Linux;statistics;system designs","","5","","4","IEEE","6 Feb 2003","","","IEEE","IEEE Magazines"
"Enhancements in the Orphan Process for Wireless Personal Area Networks: Real Implementation Scenarios","A. Garcia-Sanchez; F. Garcia-Sanchez; J. Garcia-Haro","Dept. of Inf. Technol. & Commun., Tech. Univ. of Cartagena, Cartagena, Spain; Dept. of Inf. Technol. & Commun., Tech. Univ. of Cartagena, Cartagena, Spain; Dept. of Inf. Technol. & Commun., Tech. Univ. of Cartagena, Cartagena, Spain","2009 Fourth International Conference on Software Engineering Advances","30 Oct 2009","2009","","","371","377","Wireless personal area networks (WPAN) are wireless sensor networks (WSN) designed for allowing a low-cost, low-power and short-range wireless communication. The IEEE 802.15.4 is the WPAN standard which satisfies these features and facilitates diverse self-configuring operation processes for adapting to different environments and applications. One of these processes is responsible for resolving the loss of coverage of a device, namely an orphan device. It has associated a long procedure when the device has to return to the wireless network, incurring in a high delay and energy consumption. This behavior implies that the Orphan device does not perform its assigned tasks during this delay increasing simultaneously its power consumption. We have designed a new algorithm, called optimized orphan algorithm (OOA), which offers a significant better delay and energy consumption performance. The OOA algorithm is implemented on real devices and evaluated under different scenarios. In this paper, the results obtained are presented and discussed as well.","","978-1-4244-4779-4","10.1109/ICSEA.2009.60","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5298208","Wireless Sensor Networks;Orphan Process;Performance Evaluation","Wireless personal area networks;Software engineering;Programming;Education;Collaborative software;Computational modeling;Information technology;Software testing;Computer simulation;Computer aided software engineering","personal area networks;wireless sensor networks","wireless personal area networks;wireless sensor networks;wireless communication;IEEE 802.15.4;optimized orphan algorithm","","2","","10","","30 Oct 2009","","","IEEE","IEEE Conferences"
"An experience in blending the traditional and Agile methodologies to assist in a small software development project","W. Singhto; N. Denwattana","Faculty of Informatics Burapha University Chonburi, Thailand 20131; Faculty of Informatics Burapha University Chonburi, Thailand 20131","2016 13th International Joint Conference on Computer Science and Software Engineering (JCSSE)","21 Nov 2016","2016","","","1","5","Agile methodology has been adopted for many software development projects, due to its ability to deal with changing product requirements, while Traditional methods are better suited to dealing with projects that have clearly defined requirements. Because of the differences in the two methodologies and their diverse approaches to solving development problems, it is necessary to understand their individual approaches in order for the benefits to be compared and synthesized. This study is necessary to understand the differences and diversities of the two methodologies using the checklist table to select and adopt the appropriate methodology for particular development projects. Results of this study not only provide positive answers but also offer suggestions for better integration.","","978-1-5090-2033-1","10.1109/JCSSE.2016.7748914","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7748914","Agile;Traditional;Combined Agile and Traditional;Project mangement;SMEs","Software;Testing;Training;Encoding;Organizations;Adaptation models;Computer science","formal specification;project management;software development management;software prototyping","agile methodologies;software development project;product requirements;development problems","","","","13","","21 Nov 2016","","","IEEE","IEEE Conferences"
"IoT based Security Model to Enhance Blockchain Technology","S. Awasthi; P. Johri; S. K. Khatri","Amity University, Noida, Uttar Pradesh, India; Galgotias University, Greater Noida, India; Amity University, Noida, Uttar Pradesh, India","2018 International Conference on Advances in Computing and Communication Engineering (ICACCE)","23 Aug 2018","2018","","","133","137","The rapid growth of blockchain technology can be felt in our everyday lives but despite these progressions security remains a concern for the Blockchain environment as it breached a diverse range of gadgets, noticeable measures of information, production network partners to security threats. IoT security and privacy are basic achievement factors for meeting the elevated standards of the innovation to change numerous parts of our general society and economy. The proposed IoT based Blockchain model handles most security dangers, while considering the asset imperatives of numerous IoT devices. Although this architecture is a lightweight, secure and fundamental approach, hypothetically it can be scaled further in areas without compromising its performance and user's anonymity.","","978-1-5386-4485-0","10.1109/ICACCE.2018.8441720","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8441720","Blockchain;private key;Unique Id;block nodes;Validator;Bitcoin;Ethereum","Tools;Software;Testing;Organizations;Automation;Production;Pipelines","data privacy;Internet of Things;security of data","security threats;data privacy;IoT based security model;blockchain technology enhancement;IoT based blockchain model","","1","","15","","23 Aug 2018","","","IEEE","IEEE Conferences"
"An efficient algorithm for real-time network reconfiguration in large scale unbalanced distribution systems","Jin-Cheng Wang; Hsiao-Dong Chiang; G. R. Darling","Sch. of Electr. Eng., Cornell Univ., Ithaca, NY, USA; Sch. of Electr. Eng., Cornell Univ., Ithaca, NY, USA; NA","IEEE Transactions on Power Systems","6 Aug 2002","1996","11","1","511","517","Real-time applications demand fast computation, this paper proposes an efficient algorithm for real-time network reconfiguration on large unbalanced distribution networks. A novel formulation of the network reconfiguration to achieve loss minimization and load balancing is given. To reduce computational requirements for the solution algorithm, well justified power flow and loss reduction formulas in terms of the on/off status of network switches are proposed for efficient system updating. The algorithm relies only on a few full power flow studies based on system states attained by explicit expressions using backward-forward sweeps for efficient computation of the system's states at the critical system operating points. The solution algorithm runs in an amount of time linearly proportional to the number of the switches and the number of sectionalizing switches in the system. The solution algorithm has been implemented into a software package and tested on unbalanced distribution systems including a system with 292-buses, 76-laterals, 7 transformers, 45 switches and 255 line sections under diverse system conditions.","1558-0679","","10.1109/59.486141","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=486141","","Switches;Computer networks;Computer applications;Distributed computing;Load management;Load flow;Load flow analysis;Software algorithms;Software packages;Software testing","distribution networks;power system control;real-time systems;transmission network calculations;losses;load flow;power system analysis computing","real-time network reconfiguration;large scale unbalanced distribution systems;algorithm;loss minimization;load balancing;power flow;loss reduction formulas;on/off status;network switches;backward-forward sweeps;critical system operating points;software package;nonlinear integer programming","","71","","14","IEEE","6 Aug 2002","","","IEEE","IEEE Journals"
"Hardware-Software Approaches to In-Circuit Emulation for Embedded Processors","C. -F. Kao; H. -M. Chen; I. -J. Huang",National Sun Yat-Sen University; Andes Technology; National Sun Yat-Sen University,"IEEE Design & Test of Computers","10 Oct 2008","2008","25","5","462","477","In-circuit emulators have become part of the permanent structure of microprocessor cores to support on-chip test and debug activities in highly integrated environments such as SoCs. However, ICE design styles and operation principles are quite diverse. This article presents a taxonomy based on the notions of foreground and background operations and hardware-software implementation alternatives to organize existing in-circuit emulation approaches.","1558-1918","","10.1109/MDT.2008.142","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4648428","","Emulation;Ice;Circuit testing;System testing;Software debugging;Software testing;Hardware;Embedded software;Microprocessor chips;Control systems","hardware-software codesign;microprocessor chips","hardware-software approaches;in-circuit emulation;embedded processors;microprocessor cores;on-chip test;debug activities;SoC;taxonomy","","2","","20","IEEE","10 Oct 2008","","","IEEE","IEEE Magazines"
"A Novel Component-based Hardware-Software Co-simulation System Based on OR1200","S. He; M. Zhang","Institute of Information and Communication Engineering, Zhejiang University, Hangzhou, 310027, China. jacyhe@zju.edu.cn; Institute of Information and Communication Engineering, Zhejiang University, Hangzhou, 310027, China","2007 International Conference on Mechatronics and Automation","24 Sep 2007","2007","","","3440","3445","The close interactions between hardware and software of trustworthy systems demand co-simulation. Due to their diverse applications and often strict physical constraints, trustworthy systems are increasingly component-based and include only the necessary components for their missions. For this reason, we present a novel component-based approach to hardware-software co-simulation systems using OR1200. In our approach, a component model for trustworthy systems which unifies the concepts of hardware components and software components is defined. In our proposed system, it uses an instruction set simulator (ISS) instead of OR1200 CPU when simulating the SoC system, and makes use of socket, shared memory and programming language interface (PLI) function to communicate and transfer data between processes. The proposed system is illustrated by an application in H.264 decoding system that is practical and effective.","2152-744X","978-1-4244-0827-6","10.1109/ICMA.2007.4304116","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4304116","hardware-software co-simulation;OR1200;SoC;RTL simulator;instruction set simulator","Hardware;Microprocessors;System-on-a-chip;Software performance;Timing;Accuracy;Field programmable gate arrays;Embedded system;Cost function;Software testing","hardware-software codesign;instruction sets;logic simulation;object-oriented methods;shared memory systems;system-on-chip","component-based hardware-software cosimulation system;OR 1200;component model;trustworthy system;hardware components;software components;instruction set simulator;SoC system;socket communication;shared memory;programming language interface;data transfer","","1","","21","","24 Sep 2007","","","IEEE","IEEE Conferences"
"Reducing Field Failures in System Configurable Software: Cost-Based Prioritization","H. Srikanth; M. B. Cohen; X. Qu","Software Group, IBM, Westford, MA, USA; Dept. of Comp. Sci & Eng., Univ. of Nebraska-Lincoln, Lincoln, NE, USA; Dept. of Comp. Sci & Eng., Univ. of Nebraska-Lincoln, Lincoln, NE, USA","2009 20th International Symposium on Software Reliability Engineering","28 Dec 2009","2009","","","61","70","System testing of configurable software is an expensive and resource constrained process. Insufficient testing often leads to escaped faults in the field where failures impact customers and are costly to repair. Prior work has shown that it is possible to efficiently sample configurations for testing using combinatorial interaction testing, and to prioritize these configurations to increase the rate of early fault detection. The underlying assumption to date has been that there is no added complexity to configuring a system level environment over a user configurable one; i.e. the time required to setup and test each individual configuration is nominal. In this paper we examine prioritization of system configurable software driven not only by fault detection but also by the cost of configuration and setup time that moving between different configurations incurs. We present a case study on two releases of an enterprise software system using failures reported in the field. We examine the most effective prioritization technique and conclude that (1) using failure history of configurations can improve the early fault detection rate, but that (2) we must consider fault detection rate over time, not by the number of configurations tested. It is better to test related configurations which incur minimal setup time than to test fewer, more diverse configurations.","2332-6549","978-1-4244-5375-7","10.1109/ISSRE.2009.26","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5362084","configuration prioritization;regression testing;combinatorial interaction testing","Software systems;System testing;Costs;Fault detection;Software testing;Databases;Operating systems;Environmental economics;Programming;Application software","electronic commerce;program testing;software fault tolerance","system configurable software;cost-based prioritization;configurable software system testing;resource constrained process;combinatorial interaction testing;fault detection;system level environment;enterprise software system;prioritization technique","","20","1","20","","28 Dec 2009","","","IEEE","IEEE Conferences"
"KinLinks: Software Toolkit for kinship analysis and pedigree generation from HTS datasets","A. Shcherbina; D. O. Ricke; E. Schwoebel; T. Boettcher; C. Zook; J. Bobrow; M. Petrovick; E. Wack","Bioengineering Systems and Technologies, Massachusetts Institute of Technology, Lexington, MA USA; Bioengineering Systems and Technologies, Massachusetts Institute of Technology, Lexington, MA USA; Bioengineering Systems and Technologies, Massachusetts Institute of Technology, Lexington, MA USA; Bioengineering Systems and Technologies, Massachusetts Institute of Technology, Lexington, MA USA; Bioengineering Systems and Technologies, Massachusetts Institute of Technology, Lexington, MA USA; Bioengineering Systems and Technologies, Massachusetts Institute of Technology, Lexington, MA USA; Bioengineering Systems and Technologies, Massachusetts Institute of Technology, Lexington, MA USA; Bioengineering Systems and Technologies, Massachusetts Institute of Technology, Lexington, MA USA","2016 IEEE Symposium on Technologies for Homeland Security (HST)","15 Sep 2016","2016","","","1","6","The ability to predict familial relationships from source DNA in multiple samples has a number of forensic and medical applications. Kinship testing of suspect DNA profiles against relatives in a law enforcement database can provide valuable investigative leads, determination of familial relationships can inform immigration decisions, and remains identification can provide closure to families of missing individuals. The proliferation of High-Throughput Sequencing technologies allows for enhanced capabilities to accurately predict familial relationships to the third degree and beyond. KinLinks, developed by MIT Lincoln Laboratory, is a software tool that predicts pairwise relationships and reconstructs kinship pedigrees for multiple input samples using single-nucleotide polymorphism (SNP) profiles. The software has been trained and evaluated on a set of 175 subjects (30,450 pairwise relationships), consisting of three multi-generational families and 52 geographically diverse subjects. Though a panel of 5396 SNPs was selected for kinship prediction, KinLinks is highly modular, allowing for the substitution of expanded SNP panels and additional training models as sequencing capabilities continue to progress. KinLinks builds on the SNP-calling capabilities of Sherlocks Toolkit, and is fully integrated with the Sherlocks Toolkit pipeline.","","978-1-5090-0770-7","10.1109/THS.2016.7568891","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7568891","","Machine learning algorithms;Training;DNA;Sequential analysis;Software;Testing;Law enforcement","bioinformatics;data analysis;DNA","KinLinks;software toolkit;kinship analysis;pedigree generation;HTS dataset;familial relationship prediction;DNA;forensic application;medical application;kinship testing;law enforcement database;high-throughput sequencing technology;MIT Lincoln Laboratory;pairwise relationship prediction;kinship pedigree reconstruction;single-nucleotide polymorphism profile;SNP profile;sequencing capability;Sherlocks Toolkit pipeline","","9","","27","","15 Sep 2016","","","IEEE","IEEE Conferences"
"A flexible automatic test system for rotating-turbine machinery","L. F. Wang; K. C. Tan; X. D. Jiang; Y. B. Chen","Electr. & Comput. Eng. Dept., Nat. Univ. of Singapore, Singapore; Electr. & Comput. Eng. Dept., Nat. Univ. of Singapore, Singapore; Electr. & Comput. Eng. Dept., Nat. Univ. of Singapore, Singapore; Electr. & Comput. Eng. Dept., Nat. Univ. of Singapore, Singapore","IEEE Transactions on Automation Science and Engineering","17 Jan 2005","2005","2","1","1","18","The widespread applications of rotating machines, such as turbine machinery, in both industry and commercial life requires advanced technologies to efficiently and effectively test their operational status before they begin their practical productions in the plant. This paper discusses the development of a general flexible automatic test system (ATS) for turbine machinery. In order to meet the demanding test requirements for a large and diverse community of turbine machinery, the proposed automatic test system has a contemporary Windows interface, graphical interaction, and can be easily configured to include functions required by current and emerging test demands. The design and implementation of such a test system is approached from an object-oriented (OO) software engineering point of view for ease of operation, expansion, and maintenance. Practical implementation upon a real industrial plant shows the validity and effectiveness of the implemented ATS for improving the performance and quality of turbine machinery. The obtained test system delivers the performance to meet all rigorous test throughput requirements. Software design in the industrial automation arena becomes more challenging nowadays than ever, due to the increasingly complicated industrial processes and more demanding measurement tasks. This paper presents a flexible automatic test system (ATS) for rotating-turbine machinery based on the systematic object-oriented (OO) software engineering. In this OO method, the process of software development is divided into five major phases: requirement capture, analysis, design, programming, and testing. Requirement capture collects both functional and nonfunctional user requirements for developing the intended system. In the analysis phase, the objects in the problem domain are modeled, and the desired system operations are studied. In the design phase, the results obtained from the analysis phase are converted into a form that can be implemented using programming languages. In the design phase, the issues on how the structures are formed and how they collaborate with one another via interfaces are figured out. In the programming phase, the code for realizing the target system is developed. Finally, in the test phase, the system is tested against the specified requirements to ensure its correctness in both functionality and performance aspects. By adopting the OO software-development method, the flexible ATS for turbine machinery software is developed in an efficient manner. Meanwhile, other novel technologies such as configuration, database management, graphical user interface, Internet, multithreaded programming, and ActiveX Automation are all incorporated into the system development. The method discussed in the paper can be easily extended to the development of other software-intensive industrial automation systems.","1558-3783","","10.1109/TASE.2004.840075","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1381363","Automatic test system (ATS);condition monitoring;distributed system;object orientation;system integration;turbine machinery","Automatic testing;System testing;Turbines;Software testing;Computer industry;Software engineering;Automation;Rotating machines;Machinery production industries;Life testing","turbines;machinery;automatic test software;graphical user interfaces;object-oriented programming;mechanical engineering computing","flexible automatic test system;rotating turbine machinery;object oriented software engineering;Windows interface;industrial plant;condition monitoring;graphical user interface","","3","","31","","17 Jan 2005","","","IEEE","IEEE Journals"
"Reliability improvement of Web-based software applications","L. Davila-Nicanor; P. Mejia-Alvarez","Seccion de Computacion, CINVESTAV-IPN, Zacatenco, Mexico; Seccion de Computacion, CINVESTAV-IPN, Zacatenco, Mexico","Fourth International Conference onQuality Software, 2004. QSIC 2004. Proceedings.","22 Nov 2004","2004","","","180","188","In diverse industrial and academic environments, the quality of the software has been evaluated (validated) using different analytic studies. It is a common practice on these environments to use statistical models for the assurance, control and evaluation of the quality of a software product or process. A number of industries in the safety-critical sector are forced nowadays to use such processes by industry-specific standards (e.g., the DO-178B standard for airborne software systems). The contribution of the present work is focused on the development of a methodology for the evaluation and analysis of the reliability of Web-based software applications. We tested our methodology in a Web-based software system and used statistical modeling theory for the analysis and evaluation of the reliability. The behavior of the system under ideal conditions was evaluated and compared against the operation of the system executing under real conditions. The personal software process (PSP) was introduced in our methodology for improving the quality of the process and the product. The evaluation + improvement (Ei) process is performed in our methodology to evaluate and improve the quality of the software system. The results obtained demonstrated the effectiveness and applicability of our methodology.","","0-7695-2207-6","10.1109/QSIC.2004.1357959","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1357959","","Application software;Computer industry;Software quality;Software systems;Electrical equipment industry;Software standards;Software testing;System testing;Reliability theory;Performance evaluation","software reliability;Internet;software quality;software performance evaluation;software process improvement;statistical analysis","reliability improvement;Web-based software applications;software quality assurance;software quality control;software quality evaluation;Web-based software reliability;statistical modeling theory;reliability analysis;reliability evaluation;personal software process;software system quality;safety-critical sector;industry-specific standards","","1","","17","","22 Nov 2004","","","IEEE","IEEE Conferences"
"Search-Based Energy Testing of Android","R. Jabbarvand; J. -W. Lin; S. Malek","University of California, Irvine; University of California, Irvine; University of California, Irvine","2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE)","26 Aug 2019","2019","","","1119","1130","The utility of a smartphone is limited by its battery capacity and the ability of its hardware and software to efficiently use the device's battery. To properly characterize the energy consumption of an app and identify energy defects, it is critical that apps are properly tested, i.e., analyzed dynamically to assess the app's energy properties. However, currently there is a lack of testing tools for evaluating the energy properties of apps. We present COBWEB, a search-based energy testing technique for Android. By leveraging a set of novel models, representing both the functional behavior of an app as well as the contextual conditions affecting the app's energy behavior, COBWEB generates a test suite that can effectively find energy defects. Our experimental results using real-world apps demonstrate not only its ability to effectively and efficiently test energy behavior of apps, but also its superiority over prior techniques by finding a wider and more diverse set of energy defects.","1558-1225","978-1-7281-0869-8","10.1109/ICSE.2019.00115","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812097","Energy Testing;Android;Software Testing","Testing;Hardware;Global Positioning System;Graphical user interfaces;Smart phones;Receivers;Batteries","Android (operating system);mobile computing;program testing;search problems;smart phones","battery capacity;energy consumption;energy defects;energy properties;search-based energy testing technique;test suite;energy behavior;Android;COBWEB","","10","","69","","26 Aug 2019","","","IEEE","IEEE Conferences"
"A Web Service Test Generator","P. Vanderveen; M. Janzen; A. F. Tappenden","Dept. of Comput. Sci., King's Univ. Edmonton, Edmonton, AB, Canada; Dept. of Comput. Sci., King's Univ. Edmonton, Edmonton, AB, Canada; Dept. of Comput. Sci., King's Univ. Edmonton, Edmonton, AB, Canada","2014 IEEE International Conference on Software Maintenance and Evolution","6 Dec 2014","2014","","","516","520","An automated process for generating test inputs for web services from a WSDL is presented. A grammatical representation of the web service is extracted from the WSDL and used to produce test cases. A context-free grammar (CFG) is generated from the XSD that is stored in the WSDL. The CFG is provided as input into a constraint-satisfaction problem solver to automatically generate a diverse set of structurally correct XML documents. Testing data is then inserted into the XML templates in accordance with any constraints specified in the XSD. Web service-specific testing can be performed with the inclusion of external datasets and service-specific configurations.","1063-6773","978-1-4799-6146-7","10.1109/ICSME.2014.85","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6976129","Software Testing;Web Services;Web Service testing;WSDL;XML Generation;XSD;XML","XML;Grammar;Generators;Testing;Web services;Finite element analysis;Manuals","context-free grammars;program testing;Web services;XML","Web service test generator;WSDL;grammatical representation;context-free grammar;CFG;XSD;constraint-satisfaction problem;XML documents;testing data;XML templates;Web service-specific testing","","3","","19","","6 Dec 2014","","","IEEE","IEEE Conferences"
"Staffing Level and Cost Analyses for Software Debugging Activities Through Rate-Based Simulation Approaches","C. Lin; C. Huang","Dept. of Comput. Sci., Nat. Tsing Hua Univ., Hsinchu, Taiwan; Dept. of Comput. Sci., Nat. Tsing Hua Univ., Hsinchu, Taiwan","IEEE Transactions on Reliability","1 Dec 2009","2009","58","4","711","724","Research in the field of software reliability, dedicated to the analysis of software failure processes, is quite diverse. In recent years, several attractive rate-based simulation approaches have been proposed. Thus far, it appears that most existing simulation approaches do not take into account the number of available debuggers (or developers). In practice, the number of debuggers will be carefully controlled. If all debuggers are busy, they may not address newly detected faults for some time. Furthermore, practical experience shows that fault-removal time is not negligible, and the number of removed faults generally lags behind the total number of detected faults, because fault detection activities continue as faults are being removed. Given these facts, we apply the queueing theory to describe and explain possible debugging behavior during software development. Two simulation procedures are developed based on G/G/infin, and G/G/m queueing models, respectively. The proposed methods will be illustrated using real software failure data. The analysis conducted through the proposed framework can help project managers assess the appropriate staffing level for the debugging team from the standpoint of performance, and cost-effectiveness.","1558-1721","","10.1109/TR.2009.2019669","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4967914","Fault correction;non-homogeneous Poisson process (NHPP);software reliability growth model (SRGM);software testing","Costs;Software debugging;Analytical models;Fault detection;Software reliability;Failure analysis;Queueing analysis;Programming;Data analysis;Performance analysis","program testing;queueing theory;software development management;software reliability","software debugging activity;rate based simulation approach;cost analysis;software reliability;software failure process;fault removal time;fault detection activity;queueing theory;software development;G/G/infin queueing model;G/G/m queueing model;software failure data","","13","1","37","IEEE","26 May 2009","","","IEEE","IEEE Journals"
"Towards Characterizing Adversarial Defects of Deep Learning Software from the Lens of Uncertainty","X. Zhang; X. Xie; L. Ma; X. Du; Q. Hu; Y. Liu; J. Zhao; M. Sun","Peking Univ., Beijing, China; Nanyang Technol. Univ., Singapore, Singapore; Kyushu University,Japan; Nanyang Technological University,Singapore; Kyushu University,Japan; Nanyang Technological University,Singapore; Kyushu University,Japan; Peking University,China","2020 IEEE/ACM 42nd International Conference on Software Engineering (ICSE)","21 Dec 2020","2020","","","739","751","Over the past decade, deep learning (DL) has been successfully applied to many industrial domain-specific tasks. However, the current state-of-the-art DL software still suffers from quality issues, which raises great concern especially in the context of safety- and security-critical scenarios. Adversarial examples (AEs) represent a typical and important type of defects needed to be urgently addressed, on which a DL software makes incorrect decisions. Such defects occur through either intentional attack or physical-world noise perceived by input sensors, potentially hindering further industry deployment. The intrinsic uncertainty nature of deep learning decisions can be a fundamental reason for its incorrect behavior. Although some testing, adversarial attack and defense techniques have been recently proposed, it still lacks a systematic study to uncover the relationship between AEs and DL uncertainty. In this paper, we conduct a large-scale study towards bridging this gap. We first investigate the capability of multiple uncertainty metrics in differentiating benign examples (BEs) and AEs, which enables to characterize the uncertainty patterns of input data. Then, we identify and categorize the uncertainty patterns of BEs and AEs, and find that while BEs and AEs generated by existing methods do follow common uncertainty patterns, some other uncertainty patterns are largely missed. Based on this, we propose an automated testing technique to generate multiple types of uncommon AEs and BEs that are largely missed by existing techniques. Our further evaluation reveals that the uncommon data generated by ourmethod is hard to be defended by the existing defense techniques with the average defense success rate reduced by 35%. Our results call for attention and necessity to generate more diverse data for evaluating quality assurance solutions of DL software.","1558-1225","978-1-4503-7121-6","10.1145/3377811.3380368","National Natural Science Foundation of China(grant numbers:61772038,61532019); Guangdong Science and Technology Department(grant numbers:2018B010107004); NVIDIA; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9284139","Deep learning;uncertainty;adversarial attack;software testing","Deep learning;Uncertainty;Systematics;Software;Task analysis;Testing;Software engineering","learning (artificial intelligence);program testing;security of data","adversarial defects;deep learning software;industrial domain-specific tasks;security-critical scenarios;adversarial examples;typical type;important type;DL software;incorrect decisions;intentional attack;input sensors;industry deployment;intrinsic uncertainty nature;deep learning decisions;incorrect behavior;adversarial attack;large-scale study;multiple uncertainty metrics;benign examples;BEs;common uncertainty patterns;automated testing technique;uncommon AEs;existing defense techniques;average defense success rate","","12","","60","","21 Dec 2020","","","IEEE","IEEE Conferences"
"Why My App Crashes? Understanding and Benchmarking Framework-Specific Exceptions of Android Apps","T. Su; L. Fan; S. Chen; Y. Liu; L. Xu; G. Pu; Z. Su","School of Software Engineering, East China Normal University, Shanghai, China; College of Cyber Science, Nankai Univerisity, Tianjin, China; College of Intelligence and Computing, Tianjin University, Tianjin, China; School of Computer Science and Engineering, Nanyang Technological University, Singapore; Department of Computer Science and Engineering, New York University Shanghai, Shanghai, China; School of Software Engineering, East China Normal University, Shanghai, China; Department of Computer Science, ETH Zurich, Zurich, Switzerland","IEEE Transactions on Software Engineering","15 Apr 2022","2022","48","4","1115","1137","Mobile apps have become ubiquitous. Ensuring their correctness and reliability is important. However, many apps still suffer from occasional to frequent crashes, weakening their competitive edge. Large-scale, deep analyses of the characteristics of real-world app crashes can provide useful insights to both developers and researchers. However, such studies are difficult and yet to be carried out — this work fills this gap. We collected 16,245 and 8,760 unique exceptions from 2,486 open-source and 3,230 commercial Android apps, respectively, and observed that the exceptions thrown from Android framework (termed <italic>“framework-specific exceptions”</italic>) account for the majority. With one-year effort, we (1) extensively investigated these framework-specific exceptions, and (2) further conducted an online survey of 135 professional app developers about how they analyze, test, reproduce and fix these exceptions. Specifically, we aim to understand the framework-specific exceptions from several perspectives: (i) their characteristics (e.g., manifestation locations, fault taxonomy), (ii) the developers’ testing practices, (iii) existing bug detection techniques’ effectiveness, (iv) their reproducibility and (v) bug fixes. To enable follow-up research (e.g., bug understanding, detection, localization and repairing), we further systematically constructed, <italic>DroidDefects</italic>, the first comprehensive and largest benchmark of Android app exception bugs. This benchmark contains 33 <italic>reproducible</italic> exceptions (with test cases, stack traces, faulty and fixed app versions, bug types, etc.), and 3,696 <italic>ground-truth</italic> exceptions (real faults manifested by automated testing tools), which cover the apps with different complexities and diverse exception types. Based on our findings, we also built two prototype tools: Stoat+, an optimized dynamic testing tool, which quickly uncovered three previously-unknown, fixed crashes in Gmail and Google+; ExLocator, an exception localization tool, which can locate the root causes of specific exception types. Our dataset, benchmark and tools are publicly available on <italic><uri>https://github.com/tingsu/droiddefects</uri></italic>.","1939-3520","","10.1109/TSE.2020.3013438","SNSF Spark(grant numbers:CRSK-2_190302); National Natural Science Foundation of China(grant numbers:61632005,61532019); National Research Foundation(grant numbers:NRF2018NCR-NCR005-0001); National Research Foundation Singapore(grant numbers:NRF2018NCR-NSOE004-0001,NRFI06-2020-0022); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9153947","Mobile applications;android applications;empirical study;exception analysis;software testing;bug reproducibility","Computer bugs;Tools;Androids;Humanoid robots;Benchmark testing","","","","4","","149","IEEE","31 Jul 2020","","","IEEE","IEEE Journals"
"Test case design method targeting environmental fault tolerance for high availability clusters","Q. Du; K. Yin; J. Qiu; H. Li; K. Shi; Y. Tian; A. Ma","School of Software Engineering, Tongji University, Shanghai 201804, China; School of Software Engineering, Tongji University, Shanghai 201804, China; School of Software Engineering, Tongji University, Shanghai 201804, China; School of Software Engineering, Tongji University, Shanghai 201804, China; School of Software Engineering, Tongji University, Shanghai 201804, China; School of Software Engineering, Tongji University, Shanghai 201804, China; School of Software Engineering, Tongji University, Shanghai 201804, China","2016 11th International Conference on Reliability, Maintainability and Safety (ICRMS)","28 Sep 2017","2016","","","1","7","With increasing critical business organizations focusing on the quality of service in cloud applications, high availability (HA) has become critical for the product level cluster of cloud applications. Existing availability evaluation methods or testing projects for cloud platforms, however, cannot sufficiently verify cluster tolerance to various reasonable environmental faults. This paper proposes a test case design method targeting environmental fault tolerance for HA clusters. Test cases are designed considering fault modes and components of a cluster application in diverse scenarios. As a result, the fault tolerance of different components to various reasonable faults can be verified via the proposed method. A case study is conducted on Openstack, a widely used open source software platform for cloud environments, to show the feasibility of using this method.","","978-1-5090-2714-9","10.1109/ICRMS.2016.8050033","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8050033","Software Testing;Reliability;High availability;Fault Tolerance","Fault tolerance;Fault tolerant systems;Measurement;Design methodology;Testing;Cloud computing","cloud computing;pattern clustering;program testing;public domain software;software fault tolerance","test case design method;environmental fault tolerance;high availability clusters;critical business organizations;cloud applications;product level cluster;availability evaluation methods;cloud platforms;cluster tolerance;HA clusters;fault modes;cluster application;cloud environments;Openstack program;open source software platform;cloud environment","","1","","24","","28 Sep 2017","","","IEEE","IEEE Conferences"
"Adaptive Random Testing for Multiagent Path Finding Systems","Y. Liu; X. -Y. Zhang","Beihang University, Beijing, China; National Institute of Informatics, Tokyo, Japan","IEEE Transactions on Reliability","2 Mar 2022","2022","71","1","295","308","The multiagent path finding (MAPF) problem identifies the scheduling of multiple agents simultaneously, such that all of them can reach their targets efficiently. To date, MAPF systems have been assigned important tasks such as traffics and warehouses. It is essential to conduct testing for MAPF systems to detect potential failures. Namely, in an MAPF system, a test case is a specific MAPF scenario, including the initial locations of the agents and the environment for these agents to play in. By testing, we intend to find the scenarios (i.e., test cases) whose executions reveal failures. Testing MAPF systems is challenging due to the complexity of its input and the interactions among multiple agents. This article proposes the testing approach based on the adaptive random testing (ART) for MAPF systems. ART aims to generate new test cases far from the already executed ones. Particularly, to calculate the distance between each pair of test cases, we introduce two metrics, the initial density distribution and the destination density distribution, to characterize the distribution of the agents’ initial and destination nodes, respectively. Benefit from ART, the diversity of the information generated during testing can be improved. Experimental results show that compared with the random testing, our approach can detect more diverse failure-revealing scenarios.","1558-1721","","10.1109/TR.2022.3146323","ERATO HASUO Metamathematics for Systems Design(grant numbers:JPMJER1603); JST; Engineerable AI Techniques for the Practical Applications of High-Quality Machine Learning-based Systems(grant numbers:JPMJMI20B8); JST-Mirai; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9725384","Adaptive random testing (ART);density measurement;multiagent path finding (MAPF);multiagent systems;software testing","Measurement;Adaptive systems;Job shop scheduling;Scalability;Subspace constraints;Benchmark testing;Planning","","","","","","49","IEEE","2 Mar 2022","","","IEEE","IEEE Journals"
"Automated Tests for Mobile Games: An Experience Report","G. Lovreto; A. T. Endo; P. Nardi; V. H. S. Durelli","Dept. of Comput., Fed. Univ. of Technol. - Parana, Cornelio Procopio, Brazil; Dept. of Comput., Fed. Univ. of Technol. - Parana, Cornelio Procopio, Brazil; Dept. of Comput., Fed. Univ. of Technol. - Parana, Cornelio Procopio, Brazil; Dept. of Comput. Sci., Fed. Univ. of Sao Joao del Rei, Sao Joao del Rei, Brazil","2018 17th Brazilian Symposium on Computer Games and Digital Entertainment (SBGames)","7 Feb 2019","2018","","","48","488","As mobile gaming is an ever-growing, competitive and profitable market, there has been an increasing demand for better quality in video game software. While manual testing is still a common practice among mobile game developers, some repetitive and error-prone tasks could benefit from test automation. For instance, test scripts that perform sanity checks of the proper functioning of a mobile game would be desirable in an ecosystem with constant hotfixes and updates, as well as a diverse set of configurations (e.g., device hardware, screensizes, and platforms). In this context, this paper reports an experience on developing automated test scripts for mobile games. To this end, we randomly selected 16 mobile games, from different genres, among the popular ones from the Google Play Store. For each game, test scripts were developed using the Appium testing framework and the OpenCV library. Based on our results, we provide an in-depth discussion on the challenges and lessons learned.","2159-6662","978-1-5386-9605-7","10.1109/SBGAMES.2018.00015","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8636923","Mobile Apps;Software Testing;Mobile Games;Video Game Software;Test Cases","Games;Testing;Land mobile radio;Python;Manuals;Task analysis","computer games;evolutionary computation;human computer interaction;interactive systems;mobile computing","computer games;mobile computing;interactive systems;evolutionary computation;human computer interaction;smart phones;virtual reality;computer simulation;ergonomics;handicapped aids","","2","","23","","7 Feb 2019","","","IEEE","IEEE Conferences"
"A case study on reliability and usability testing of a Web portal","M. M. Ali-Shahid; S. Sulaiman","Faculty of Computing, Universiti Teknologi Malaysia, 81310, Skudai, Johor, Malaysia; Faculty of Computing, Universiti Teknologi Malaysia, 81310, Skudai, Johor, Malaysia","2015 9th Malaysian Software Engineering Conference (MySEC)","23 May 2016","2015","","","31","36","Reliability testing of web portals is distinctive as compared to that of conventional software. It requires usability and reliability metrics besides functional testing to ensure diverse users are able to use such portals without any formal training and can rely on the portals or requirements quickly and efficiently. The study utilizes the measurable metrics for usability and reliability testing and establishes interpretation between both metrics by performing testing on a Web portal using online tools and analyze the results. The case study is based on a Web application that facilitates information and knowledge sharing among its online members. The outcome from the study provides an insight on how to measure usability and part of reliability of a Web portal based on ISO metrics using available testing tools.","","978-1-4673-8227-4","10.1109/MySEC.2015.7475191","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7475191","Reliability;usability;Web portals;software testing","Testing;Usability;Measurement;Software reliability;Portals","Internet;portals;program testing;software metrics;software reliability","Web portal usability testing;Web portal reliability testing;reliability metrics;usability metrics;online tools;Web application;knowledge sharing;ISO metrics","","3","","23","","23 May 2016","","","IEEE","IEEE Conferences"
"Compatibility Testing Service for Mobile Applications","T. Zhang; J. Gao; J. Cheng; T. Uehara","Sch. of Software & Microelectron., Northwest Polytech. Univ., Xi'an, China; Dept. of Comput. Eng., San Jose State Univ., San Jose, CA, USA; Sch. of Software & Microelectron., Northwest Polytech. Univ., Xi'an, China; Software Innovation Labs., Fujitsu Aboratories Ltd., Japan","2015 IEEE Symposium on Service-Oriented System Engineering","25 Jun 2015","2015","","","179","186","As more and more mobile applications are developed, mobile app testing and quality assurance have become very important. Due to the diversity of mobile devices and platforms, compatibility testing for mobile apps has been identified as one urgent and challenging issue. There are two major reasons contributing to this issue. They are: a) the large number of mobile devices with diverse features and platforms which are upgraded frequently, b) a higher cost and complexity in mobile app compatibility testing. This paper proposes one optimized compatibility testing strategy using a statistical approach to reduce test costs, and improve engineer's operation efficiency. The paper provides a solution to generate an optimized compatibility test sequence for mobile apps using the K-Means statistical algorithm. A compatibility testing service has been proposed for mobile apps. Moreover, two case study results are reported to demonstrate its potential application and effectiveness.","","978-1-4799-8356-8","10.1109/SOSE.2015.35","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7133527","software testing;mobile testing;compatibility testing;clustering algorithm;test coverage","Mobile communication;Testing;Mobile handsets;Servers;Databases;Home appliances;Analytical models","mobile computing;statistical analysis","compatibility testing service;mobile app testing;quality assurance;mobile devices;mobile app compatibility testing;statistical approach;k-means statistical algorithm","","18","","24","","25 Jun 2015","","","IEEE","IEEE Conferences"
"System Level Test Automation in UAV Development","A. S. Yildirim; E. Berker; M. E. Kayakesen","UAV Test and Integration Department, Turkish Aerospace Industries, Ankara, Turkey; UAV Test and Integration Department, Turkish Aerospace Industries, Ankara, Turkey; UAV Test and Integration Department, Turkish Aerospace Industries, Ankara, Turkey","2018 IEEE AUTOTESTCON","15 Nov 2018","2018","","","1","6","As the complexity of defense systems have increased in recent years; avionics and automated test systems have become more complex. Consequently, system engineering requirements demand robust requirement verification for the customer specifications and product quality. Traditional test system does not meet the demands like inconvenient data format, difficulty in test programs' reuse, inefficient use of available system resources, difficult error findings. The testing technology is growing continuously and rapidly. Frequently used automated test strategies are mainly based on software testing in software verification level. A software insensitive avionic system mostly comprises software modules at the unit level. When it comes to testing from subsystem to system level different circumstances emerge. System level testing has always been heavily dependent on human intervention and human judgment. Before emergence of system of systems concept most of the systems have their own boundaries for external interaction at human machine interface (HMI) level. Hence it has been natural that testing system functionality as a whole at HMI boundaries were carried out by human testers. However due to developments in software technologies and by approaching to automated system level testing problem as a collection of many self-containing diverse sub-problems; it can be seen that software industry has already created lots of tools to address each of these sub-problems without even aiming to solve them for automated system test approach. In this paper automated UAV system test approach will be given by definition and analysis of each problem and solution addressing this problem. New automated testing model is presented to be functional on system level with a combination of hardware and software. The automated testing will handle the testing complexity with faster execution time, reduced testing costs, eliminating user errors and will also to increased probability of detecting failures. Test automation with both simulators and real devices is used for execution of the tests, and for the comparison of actual outcomes with predicted outcomes. This paper introduces a novel approach for test automation implementation for avionic system validation at system level in Unmanned Air Vehicle (UAV) development with different scenarios.","1558-4550","978-1-5386-5223-7","10.1109/AUTEST.2018.8532551","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8532551","Test Automation;UAV Verification;Smoke Test;Integration Test;System Level Test","Aerospace electronics;Testing;Aircraft;Unmanned aerial vehicles;Aerospace control;Software;Automation","autonomous aerial vehicles;avionics;program testing;program verification;software engineering","hardware;test automation implementation;avionic system validation;system level test automation;defense systems;test programs;software testing;software verification level;software insensitive avionic system;software modules;system level different circumstances;human machine interface level;system functionality;software technologies;automated system level testing problem;software industry;automated system test approach;UAV system test approach;system engineering requirements;robust requirement verification;customer specifications;product quality;programs reuse;error findings","","1","","3","","15 Nov 2018","","","IEEE","IEEE Conferences"
"Test data generation framework for Automatic Programming Assessment","R. Romli; S. Sulaiman; K. Z. Zamli","School of Computing, College of Arts and Sciences, Universiti Utara Malaysia, 01000, UUM Sintok, Kedah, Malaysia; Faculty of Computing, Universiti Teknologi Malaysia, 81310 UTM Skudai, Johor, Malaysia; Faculty of Computer System and Engineering, Universiti Malaysia Pahang, Lebuhraya Tun Razak, 26300, Gambang, Kuantan, Malaysia","2014 8th. Malaysian Software Engineering Conference (MySEC)","18 Dec 2014","2014","","","84","89","Automatic Programming Assessment (APA) has recently become a significant method in assisting educators of programming courses to automatically mark and grade students' programming as its counterpart; the typical manual tasks are prone to errors and leading to inconsistency. By default, test data generation process plays an important role to perform a dynamic testing on students' programs. In software testing field, there have been diverse automated methods for test data generation. Unfortunately, APA seldom adopts these methods. Merely limited studies have attempted to integrate APA and test data generation to include more useful features and to provide a precise and thorough quality of program testing. Thus, we propose a framework of test data generation so-called FaSt-Gen to cover both the functional and structural testing of a program for APA. It aims to assist the lecturers of programming courses to furnish an adequate set of test data to assess students' programming solutions regardless of having the concrete expertise in the particular knowledge of test cases design. FaSt-Gen integrates the positive and negative testing criteria (or reliable and valid test adequacy criteria) to derive desired test data and test set schema. The findings from the conducted experiment depict that FaSt-Gen improves the reliability and validity test data adequacy in programming assessments.","","978-1-4799-5439-1","10.1109/MySec.2014.6985993","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6985993","Automatic Programming Assessment (APA);test data generation;functional testing;structural testing;positive testing;negative testing","Testing;Reliability;Programming profession;Standards;Dynamic programming;Educational institutions","computer aided instruction;computer science education;educational courses;functional programming;program testing","test data generation framework;automatic programming assessment;APA;programming course educators;automatic student programming marking;student programming grading;test data generation process;dynamic testing;software testing;program testing quality;FaSt-Gen;program functional testing;program structural testing;programming course lecturers;positive testing criteria;negative testing criteria","","4","","48","","18 Dec 2014","","","IEEE","IEEE Conferences"
"Who Should Be Selected to Perform a Task in Crowdsourced Testing?","Q. Cui; J. Wang; G. Yang; M. Xie; Q. Wang; M. Li","Lab. for Internet Software Technol., Inst. of Software, Beijing, China; Lab. for Internet Software Technol., Inst. of Software, Beijing, China; Dept. of Comput. Sci., Texas State Univ., San Marcos, TX, USA; Lab. for Internet Software Technol., Inst. of Software, Beijing, China; Lab. for Internet Software Technol., Inst. of Software, Beijing, China; Lab. for Internet Software Technol., Inst. of Software, Beijing, China","2017 IEEE 41st Annual Computer Software and Applications Conference (COMPSAC)","11 Sep 2017","2017","1","","75","84","Crowdsourced testing is an emerging trend in software testing, which relies on crowd workers to accomplish test tasks. Due to the cost constraint, a test task usually involves a limited number of crowd workers. Furthermore, more workers does not necessarily result in detecting more bugs. Different workers, who may have different testing experience and expertise, may make much differences in the test outcomes. For example, some inappropriate workers may miss true bug, introduce false bugs or report duplicated bugs, which decreases the test quality. In current practice, a test task is usually dispatched in a random manner, and the quality of testing cannot be guaranteed. Therefore, it is important to select an appropriate subset of workers to perform a test task to ensure high bug detection rate. This paper introduces ExReDiv, a novel hybrid approach to select a set of workers for a test task. It consists of three key strategies: the experience strategy selects experienced workers, the relevance strategy selects workers with expertise relevant to the given test task, the diversity strategy selects diverse workers to avoid detecting duplicated bugs. We evaluate ExReDiv based on 42 test tasks from one of the largest crowdsourced testing platforms in China, and the experimental results show its effectiveness.","0730-3157","978-1-5386-0367-3","10.1109/COMPSAC.2017.265","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8029593","","Computer bugs;Testing;Software;Videos;History;Computer science;Market research","crowdsourcing;program debugging;program testing;software quality","crowdsourced testing;software testing;cost constraint;bug detection rate;ExReDiv;hybrid approach;test task;experience strategy;relevance strategy;diversity strategy;China","","9","","19","","11 Sep 2017","","","IEEE","IEEE Conferences"
"Identification of Test Cases for Automated Driving Systems Using Bayesian Optimization","B. Gangopadhyay; S. Khastgir; S. Dey; P. Dasgupta; G. Montana; P. Jennings","Indian Institute of Technology Kharagpur,India; University of Warwick,WMG,UK; Indian Institute of Technology Kharagpur,India; Indian Institute of Technology Kharagpur,India; University of Warwick,WMG,UK; University of Warwick,WMG,UK","2019 IEEE Intelligent Transportation Systems Conference (ITSC)","28 Nov 2019","2019","","","1961","1967","With advancements in technology, the automotive industry is experiencing a paradigm shift from assisted driving to highly automated driving. However, autonomous driving systems are highly safety critical in nature and need to be thoroughly tested for a diverse set of conditions before being commercially deployed. Due to the huge complexities involved with Advanced Driver Assistance Systems (ADAS) and Automated Driving Systems (ADS), traditional software testing methods have well-known limitations. They also fail to cover the infinite number of adverse conditions that can occur due to a slight change in the interactions between the environment and the system. Hence, it is important to identify test conditions that push the vehicle under test to breach its safe boundaries. Hazard Based Testing (HBT) methods, inspired by Systems-Theoretic Process Analysis (STPA), identify such parameterized test conditions that can lead to system failure. However, these techniques fall short of discovering the exact parameter values that lead to the failure condition. The presented paper proposes a test case identification technique using Bayesian Optimization. For a given test scenario, the proposed method learns parameter values by observing the system's output. The identified values create test cases that drive the system to violate its safe boundaries. STPA inspired outputs (parameters and pass/fail criteria) are used as inputs to the Bayesian Optimization model. The proposed method was applied to an SAE Level-4 Low Speed Automated Driving (LSAD) system which was modelled in a driving simulator.","","978-1-5386-7024-8","10.1109/ITSC.2019.8917103","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8917103","","Optimization;Testing;Bayes methods;Fuels;Hazards;Heuristic algorithms","Bayes methods;computer simulation;driver information systems;intelligent transportation systems;optimisation;program testing;safety-critical software","autonomous driving systems;Advanced Driver Assistance Systems;systems-theoretic process analysis;system failure;test case identification technique;SAE Level-4 Low Speed Automated Driving system;driving simulator;software testing methods;Bayesian optimization model","","7","","28","","28 Nov 2019","","","IEEE","IEEE Conferences"
"Testing Your Question Answering Software via Asking Recursively","S. Chen; S. Jin; X. Xie","Wuhan University,School of Computer Science,China; Wuhan University,School of Computer Science,China; Wuhan University,School of Computer Science,China","2021 36th IEEE/ACM International Conference on Automated Software Engineering (ASE)","20 Jan 2022","2021","","","104","116","Question Answering (QA) is an attractive and challenging area in NLP community. There are diverse algorithms being proposed and various benchmark datasets with different topics and task formats being constructed. QA software has also been widely used in daily human life now. However, current QA software is mainly tested in a reference-based paradigm, in which the expected outputs (labels) of test cases need to be annotated with much human effort before testing. As a result, neither the just-in-time test during usage nor the extensible test on massive unlabeled real-life data is feasible, which keeps the current testing of QA software from being flexible and sufficient. In this paper, we propose a method, qaAskeR, with three novel Metamorphic Relations for testing QA software. qaAskeR does not require the annotated labels but tests QA software by checking its behaviors on multiple recursively asked questions that are related to the same knowledge. Experimental results show that qaAskeR can reveal violations at over 80% of valid cases without using any preannotated labels. Diverse answering issues, especially the limited generalization on question types across datasets, are revealed on a state-of-the-art QA algorithm.","2643-1572","978-1-6654-0337-5","10.1109/ASE51524.2021.9678670","National Natural Science Foundation of China; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9678670","question answering;testing and validation;recursive metamorphic testing;natural language processing","Software algorithms;Benchmark testing;Knowledge discovery;Software;Task analysis;Software engineering","learning (artificial intelligence);natural language processing;program testing;question answering (information retrieval);search engines;text analysis","NLP community;benchmark datasets;daily human life;reference-based paradigm;expected outputs;just-in-time test;extensible test;real-life data;qaAskeR;annotated labels but tests;question types;question answering software;QA software testing;metamorphic relations;preannotated labels","","","","58","IEEE","20 Jan 2022","","","IEEE","IEEE Conferences"
"Scaffolds and design factors to increase creative outcomes in teaching software design and testing","C. -S. Lee; K. D. Wong; S. B. -Y. Lau","Faculty of Science and Technology, Sunway University, Malaysia; Faculty of Information Technology, Malaysia University of Science and Technology, Malaysia; School of Computing, University College of Technology Sarawak, Malaysia","2015 IEEE International Conference on Industrial Engineering and Engineering Management (IEEM)","21 Jan 2016","2015","","","451","454","Graduates are expected to be able to provide holistic solutions, capable of meeting diverse objectives simultaneously. Furthermore, opportunities are often “found” or “made.” The quality of solutions, however, is mediated by different conceptualizations of contexts. Thus, we aim to investigate how students would conceptualize, make sense, desire to know, find solutions and subsequently progress to collaborate, communicate and create new artefacts. We hypothesize that there would be a higher likelihood of better quality design process, explanations as well as modelling outcomes if first, students can relate between the ability to analyse problems with the ability to conceptualize/model and second, the design of the task focuses on not only functional but more importantly sustaining positive user experience. Findings highlight the importance of key design factors contributing to more creative outcomes.","","978-1-4673-8066-9","10.1109/IEEM.2015.7385687","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7385687","Conceptualization;creative thinking;scaffolding;Engineering education","Software design;Testing;Context;Education;Biological system modeling;Unified modeling language","computer science education;program testing;software quality;teaching","design factors;scaffolds;creative outcomes;software design teaching;software testing;graduates;quality design process;positive user experience","","4","","19","","21 Jan 2016","","","IEEE","IEEE Conferences"
"Test image generation using segmental symbolic evaluation for unit testing","T. Jameel; M. Lin; H. Li; X. Hou","State key Lab of Software Development Environment Beihang University Beijing, China; State key Lab of Software Development Environment Beihang University Beijing, China; State key Lab of Software Development Environment Beihang University Beijing, China; State key Lab of Software Development Environment Beihang University Beijing, China","15th IEEE/ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing (SNPD)","1 Sep 2014","2014","","","1","6","This paper presents a novel technique to generate test images using segmental symbolic evaluation for testing of image processing applications. Images are multidimensional and diverse in nature, which leads to different challenges for the testing process. A technique is required to generate test images capable of finding program paths derived by image pixels. The proposed technique is based on symbolic execution which is extensively used for test data generation in recent years. In image processing applications, pixel operations such as averaging, convolution etc. are applied on a segment of input image pixels called window for a single iteration and repeated for the entire image. Our key idea is to imitate operations on pixel window using symbolic values rather than concrete ones to generate path constraints in the program under test. The path constraints generated for different paths are solved for concrete values using our simple SAT solver and the solutions are capable to guide program execution to the specific paths. The solutions of path constraints are used to generate synthetic test images for each identified path and the paths constraints which are not solvable for concrete pixel values are reported as infeasible paths. We have developed a tool IMSUITthat takes an image processing function as input and executes the program symbolically for the given pixels window to generate test images. Effectiveness of IMSUIT is tested on different modules of an optical character recognition system and the result shows that it can successfully create test images for each path of the program under test and capable of identifying infeasible paths.","","978-1-4799-5604-3","10.1109/SNPD.2014.6888718","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6888718","symbolic execution;testing image processing;unit testing","Testing;Image processing;Concrete;Equations;Semantics;Optical character recognition software","computability;optical character recognition;program testing","test image generation;segmental symbolic evaluation;unit testing;image processing applications;input image pixels;single iteration;pixel window;symbolic values;simple SAT solver;path constraints;concrete pixel values;IMSUIT tool;optical character recognition system;software testing","","","","10","","1 Sep 2014","","","IEEE","IEEE Conferences"
"A Baker's Dozen: 13 Software Engineering Challenges","J. Voas",SAIC,"IT Professional","2 Apr 2007","2007","9","2","48","53","Software engineering has developed over the last few decades into a discipline of many diverse areas of interest. Examples include testing, programming, design, architecture, maintenance, metrics and evolution. Specialty conferences and publications proliferate, stay for a short time, and then disappear, while software engineering remains as nontraditional engineering - part craft, part art, and part logic. This article describes 13 challenges faced by software engineering research and practitioner community, and hints on what to do about them. The challenges include: (1) software quality, (2) return on investment, (3) process improvement, (4) metrics and measurement, (5) standards confusion, (6) standards interoperability, (7) legacy software, (8) testing stoppage criteria, (9) interoperability and composability, (10) operational profiles, (11) designing in, (12) product certification, (13) services.","1941-045X","","10.1109/MITP.2007.24","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4140970","software engineering;software challenges","Software engineering;Software quality;Measurement standards;Software standards;Testing;Genetic programming;Computer architecture;Art;Logic programming;Investments","program testing;software maintenance;software metrics;software process improvement;software quality;software standards","software engineering challenges;software quality;return-on-investment;process improvement;software metrics;standards confusion;standards interoperability;legacy software;testing stoppage criteria;operational profiles;product certification;software design","","3","","","","2 Apr 2007","","","IEEE","IEEE Magazines"
"CrystalBall: Statically analyzing runtime behavior via deep sequence learning","S. Zekany; D. Rings; N. Harada; M. A. Laurenzano; L. Tang; J. Mars","University of Michigan - Ann Arbor, MI; University of Michigan - Ann Arbor, MI; University of Michigan - Ann Arbor, MI; University of Michigan - Ann Arbor, MI; University of Michigan - Ann Arbor, MI; University of Michigan - Ann Arbor, MI","2016 49th Annual IEEE/ACM International Symposium on Microarchitecture (MICRO)","15 Dec 2016","2016","","","1","12","Understanding dynamic program behavior is critical in many stages of the software development lifecycle, for purposes as diverse as optimization, debugging, testing, and security. This paper focuses on the problem of predicting dynamic program behavior statically. We introduce a novel technique to statically identify hot paths that leverages emerging deep learning techniques to take advantage of their ability to learn subtle, complex relationships between sequences of inputs. This approach maps well to the problem of identifying the behavior of sequences of basic blocks in program execution. Our technique is also designed to operate on the compiler's intermediate representation (IR), as opposed to the approaches taken by prior techniques that have focused primarily on source code, giving our approach language-independence. We describe the pitfalls of conventional metrics used for hot path prediction such as accuracy, and motivate the use of Area Under the Receiver Operating Characteristic curve (AUROC). Through a thorough evaluation of our technique on complex applications that include the SPEC CPU2006 benchmarks, we show that our approach achieves an AUROC of 0.85.","","978-1-5090-3508-3","10.1109/MICRO.2016.7783727","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7783727","","Runtime;Measurement;Software;Optimization;Debugging;Testing;Vehicle dynamics","learning (artificial intelligence);program compilers;program debugging;program diagnostics;program testing;sensitivity analysis;source code (software)","CrystalBall;runtime behavior static analysis;deep sequence learning;dynamic program behavior;software development lifecycle;software optimization;software debugging;software testing;software security;static dynamic program behavior prediction;input sequences;program execution;compiler intermediate representation;source code;language-independence;area under the receiver operating characteristic curve;AUROC;SPEC CPU2006 benchmarks","","4","","50","","15 Dec 2016","","","IEEE","IEEE Conferences"
"Context-aware Personalized Crowdtesting Task Recommendation","J. Wang; Y. Yang; S. Wang; C. Chen; D. Wang; Q. Wang","Institute of Software, Chinese Academy of Sciences, Institute of Software Chinese Academy of Sciences, 53036 Beijing, Beijing, China, 100190 (e-mail: junjie@iscas.ac.cn); School of Systems and Enterprises, Stevens Institute of Technology, 33694 Hoboken, New Jersey, United States, (e-mail: yyang4@stevens.edu); Department of Electrical Engineering and Computer Science, York University, 7991 Toronto, Ontario, Canada, (e-mail: wangsong@eecs.yorku.ca); Faculty of Information Technology, Monash University, Melbourne, Victoria, Australia, 3800 (e-mail: chunyang.chen@monash.edu); Institute of Software, Chinese Academy of Sciences, Institute of Software Chinese Academy of Sciences, 53036 Beijing, Beijing, China, (e-mail: dandan@iscas.ac.cn); Institute of Software, Chinese Academy of Sciences, Beijing, Beijing, China, 100190 (e-mail: wq@itechs.iscas.ac.cn)","IEEE Transactions on Software Engineering","","2021","PP","99","1","1","Crowdsourced software testing (short for crowdtesting) is a special type of crowdsourcing. It requires that crowdworkers master appropriate skill-sets and commit significant effort for completing a task. Abundant uncertainty may arise during a crowdtesting process due to imperfect information between the task requester and crowdworkers. For example, a worker frequently chooses tasks in an ad hoc manner in crowdtesting context, and an inappropriate task selection may lead to the worker's failing to detect any bugs, and significant testing effort unpaid and wasted. Recent studies have explored methods for supporting task requesters to make informed decisions on task pricing, worker recommendation, and so on. Unfortunately, very few study offers decision making support from the crowdworkers' perspectives. We motivate this study through a pilot study, revealing the large portion (74\%) of unpaid crowdworkers' effort due to the inappropriate task choice. Drawn from our previous work on context-aware crowdworker recommendations, we advocate a more effective alternative to manual task selection would be to provide contextualized and personalized task recommendation considering the diverse distribution of worker preference and expertise, with objectives to increase their winning chances and to potentially reduce the frequency of unpaid crowd work. This paper proposes a context-aware personalized task recommendation approach PTRec, consisting of a testing context model and a learning-based task recommendation model to aid dynamic worker decision in selecting crowdtesting tasks. The testing context model is constructed in two perspectives, i.e., process context and resource context, to capture the in-process progress-oriented information and crowdworkers' characteristics respectively. Built on top of this context model, the learning-based task recommendation model extracts 60 features automatically, and employs random forest learner to generate dynamic and personalized task recommendation which matches workers' expertise and interest. The evaluation is conducted on 636 crowdtesting tasks involving 2,404 crowdworkers from one of the largest crowdtesting platforms, and results show the potential in recommending proper tasks to workers so as to improve bug detection efficiency and increase their monetary earnings.","1939-3520","","10.1109/TSE.2021.3081171","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9435104","Crowdsourced testing;Task recommendation;Testing context model","Task analysis;Computer bugs;Testing;Context modeling;Feature extraction;Crowdsourcing;Videos","","","","","","","IEEE","18 May 2021","","","IEEE","IEEE Early Access Articles"
"Comparative analysis of classical multi-objective evolutionary algorithms and seeding strategies for pairwise testing of Software Product Lines","R. E. Lopez-Herrejon; J. Ferrer; F. Chicano; A. Egyed; E. Alba","Software Systems Engineering Johannes Kepler University Linz, Austria; Universidad de Málaga, Andalucía Tech, Spain; Universidad de Málaga, Andalucía Tech, Spain; Software Systems Engineering Johannes Kepler University Linz, Austria; Universidad de Málaga, Andalucía Tech, Spain","2014 IEEE Congress on Evolutionary Computation (CEC)","22 Sep 2014","2014","","","387","396","Software Product Lines (SPLs) are families of related software products, each with its own set of feature combinations. Their commonly large number of products poses a unique set of challenges for software testing as it might not be technologically or economically feasible to test of all them individually. SPL pairwise testing aims at selecting a set of products to test such that all possible combinations of two features are covered by at least one selected product. Most approaches for SPL pairwise testing have focused on achieving full coverage of all pairwise feature combinations with the minimum number of products to test. Though useful in many contexts, this single-objective perspective does not reflect the prevailing scenario where software engineers do face trade-offs between the objectives of maximizing the coverage or minimizing the number of products to test. In contrast and to address this need, our work is the first to propose a classical multi-objective formalisation where both objectives are equally important. In this paper, we study the application to SPL pairwise testing of four classical multi-objective evolutionary algorithms. We developed three seeding strategies — techniques that leverage problem domain knowledge — and measured their performance impact on a large and diverse corpus of case studies using two well-known multi-objective quality measures. Our study identifies the performance differences among the algorithms and corroborates that the more domain knowledge leveraged the better the search results. Our findings enable software engineers to select not just one solution (as in the case of single-objective techniques) but instead to select from an array of test suite possibilities the one that best matches the economical and technological constraints of their testing context.","1941-0026","978-1-4799-1488-3","10.1109/CEC.2014.6900473","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6900473","","Testing;Frequency modulation;Sociology;Statistics;Vectors;Context;Evolutionary computation","evolutionary computation;program testing;software product lines","comparative analysis;classical multiobjective evolutionary algorithms;seeding strategies;software product line pairwise testing;SPL pairwise testing;pairwise feature combinations;classical multiobjective formalisation;domain knowledge;multiobjective quality measures;economical constraints;technological constraints","","15","","60","","22 Sep 2014","","","IEEE","IEEE Conferences"
"The object-FMA based test case generation approach for GUI software exception testing","J. Lai; H. Zhang; B. Huang","School of Reliability and System Engineering, BeiHang University, Beijing, China; School of Reliability and System Engineering, BeiHang University, Beijing, China; School of Reliability and System Engineering, BeiHang University, Beijing, China","The Proceedings of 2011 9th International Conference on Reliability, Maintainability and Safety","11 Aug 2011","2011","","","717","723","The traditional exception testing usually utilizes the error-guessing approach or the equivalence class-partition method to generate test cases, which heavily depend on the experience of testers and easily make the exception testing omissive. In order to solve this problem, this paper introduces the SFMEA (Software Failure Mode Effect Analysis) to generate the exception testing cases for the GUI software by analyzing the failure modes of the controls and the control sets of the GUI software and then translating those failure modes directly into the exception test cases. In order to make the failure mode analysis sufficient, we first propose an object-based approach for the failure mode analysis (i.e. Object-FMA), and then utilize this approach to analyze the failure modes of the common controls in the Windows, and generate the database of the failure modes of the controls for guiding to design the test cases. In an actual GUI software-testing project, a case study is presented through comparing four diverse exception test suites. Three test groups with different experience use the error-guessing approach to generate three exception test suites respectively. Then one group is selected from these three groups to use this proposed Object-FMA approach to generate one exception test suite. The comparison results show that the exception testing cases generated by the Object-FMA approach not only are more sufficient than the ones generated by the error-guessing approach, but also detect more exceptions. This proposed Object-FMA approach can avoid to overreliance on the experience of testers during designing the exception testing cases. Moreover, this approach can ensure the quality of the exception testing cases from the methodological viewpoint. Thus, the feasibility and validity of this proposed Object-FMA approach are validated consequently.","","978-1-61284-666-8","10.1109/ICRMS.2011.5979358","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5979358","GUI software;exception testing;SFMEA;Object-FMA","Graphical user interfaces;Testing;Timing;Software quality;Accidents;Databases","failure analysis;graphical user interfaces;program testing","object FMA based test case generation approach;GUI software exception testing;equivalence class partition method;software failure mode effect analysis;SFMEA;error guessing approach;exception test cases","","","2","12","","11 Aug 2011","","","IEEE","IEEE Conferences"
"Guest Editorial: A Retrospective of Special Sections on Software Testing and Program Analysis","T. H. Tse; Y. L. Traon; Z. Chen","Department of Computer Science, The University of Hong Kong, Pokfulam, Hong Kong; Interdisciplinary Centre for Security, Reliability and Trust, University of Luxembourg, Esch-sur-Alzette, Luxembourg; State Key Laboratory for Novel Software Technology, Nanjing University, Nanjing, China","IEEE Transactions on Reliability","8 Jun 2021","2021","70","2","443","445","Software plays an integral part in our lives today because of its near-ubiquitous influence on our increasingly technological society. Taking appropriate steps to improve software quality is of paramount importance. This has fueled a surge of techniques in program testing and analysis. Unfortunately, these techniques still suffer from immaturity and impracticality, which have hindered truthful benefits to the software industry. The Special Sections on Software Testing and Program Analysis solicited original work that would provide novel techniques and/or comprehensive empirical validation applicable to real-world software. We successfully attracted more than 70 submissions covering diverse hot topics. After rigorous evaluations by hard-working reviewers, possibly with recommendations for major and minor revisions, we have published 26 articles in five issues of the IEEE Transactions on Reliability in June, September, and December 2018, January 2019, and June 2021. The articles represent a comprehensive cross section of testing and analysis techniques, as well as a wide variety of applications to practical projects. The present retrospective provides readers with interesting details about our great success and a small challenge.","1558-1721","","10.1109/TR.2021.3083375","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9448288","","Special issues and sections;Software testing;Workflow management software;Software quality;Software systems;Software reliability","","","","","","0","IEEE","8 Jun 2021","","","IEEE","IEEE Journals"
"New Perspectives on Software Quality [Guest editors' introduction]","R. Breu; A. Kuntzmann-Combelles; M. Felderer",University of Innsbruck; inspearit; University of Innsbruck,"IEEE Software","28 Feb 2014","2014","31","1","32","38","This special issue, owing to its fundamental software quality focus, comprises a collection of diverse articles that address the challenges and directions for software quality research. The Web extra at http://youtu.be/T7V4RSr1KEE is an audio interview in which Davide Falessi speaks with guest editors Annie Kuntzmann-Combelles, Michael Felderer, and Ruth Breu about methods for improving software quality management, testing, and security on intelligent and interconnected devices.","1937-4194","","10.1109/MS.2014.9","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6750444","software quality;quality engineering;software","Special issues and sections;Software testing;Collaboration;Quality management;Software engineering;Data analysis;Software quality","","","","11","","15","","28 Feb 2014","","","IEEE","IEEE Magazines"
"Message from the Program Co-Chairs","",,"2020 IEEE International Conference On Artificial Intelligence Testing (AITest)","25 Aug 2020","2020","","","i","i","The Second IEEE International Conference on Artificial Intelligence Testing (AITest) is held in Oxford, UK, on April 13th-16th, 2020 as part of a set of joint conferences and workshops. The goal of organizing this event is to bring together researchers and practitioners to discuss new scientific results and solutions to the timely and challenging problem of testing artificial intelligence models and methods and, conversely, on the use of artificial intelligence in software testing. It is a great honor to have as a distinguished keynote speaker Professor Kerstin Eder from the University of Bristol, UK, an expert in design automation and verification with particular interest in robot trustworthiness and safety. We also have an invited talk from Dr Jie Zhang from UCL, UK, on the state of the art of testing machine learning models. As Program Co-Chairs of the conference, we have solicited two types of original contributions, long (eight pages) papers and short (two pages) papers. We finally selected 17 long papers and 3 short papers to be included into these proceedings from 49 abstract submissions and 41 papers eventually submitted. Each paper has been carefully reviewed by at least three members of the Program Committee, who provided informative and detailed reviews. These papers cover diverse aspects of software testing and artificial intelligence and carry strong scientific results in terms of innovation. Together with the keynote speech and invited talk they form a solid and ambitious scientific program for the conference.","","978-1-7281-6984-2","10.1109/AITEST49225.2020.00006","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9176801","","","","","","","","","","25 Aug 2020","","","IEEE","IEEE Conferences"
"Introduction to tool demonstrations","H. Prähofer; S. Uchitel",NA; NA,"Proceedings. 19th International Conference on Automated Software Engineering, 2004.","18 Oct 2004","2004","","","xv","xvi","Automated software engineering is concerned with computational means to automate or partially automate software engineering tasks to achieve significant improvements in software quality and productivity. Tools therefore play a dominant role within the automated software engineering. The tool demonstration session at the ASE ’04 conference accounts for that by providing a forum to show and discuss new tool developments that highlight scientific contributions to the field of Automated Software Engineering. This year we received 25 submissions for tool demonstrations, each submission was reviewed by at least two reviewers and 6 proposals were accepted as formal tool demonstrations while 11 were accepted as informal demonstrations. Each formal tool demonstrations will have a time slot in the conference programme while informal demonstrations will be given a space at the conference site where they will be able to present their work to conference attendees. The formal demonstrations to be given this year bring together a diverse set of tools that provide support for main tasks of the software engineering life cycle. The tools presented range from tools supporting requirement engineering, software modelling, software configuration, software inspection, software visualization and software testing.","1938-4300","0-7695-2131-2","10.1109/ASE.2004.1342716","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1342716","","Software tools;Software engineering;Software testing;Software performance;Electronic equipment testing;Automatic testing;Logic testing;System testing;Mobile computing;Inspection","","","","","","","","18 Oct 2004","","","IEEE","IEEE Conferences"
"Bridging the gap between software development and information security","K. R. van Wyk; G. McGraw","Cigital, Dulles, VA, USA; Cigital, Dulles, VA, USA","IEEE Security & Privacy","3 Oct 2005","2005","3","5","75","79","Traditionally, software development efforts in large corporations have been about as far removed from information security as they were from human resources or any other business function. Software development has also had the tendency to be highly distributed among business units and thus not even practiced in a cohesive, coherent manner. In the worst cases, busy business unit executives trade roving bands of developers like Pokemon cards in a fifth-grade classroom (in an attempt to get ahead). Suffice it to say, none of this is good. The disconnect between security and development has ultimately produced software development efforts that lack any sort of contemporary understanding of technical security risks. Today's complex and highly connected computing environments trigger myriad security concerns, so by blowing off the idea of security entirely, software builders virtually guarantee that their creations have way too many security weaknesses that could - and should - have been avoided. This article presents some recommendations for solving this problem. Our approach is born out of experience in two diverse fields: software security and information security. Central among our recommendations is the notion of using the knowledge inherent in information security organizations to enhance secure software development efforts.","1558-4046","","10.1109/MSP.2005.118","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1514408","building security in;BSI;infosec;softdev","Programming;Information security;Software testing;Risk analysis;Computer bugs;Costs;System testing;Humans;Software design;Best practices","security of data;software engineering","software development;information security;technical security risk;software security","","32","","3","IEEE","3 Oct 2005","","","IEEE","IEEE Magazines"
"Introduction to tool demonstrations","",,"21st IEEE/ACM International Conference on Automated Software Engineering (ASE'06)","4 Dec 2006","2006","","","xv","xv","Automated software engineering is concerned with how to apply computation to automate or partially automate software engineering tasks to achieve significant improvements in quality and productivity. Tools therefore play a dominant role within automated software engineering. The tool demonstration session at the ASE'06 conference accounts for that by providing a forum to show and discuss new tool developments that highlight scientific contributions to the field of Automated Software Engineering. This year we have 9 tool demonstrations, each of which was reviewed by two reviewers. Each tool demonstration will have a time slot in the conference program, and also will be given a space at the conference site where conference attendees will be able to ask additional questions and see a personal demonstration. The demonstrations to be given this year bring together a diverse set of tools that provide support for main tasks of the software engineering life cycle. The tools presented range from tools supporting software generation and transformation, requirement engineering, software testing, software verification, and software modeling.","1938-4300","0-7695-2579-2","10.1109/ASE.2006.44","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4019554","","","","","","","","","","4 Dec 2006","","","IEEE","IEEE Conferences"
