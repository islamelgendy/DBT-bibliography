"Document Title",Authors,"Author Affiliations","Publication Title",Date Added To Xplore,"Publication Year","Volume","Issue","Start Page","End Page","Abstract","ISSN",ISBNs,"DOI",Funding Information,PDF Link,"Author Keywords","IEEE Terms","INSPEC Controlled Terms","INSPEC Non-Controlled Terms","Mesh_Terms",Article Citation Count,Patent Citation Count,"Reference Count","License",Online Date,Issue Date,"Meeting Date","Publisher",Document Identifier
"Invasive Software Testing: Mutating Target Programs to Diversify Test Exploration for High Test Coverage","Y. Kim; S. Hong; B. Ko; D. L. Phan; M. Kim","Sch. of Comput., KAIST, Daejeon, South Korea; Sch. of CSEE, Handong Global Univ., Pohang, South Korea; Sch. of Comput., KAIST, Daejeon, South Korea; Sch. of Comput., KAIST, Daejeon, South Korea; Sch. of Comput., KAIST, Daejeon, South Korea","2018 IEEE 11th International Conference on Software Testing, Verification and Validation (ICST)","28 May 2018","2018","","","239","249","Software testing techniques have advanced significantly over several decades; however, most of current techniques still test a target program as it is, and fail to utilize valuable information of diverse test executions on many variants of the original program in test generation. This paper proposes a new direction for software testing - Invasive Software Testing (IST). IST first generates a set of target program variants m<sub>1</sub>, ⋯, m<sub>n</sub> from an original target program p by applying mutation operations <sub>1</sub>, ⋯, μ<sub>n</sub>. Second, given a test suite T, IST executes m<sub>1</sub>, ⋯, m<sub>n</sub> with T and records the test runs which increase test coverage compared to p with T. Based on the recorded information, IST generates guideposts for automated test generation on p toward high test coverage. Finally, IST generates test inputs on p with the guideposts and achieves higher test coverage. We developed DEMINER which implements IST for C programs through software mutation and concolic testing. Further, we showed the effectiveness of DEMINER on three real-world target programs Busybox-ls, Busybox-printf, and GNU-find. The experiment results show that the amount of the improved branch coverage by DEMINER is 24.7% relatively larger than those of the conventional concolic testing techniques on average.","","978-1-5386-5012-7","10.1109/ICST.2018.00032","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8367052","Mutation analysis;Practical mutation tool;C programs","Test pattern generators;Manganese;Software testing;Invasive software;Computer crashes","program testing","C programs;software mutation;Invasive Software Testing;mutating target programs;test exploration;Software testing techniques;diverse test executions;target program variants;automated test generation;test coverage;concolic testing techniques;real-world target programs;Busybox-ls;Busybox-printf;GNU-find","","10","","32","","28 May 2018","","","IEEE","IEEE Conferences"
"PHANTA: Diversified Test Code Quality Measurement for Modern Software Development","S. Tokumoto; K. Takayama",Fujitsu Laboratories Ltd.; Fujitsu Laboratories Ltd.,"2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)","9 Jan 2020","2019","","","1206","1207","Test code is becoming more essential to the modern software development process. However, practitioners often pay inadequate attention to key aspects of test code quality, such as bug detectability, maintainability and speed. Existing tools also typically report a single test code quality measure, such as code coverage, rather than a diversified set of metrics. To measure and visualize quality of test code in a comprehensive fashion, we developed an integrated test code analysis tool called Phanta. In this show case, we posit that the enhancement of test code quality is key to modernizing software development, and show how Phanta's techniques measure the quality using mutation analysis, test code clone detection, and so on. Further, we present an industrial case study where Phanta was applied to analyze test code in a real Fujitsu project, and share lessons learned from the case study.","2643-1572","978-1-7281-2508-4","10.1109/ASE.2019.00138","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952538","Software Testing;Test Code;Mutation Testing","Tools;Measurement;Cloning;Software;Testing;Computer bugs;Software engineering","program testing;software maintenance;software quality","diversified test code quality measurement;modern software development process;single test code quality measure;code coverage;integrated test code analysis tool;software development;test code clone detection;Phanta techniques measure;mutation analysis;Fujitsu project","","","","6","","9 Jan 2020","","","IEEE","IEEE Conferences"
"Construction of a Cloud Scenario Knowledge Graph for Cloud Service Market","S. Zhang; X. Liu; B. Xu; L. Cai; Y. Hu","School of Computer Science and Technology, Donghua University & Shanghai Key Laboratory of Computer Software Testing and Evaluating, Shanghai Software Center,Shanghai,China; School of Computer Science and Technology, Donghua University,Shanghai,China; School of Computer Science and Technology, Donghua University,Shanghai,China; Shanghai Key Laboratory of Computer Software Testing and Evaluating, Shanghai Software Center,Shanghai,China; Shanghai Key Laboratory of Computer Software Testing and Evaluating, Shanghai Software Center,Shanghai,China","2020 IEEE 11th International Conference on Software Engineering and Service Science (ICSESS)","4 Nov 2020","2020","","","503","506","Fast-growing cloud computing technology makes cloud application scenarios more diversified and difficult to choose. A knowledge recommending system is an effective way to reach automatic recommendation services. In this paper, we constructed a cloud scenario knowledge graph (CSKG) for cloud service market to assist cloud knowledge management and provided a web service interface for recommended applications. First a cloud scenario domain ontology was defined based on product knowledge of cloud suppliers and experience of domain experts. Then the BiLSTM-CRF model and Rule-based method were combined to automatically extract structured knowledge from multi-source and heterogeneous texts, where we proposed a tagging schema combined with entity extraction and relation classifier. Finally, a cloud scenario knowledge graph was constructed and visualized, several application examples based on the CSKG service were suggested.","2327-0594","978-1-7281-6579-0","10.1109/ICSESS49938.2020.9237681","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9237681","domain knowledge graph;recommendation system;cloud service;cloud application scenario","Knowledge engineering;Cloud computing;Visualization;Web services;Tagging;Ontologies;Software engineering","cloud computing;graph theory;knowledge management;ontologies (artificial intelligence);pattern classification;recommender systems;recurrent neural nets;text analysis;Web services","cloud scenario knowledge graph;cloud service market;cloud application scenarios;knowledge recommending system;automatic recommendation services;cloud knowledge management;cloud scenario domain ontology;cloud suppliers;cloud computing;Web service interface;product knowledge;BiLSTM-CRF model;rule-based method;multisource text;heterogeneous texts;tagging schema;entity extraction;relation classifier;CSKG service","","","","8","","4 Nov 2020","","","IEEE","IEEE Conferences"
"Random Border Mirror Transform: A Diversity Based Approach to an Effective and Efficient Mirror Adaptive Random Testing","M. Omari; J. Chen; P. Kwaku Kudjo; H. Ackah-Arthur; R. Huang",Jiangsu University; Jiangsu University; Jiangsu University; Jiangsu University; Jiangsu University,"2019 IEEE 19th International Conference on Software Quality, Reliability and Security (QRS)","3 Oct 2019","2019","","","54","61","Mirror Adaptive random testing (MART) is an overhead reduction strategy for adaptive random testing methods. Theoretically speaking, MART's advantage over ordinary ARTs is determined by the mirroring scheme selected. Incidentally, an inherent problem with MART relates to the difficulty in the choice of a scheme for any testing task. This is because a higher scheme (larger mirror domains) does not necessarily guarantee efficient utilization of testing resources due to lack of diversity of mirror generated test cases. The culprit has been identified as the mapping functions used as substitutes to complex ART methods. In this paper, we present a new method for generating diversified mirror test cases by randomly displacing the mirror partitions upon which the mapping functions of MART operates. The result of simulations and experiments conducted shows remarkable improvement over MART's effectiveness and efficiency across MART schemes, especially where program failures are unrelated to one or more input parameters.","","978-1-7281-3927-2","10.1109/QRS.2019.00020","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8854699","Adaptive random testing;software testing;mirror adaptive random testing;test case diversity","Mirrors;Subspace constraints;Software;Power capacitors;Software testing;Software reliability","program testing;random processes;transforms","mapping functions;Mirror Adaptive random testing;overhead reduction strategy;adaptive random testing methods;MART;random border mirror transform;ART methods;software testing","","","","24","","3 Oct 2019","","","IEEE","IEEE Conferences"
"Hook-based mobile software testing by using aspect-oriented programming","Y. Ma; E. M. Choi","Dept. of Computer Engineering, Dongguk University, Seoul, 100-715, Korea; Dept. of Computer Engineering, Dongguk University, Seoul, 100-715, Korea","2012 International Conference on Systems and Informatics (ICSAI2012)","25 Jun 2012","2012","","","2528","2532","The debugging for mobile software has been became supported easily and strongly by diversified technology such as performance analysis, tracing, and memory debugging. However, testers who want to find and locate knotty defects between the various components of embedded software feel that just using debugging tools is not enough. Although, using testing tools can achieve the target, but not all the testing tools can be deployed on the real device. So in this paper, we describe a new user-friendly Hook-based testing approach for embedded software. Besides introducing the concept of Hook-based testing, we show how to use AOP to implement components testing on the target easily. Meanwhile, we will provide the testing result by process tracing, and memory checking. Finally we compare with famous debugging tools to prove our approach much better.","","978-1-4673-0199-2","10.1109/ICSAI.2012.6223568","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6223568","","Testing;Embedded software;Abstracts;Debugging;Embedded systems;Monitoring","aspect-oriented programming;mobile computing;program debugging;program testing","Hook-based mobile software testing;aspect-oriented programming;mobile software debugging;performance analysis;performance tracing;memory debugging;embedded software;AOP;components testing;process tracing;memory checking","","","","7","","25 Jun 2012","","","IEEE","IEEE Conferences"
"Cloud API Testing","J. Wang; X. Bai; H. Ma; L. Li; Z. Ji","Dept. of Comput. Sci. & Technol., Tsinghua Univ., Beijing, China; Dept. of Comput. Sci. & Technol., Tsinghua Univ., Beijing, China; Dept. of Comput. Sci. & Technol., Tsinghua Univ., Beijing, China; Dept. of Comput. Sci. & Technol., Tsinghua Univ., Beijing, China; Dept. of Comput. Sci. & Technol., Tsinghua Univ., Beijing, China","2017 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","17 Apr 2017","2017","","","385","386","Following the Service-Oriented Architecture, Cloud services are exposed as Web APIs (Application Program Interface), which serve as the contracts between the service providers and service consumers. With increasing massive and broad applications of Cloud-based development, a large number of diversified APIs are emerging. Due to their wide impacts, any flaw in the cloud APIs may lead to serious consequences. API testing is thus necessary to ensure the availability, reliability, and stability of cloud services. The research proposed an approach to automating API testing following the model-driven architecture, so that services can be continuously fetched, analyzed and validated. A prototype system ATcloud was constructed to illustrate the process of API understanding, test scenario modeling using directed graph annotated with transfer probabilities between operations, cloud-based test resources management, distributed workload simulation, and performance monitoring.","","978-1-5090-6676-6","10.1109/ICSTW.2017.71","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7899088","API testing;test automation;cloud computing","Cloud computing;Testing;Data models;Conferences;Contracts;Reliability;Prototypes","application program interfaces;cloud computing;directed graphs;Internet;program testing;service-oriented architecture","cloud API testing;service-oriented architecture;Poster;Web API;cloud services;application program interface;cloud-based development;model-driven architecture;ATcloud;directed graph;cloud-based test resources management;distributed workload simulation;performance monitoring","","2","","3","","17 Apr 2017","","","IEEE","IEEE Conferences"
"Kernel Density Adaptive Random Testing","M. Patrick; Y. Jia","University of Cambridge; CREST, University College London","2015 IEEE Eighth International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","14 May 2015","2015","","","1","10","Mutation analysis is used to assess the effectiveness of a test data generation technique at finding faults. Once a mutant is killed, decisions must be made whether to diversify or intensify the subsequent test inputs. Diversification employs a wide range of test inputs with the aim of increasing the chances of killing new mutants. By contrast, intensification selects test inputs which are similar to those previously shown to be successful, taking advantage of overlaps in the conditions under which mutants can be killed. This paper explores the trade-off between diversification and intensification by augmenting Adaptive Random Testing (ART) to estimate the Kernel Density (KD-ART) of input values which are found to kill mutants. The results suggest that intensification is typically more effective at finding faults than diversification. KD-ART (intensify) achieves 7.24% higher mutation score on average than KD-ART (diversify). Moreover, KD-ART is computationally less expensive than ART. The new technique requires an average 5.98% of the time taken before.","","978-1-4799-1885-0","10.1109/ICSTW.2015.7107451","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7107451","","Subspace constraints;Testing;Kernel;Estimation;Switches;Measurement;Bandwidth","program testing","kernel density adaptive random testing;mutation analysis;test data generation technique;diversification;intensification;KD-ART","","1","","41","","14 May 2015","","","IEEE","IEEE Conferences"
"Designing Built-In Test for Microprocessors","S. Smoot",Baltimore,"Annual Reliability and Maintainability Symposium, 1984. Proceedings.","10 Dec 2002","1984","","","412","415","This paper provides the BIT (Built-In-Test) designer with a generalized test strategy for testing microprocessors (Mp). The basic microprocessor BIT tests are defined including methods of modifying these tests to a specific microprocessor. The test hardware and software, which supports the individual tests, are described along with an example of its implementation. Some design options and tradeoffs are made available to allow flexibility for diversified application. An example of this strategy using INTEL's 8086 microprocessor is provided.","","","10.1109/RAMS.1984.764327","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=764327","","Built-in self-test;Microprocessors;Hardware;Central Processing Unit;Read only memory;Circuit testing;Performance evaluation;System testing;Microprogramming;Software testing","","BIT(Built-In-Test), design for testability, data, digital computer, interrupt network, unique signatures","","","2","3","","10 Dec 2002","","","IEEE","IEEE Conferences"
"ITeS - Transcending the Traditional Service Model","J. Ke",Institute for Information Industry,"2006 IEEE International Conference on e-Business Engineering (ICEBE'06)","19 Dec 2006","2006","","","2","2","Summary form only given. The renaissance gave birth to the knowledge revolution, and the industrial revolution introduced mankind to the wonders of technology. The advent of information technology in the 21st century has brought about yet another revolution, the information revolution. The recent onset of IT has brought about technological, economical, social, and cultural changes on an unprecedented scale. Among which, IT enabled e-commerce, revolutionizing the way we go about the traditional exchange of goods, and more importantly, IT infused new life into the service sector, enabling a new breed of service called IT-enabled service (ITeS). Simply put, ITeS is the integration of IT and specific domain knowledge to increase the innovative values of conventional services produced by industries. ITeS can be sub-divided into two categories. The first of which is the integration of IT functionalities into traditional services. Examples include real-time interpretation services made possible with VoIP services and remote healthcare monitoring services provided via the Internet. The second of which is the transformation of IT itself into a service. The textbook example is Google, which provides services ranging from email, search engine, advertisement, news, and media, all based on the premise of the Internet technology itself. Coupling its manufacturing prowess and experience in software development with a dynamic, diversified, and mature IT environment, Taiwan is the perfect test bed for ITeS. However, ITeS is not without its challenges. For instance, language barriers, potential infrastructure compatibilities, and finding Taiwan's niche in the global ITeS value chain are all issues that need to be addressed. The author touches on the rise of ITeS, how ITeS can revolutionize the service sector, the opportunities for Taiwan in this nascent domain, and the challenges it might face while trying to transform from a labor-intensive manufacturing-centric society to one that's knowledge-intensive service-centric","","0-7695-2645-4","10.1109/ICEBE.2006.66","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031623","","Web and internet services;Manufacturing;Information technology;Environmental economics;Cultural differences;Medical services;Remote monitoring;Search engines;Programming;Software testing","electronic commerce;information technology","information revolution;IT enabled e-commerce;IT enabled service;Taiwan;knowledge-intensive service-centric","","1","1","","","19 Dec 2006","","","IEEE","IEEE Conferences"
"Engineering on the Internet for global software production","J. Z. Gao; C. Chen; Y. Toyoshima; D. K. Leung","San Jose State Univ., CA, USA; NA; NA; NA","Computer","6 Aug 2002","1999","32","5","38","47","Over the past two decades, researchers and tool vendors have introduced techniques and tools to improve software engineering processes. Most of these are host-centered systems with closed architectures, fixed database drivers, specific network requirements, and platform-dependent client and server software. These restrictions make sharing information difficult, complicate tool integration, and limit global user access from diversified software environments. These are the major obstacles in global software production. Today's Internet technology provides a powerful and cost-effective means of overcoming these obstacles. Internet technologies allow distributed networking, global access, platform independence, information sharing, and internationalization. The Internet provides a nearly ubiquitous communication infrastructure, enabling team members to connect to the development process easily. This article reports the authors' innovative work in the arena of constructing an Internet-based, global software engineering environment.","1558-0814","","10.1109/2.762791","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=762791","","Internet;Production;System testing;Collaborative software;Software tools;Software engineering;Software testing;IP networks;Resource management;Project management","Internet;software engineering","Internet;global software production;software engineering;host-centered systems;software tool;user access;cost-effective;distributed networking;global access;platform independence;information sharing;internationalization","","20","","9","IEEE","6 Aug 2002","","","IEEE","IEEE Magazines"
"Improving the Testing of Clustered Systems Through the Effective Usage of Java Benchmarks","A. O. Portillo-Dominguez; V. Ayala-Rivera","Sch. of Comput. Sci., Univ. Coll. Dublin, Dublin, Ireland; Sch. of Comput. Sci., Univ. Coll. Dublin, Dublin, Ireland","2017 5th International Conference in Software Engineering Research and Innovation (CONISOFT)","16 Apr 2018","2017","","","130","139","Nowadays, cluster computing has become a cost-effective and powerful solution for enterprise-level applications. Nevertheless, the usage of this architecture model also increases the complexity of the applications, complicating all activities related to performance optimisation. Thus, many research works have pursued to develop advancements for improving the performance of clusters. Comprehensively evaluating such advancements is key to understand the conditions under which they can be more useful. However, the creation of an appropriate test environment, that is, one which offers different application behaviours (so that the obtained conclusions can be better generalised) is typically an effort-intensive task. To help tackle this problem, this paper presents a tool that helps to decrease the effort and expertise needed to build useful test environments to perform more robust cluster testing. This is achieved by enabling the effective usage of Java Benchmarks to easily create clustered test environments; hence, diversifying the application behaviours that can be evaluated. We also present the results of a practical validation of the proposed tool, where it has been successfully applied to the evaluation of two cluster-related advancements. Such results demonstrate the benefits that our tool can bring to the evaluation of cluster-related advancements.","","978-1-5386-3956-6","10.1109/CONISOFT.2017.00023","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8337944","Software-Testing;Evaluation;Java;Clusters;Performance","Benchmark testing;Java;Tools;Computer architecture;Software;Task analysis","business data processing;Java;pattern clustering;program testing;software performance evaluation","Java Benchmarks;cluster computing;enterprise-level applications;architecture model;performance optimisation;appropriate test environment;effort-intensive task;robust cluster testing;effective usage;clustered test environments;cluster-related advancements;clustered systems;test environments","","2","","31","","16 Apr 2018","","","IEEE","IEEE Conferences"
