"Document Title",Authors,"Author Affiliations","Publication Title",Date Added To Xplore,"Publication Year","Volume","Issue","Start Page","End Page","Abstract","ISSN",ISBNs,"DOI",Funding Information,PDF Link,"Author Keywords","IEEE Terms","INSPEC Controlled Terms","INSPEC Non-Controlled Terms","Mesh_Terms",Article Citation Count,Patent Citation Count,"Reference Count","License",Online Date,Issue Date,"Meeting Date","Publisher",Document Identifier
"Teaching software testing methods based on diversity principles","Z. Chen; J. Zhang; B. Luo","State Key Laboratory for Novel Software Technology, Nanjing University, Nanjing 210093, China, Software Institute, Nanjing University, Nanjing 210093, China; State Key Laboratory for Novel Software Technology, Nanjing University, Nanjing 210093, China, Software Institute, Nanjing University, Nanjing 210093, China; State Key Laboratory for Novel Software Technology, Nanjing University, Nanjing 210093, China, Software Institute, Nanjing University, Nanjing 210093, China","2011 24th IEEE-CS Conference on Software Engineering Education and Training (CSEE&T)","16 Jun 2011","2011","","","391","395","Software testing is the primary approach to support software quality assurance. Many novel software testing methods have been proposed to achieve various tasks in recent years. It is a challenge to teach these new testing methods and classical testing methods within limited time. This paper reports our work in progress on the new teaching approach to software testing methods based on diversity principles.","2377-570X","978-1-4577-0348-5","10.1109/CSEET.2011.5876111","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5876111","","Software testing;Education;Software;Subspace constraints;Industries;Diversity methods","program testing;software quality","software testing method;diversity principle;software quality","","4","","15","","16 Jun 2011","","","IEEE","IEEE Conferences"
"Invasive Software Testing: Mutating Target Programs to Diversify Test Exploration for High Test Coverage","Y. Kim; S. Hong; B. Ko; D. L. Phan; M. Kim","Sch. of Comput., KAIST, Daejeon, South Korea; Sch. of CSEE, Handong Global Univ., Pohang, South Korea; Sch. of Comput., KAIST, Daejeon, South Korea; Sch. of Comput., KAIST, Daejeon, South Korea; Sch. of Comput., KAIST, Daejeon, South Korea","2018 IEEE 11th International Conference on Software Testing, Verification and Validation (ICST)","28 May 2018","2018","","","239","249","Software testing techniques have advanced significantly over several decades; however, most of current techniques still test a target program as it is, and fail to utilize valuable information of diverse test executions on many variants of the original program in test generation. This paper proposes a new direction for software testing - Invasive Software Testing (IST). IST first generates a set of target program variants m<sub>1</sub>, ⋯, m<sub>n</sub> from an original target program p by applying mutation operations <sub>1</sub>, ⋯, μ<sub>n</sub>. Second, given a test suite T, IST executes m<sub>1</sub>, ⋯, m<sub>n</sub> with T and records the test runs which increase test coverage compared to p with T. Based on the recorded information, IST generates guideposts for automated test generation on p toward high test coverage. Finally, IST generates test inputs on p with the guideposts and achieves higher test coverage. We developed DEMINER which implements IST for C programs through software mutation and concolic testing. Further, we showed the effectiveness of DEMINER on three real-world target programs Busybox-ls, Busybox-printf, and GNU-find. The experiment results show that the amount of the improved branch coverage by DEMINER is 24.7% relatively larger than those of the conventional concolic testing techniques on average.","","978-1-5386-5012-7","10.1109/ICST.2018.00032","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8367052","Mutation analysis;Practical mutation tool;C programs","Test pattern generators;Manganese;Software testing;Invasive software;Computer crashes","program testing","C programs;software mutation;Invasive Software Testing;mutating target programs;test exploration;Software testing techniques;diverse test executions;target program variants;automated test generation;test coverage;concolic testing techniques;real-world target programs;Busybox-ls;Busybox-printf;GNU-find","","12","","32","","28 May 2018","","","IEEE","IEEE Conferences"
"Locating where faults will be [software testing]","T. J. Ostrand; E. J. Weyuker; R. M. Bell","Res., AT&T Labs, Florham Park, NJ, USA; Res., AT&T Labs, Florham Park, NJ, USA; Res., AT&T Labs, Florham Park, NJ, USA","2005 Richard Tapia Celebration of Diversity in Computing Conference","10 Jan 2006","2005","","","48","50","The goal of this research is to allow software developers and testers to become aware of which files in the next release of a large software system are likely to contain the largest numbers of faults or the highest fault densities in the next release, thereby allowing testers to focus their efforts on the most fault-prone files. This is done by developing a negative binomial regression model to help predict characteristics of new releases of a software system, based on information collected about prior releases and the new release under development. The same prediction model was also used to allow a tester to select the files of a new release that collectively contain any desired percentage of the faults. The benefit of being able to make these sorts of predictions accurately should be clear: if we know where to look for bugs, we should be able to target our testing efforts there and, as a result, find problems more quickly and therefore more economically. Two case studies using large industrial software systems are summarized. The first study used seventeen consecutive releases of a large inventory system, representing more than four years of field exposure. The second study used nine releases of a service provisioning system with two years of field experience.","","1-59593-257-7","10.1145/1095242.1095262","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1570876","Experimentation;software faults;fault-prone;prediction;regression model;empirical study;software testing","Predictive models;Software testing;Software systems;System testing;Permission;Fault diagnosis;Software engineering;Software debugging;Computer bugs;Economic forecasting","program testing;regression analysis;program debugging","fault awareness;negative binomial regression;software fault;service provisioning system;software testing","","2","","3","","10 Jan 2006","","","IEEE","IEEE Conferences"
"DDF: Diversity Dragonfly Algorithm for cost-aware test suite minimization approach for software testing","S. R. Sugave; S. H. Patil; B. E. Reddy","MIT College of Engineering, Pune, MH, India; Bharati Vidyapeeth University College of Engineering, Pune, MH, India; JNTUA College of Engineering, Kalikiri, Chittor District, AP, India","2017 International Conference on Intelligent Computing and Control Systems (ICICCS)","11 Jan 2018","2017","","","701","707","The test suite minimization approach is a major research topic that it requires huge attention from the researchers as the traditional methods used for performing the test suite minimization is concentrated on the cost of regression testing but the requirements were not satisfied. To solve the problem of satisfying requirements, researchers proposed greedy algorithms, optimization algorithms, and so on. In this paper, a novel optimization algorithm is proposed termed as the Diversity Dragonfly Algorithm (DDF) algorithm that concentrates on the cost and quality of the test suite. The diversification included in the standard Dragonfly algorithm forms the DDF that uses three bitwise operators for diversification. The DDF algorithm determines the best suite based on the hunting mechanism of the dragonfly using a minimum objective function such that the selected test suite satisfies all the requirements. The experiment is carried out using five subject programs and the performance analysis of the proposed DDF is carried out and compared with the existing methods. It is found that the reduction capability of the DDF is better than existing methods and the cost of the proposed DDF is low ensuring a quality test suite reduction.","","978-1-5386-2745-7","10.1109/ICCONS.2017.8250554","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8250554","Test suite reduction;DDF optimization algorithm;cost constraint;Software testing;Diversity function","Software;Minimization;Optimization;Software algorithms;Software testing;Linear programming","greedy algorithms;optimisation;program testing;regression analysis","cost-aware test suite minimization approach;software testing;regression testing;greedy algorithms;optimization algorithms;Diversity Dragonfly Algorithm algorithm;diversification;standard Dragonfly algorithm;DDF algorithm;quality test suite reduction;minimum objective function","","7","","15","","11 Jan 2018","","","IEEE","IEEE Conferences"
"Fundamentals of test case selection: Diversity, diversity, diversity","T. Y. Chen","Centre for Software Analysis and Testing, Swinburne University of Technology, Hawthorn 3122 VIC, Australia","The 2nd International Conference on Software Engineering and Data Mining","9 Aug 2010","2010","","","723","724","Our recent investigations in software testing reveal that diversity constitutes the underlying foundation in many test case selection strategies. This talk attempts to provide an overview of the concept of diversity in test case selection through two families of test case selection strategies, namely, random testing and partition testing. We also present some areas of software testing where the application of data mining techniques shows great potential in identifying key aspects of diversity in various forms.","","978-89-88678-22-0","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5542825","Adaptive Random Testing;Partition Testing;Proportional Sampling Strategy;Software Testing","Testing;Entropy;Game theory;Counting circuits;Fuzzy sets;Mechatronics;Data analysis;Decision theory;Uncertainty;Fuzzy systems","data mining;program testing","test case selection strategy;software testing;diversity concept;random testing;partition testing;data mining techniques","","","","7","","9 Aug 2010","","","IEEE","IEEE Conferences"
"Searching for Cognitively Diverse Tests: Towards Universal Test Diversity Metrics","R. Feldt; R. Torkar; T. Gorschek; W. Afzal","Dept. of Syst. & Software Eng., Blekinge Inst. of Technol., Ronneby; Dept. of Syst. & Software Eng., Blekinge Inst. of Technol., Ronneby; Dept. of Syst. & Software Eng., Blekinge Inst. of Technol., Ronneby; Dept. of Syst. & Software Eng., Blekinge Inst. of Technol., Ronneby","2008 IEEE International Conference on Software Testing Verification and Validation Workshop","16 Jul 2008","2008","","","178","186","Search-based software testing (SBST) has shown a potential to decrease cost and increase quality of testing- related software development activities. Research in SBST has so far mainly focused on the search for isolated tests that are optimal according to a fitness function that guides the search. In this paper we make the case for fitness functions that measure test fitness in relation to existing or previously found tests; a test is good if it is diverse from other tests. We present a model for test variability and propose the use of a theoretically optimal diversity metric at variation points in the model. We then describe how to apply a practically useful approximation to the theoretically optimal metric. The metric is simple and powerful and can be adapted to a multitude of different test diversity measurement scenarios. We present initial results from an experiment to compare how similar to human subjects, the metric can cluster a set of test cases. To carry out the experiment we have extended an existing framework for test automation in an object-oriented, dynamic programming language.","","978-0-7695-3388-9","10.1109/ICSTW.2008.36","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4567005","","Software testing;System testing;Humans;Object oriented modeling;Automatic testing;Software measurement;Software engineering;Isolation technology;Costs;Programming","object-oriented programming;program testing;software metrics","universal test diversity metrics;search-based software testing;software development;optimal diversity metric;dynamic programming language;object-oriented programming","","33","","22","","16 Jul 2008","","","IEEE","IEEE Conferences"
"Test Set Diameter: Quantifying the Diversity of Sets of Test Cases","R. Feldt; S. Poulding; D. Clark; S. Yoo","Software Eng. Res. Lab., Blekinge Inst. of Technol., Karlskrona, Sweden; Software Eng. Res. Lab., Blekinge Inst. of Technol., Karlskrona, Sweden; Dept. of Comput. Sci., Univ. Coll. London, London, UK; Sch. of Comput., KAIST, Daejeon, South Korea","2016 IEEE International Conference on Software Testing, Verification and Validation (ICST)","21 Jul 2016","2016","","","223","233","A common and natural intuition among software testers is that test cases need to differ if a software system is to be tested properly and its quality ensured. Consequently, much research has gone into formulating distance measures for how test cases, their inputs and/or their outputs differ. However, common to these proposals is that they are data type specific and/or calculate the diversity only between pairs of test inputs, traces or outputs. We propose a new metric to measure the diversity of sets of tests: the test set diameter (TSDm). It extends our earlier, pairwise test diversity metrics based on recent advances in information theory regarding the calculation of the normalized compression distance (NCD) for multisets. A key advantage is that TSDm is a universal measure of diversity and so can be applied to any test set regardless of data type of the test inputs (and, moreover, to other test-related data such as execution traces). But this universality comes at the cost of greater computational effort compared to competing approaches. Our experiments on four different systems show that the test set diameter can help select test sets with higher structural and fault coverage than random selection even when only applied to test inputs. This can enable early test design and selection, prior to even having a software system to test, and complement other types of test automation and analysis. We argue that this quantification of test set diversity creates a number of opportunities to better understand software quality and provides practical ways to increase it.","","978-1-5090-1827-7","10.1109/ICST.2016.33","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7515474","Software testing;Information theory;Test selection;Empirical study","Measurement;Complexity theory;Software testing;Electronic mail;Software systems","program testing;software fault tolerance;software metrics;software quality","software quality;test set diversity;fault coverage;NCD;normalized compression distance;pairwise test diversity metrics;TSDm;software system;software testers;test cases;test set diameter","","47","","41","","21 Jul 2016","","","IEEE","IEEE Conferences"
"Scoring Mechanism of Defect Report Based on Text Similarity","M. Zhu; J. Sun; X. Li; L. Xiao",Hangzhou Normal University; Hangzhou Normal University; Hangzhou Normal University; Engineering Research Center for Software Testing and Evaluation of Fujian Province,"2019 10th International Conference on Information Technology in Medicine and Education (ITME)","23 Jan 2020","2019","","","182","185","With the rapid development of the software industry in recent years, the demand for software testing talents in the society is also growing. Therefore, more and more colleges and universities set up ""software testing technology"" courses in related majors. Finding defects is a basic skill of software testing technology training. Some defects are difficult to find and some defects are easy to find. How to give reasonable evaluation according to the difficulty and quantity of defects in the defect report submitted by students often requires much of teacher's time and effort. This paper proposes a defect repetitive detection method based on the combination of TF-IDF and cosine similarity and proposes a defect report scoring mechanism based on the difficulty level and number of defects found by students. Comparing the manually scores of the defect reports by the teachers, the scoring mechanism is reasonable and effective, and greatly improves the work efficiency of the teachers.","2474-3828","978-1-7281-3918-0","10.1109/ITME.2019.00050","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8964978","software testing;TF-IDF;cosine similarity;scoring mechanism","Software;Feature extraction;Software testing;Libraries;Mathematical model;Information science;Classification algorithms","computer science education;program testing;text analysis","software industry;software testing talents;software testing technology courses;defect repetitive detection method;TF-IDF;cosine similarity;defect report scoring mechanism","","","","4","","23 Jan 2020","","","IEEE","IEEE Conferences"
"The Evolutionary Landscape of SBST: A 10 Year Perspective","M. B. Cohen","Dept. of Comput. Sci. & Eng., Univ. of Nebraska-Lincoln, Lincoln, NE, USA","2017 IEEE/ACM 10th International Workshop on Search-Based Software Testing (SBST)","7 Jul 2017","2017","","","47","48","A key indicator of the health and quality of any evolutionary algorithm is the landscape of its search. By analyzing the landscape one can determine the peaks (local maxima) where significant solutions exist. In this paper we examine the landscape for the history of the International Workshop on Search-Based Software Testing (SBST) within the context of the broader field of search-based software testing. We study the evolution of the field, highlighting key advances during three phases of its ten year history. In 2008 the focus of SBST was inner looking, with advances in existing search techniques, improvements to individual generation techniques, and methods to transform the problem space for search effectiveness. However, diverse seeds of new ideas (such as automated program repair) were already being injected into the population. A few SBST tools existed, but the engineer still required skill and expertise to effectively apply search based approaches. During the middle years, open source tools were created and released, whole test suite generation appeared, and searches hybridized. Tool competitions began and industry started to play a stronger role. As we move to the most recent workshop years and look towards the future, more sophisticated techniques such as those that incorporate hyper-heuristics via learning, and/or balance multiple objectives at once are now common. SBST has become a mainstream topic in the testing community, tools are being commercialized and these tools often hide their inner workings, leading to a future that is optimized towards SBST for all.","","978-1-5386-2789-1","10.1109/SBST.2017.2","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7967961","Search-based software testing;SBST","Tools;Software testing;Conferences;Maintenance engineering;Sociology;Statistics","evolutionary computation;program testing","evolutionary algorithm;search-based software testing;SBST tools;test suite generation;testing community","","","","12","","7 Jul 2017","","","IEEE","IEEE Conferences"
"Using Exploration Focused Techniques to Augment Search-Based Software Testing: An Experimental Evaluation","B. Marculescu; R. Feldt; R. Torkar","Sch. of Comput. Karlskrona, Blekinge Inst. of Technologv, Karlskrona, Sweden; Sch. of Comput. Karlskrona, Blekinge Inst. of Technologv, Karlskrona, Sweden; Sch. of Comput. Karlskrona, Blekinge Inst. of Technologv, Karlskrona, Sweden","2016 IEEE International Conference on Software Testing, Verification and Validation (ICST)","21 Jul 2016","2016","","","69","79","Search-based software testing (SBST) often uses objective-based approaches to solve testing problems. There are, however, situations where the validity and completeness of objectives cannot be ascertained, or where there is insufficient information to define objectives at all. Incomplete or incorrect objectives may steer the search away from interesting behavior of the software under test (SUT) and from potentially useful test cases. This papers investigates the degree to which exploration-based algorithms can be used to complement an objective-based tool we have previously developed and evaluated in industry. In particular, we would like to assess how exploration-based algorithms perform in situations where little information on the behavior space is available a priori. We have conducted an experiment comparing the performance of an exploration-based algorithm with an objective-based one on a problem with a high-dimensional behavior space. In addition, we evaluate to what extent that performance degrades in situations where computational resources are limited. Our experiment shows that exploration-based algorithms are useful in covering a larger area of the behavior space and result in a more diverse solution population. Typically, of the candidate solutions that exploration-based algorithms propose, more than 80% were not covered by their objective-based counterpart. This increased diversity is present in the resulting population even when computational resources are limited. We conclude that exploration-focused algorithms are a useful means of investigating high-dimensional spaces, even in situations where limited information and limited resources are available.","","978-1-5090-1827-7","10.1109/ICST.2016.26","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7515460","search-based software testing;objective-based algorithms;exploration-focused;controlled experiment","Conferences;Software testing","program testing","search-based software testing;SBST;objective-based approaches;software under test;SUT;exploration-based algorithms;high-dimensional behavior space","","4","","17","","21 Jul 2016","","","IEEE","IEEE Conferences"
"Domain Ontology Construction and Evaluation for the Entire Process of Software Testing","Z. Sun; C. Hu; C. Li; L. Wu","Institute of Computer Application, China Academy of Engineering Physics, Mianyang, China; Institute of Computer Application, China Academy of Engineering Physics, Mianyang, China; Institute of Computer Application, China Academy of Engineering Physics, Mianyang, China; Institute of Computer Application, China Academy of Engineering Physics, Mianyang, China","IEEE Access","18 Nov 2020","2020","8","","205374","205385","As an important part of software engineering, software testing is a knowledge-intensive work. In the process of software testing, inconsistent knowledge expression, diverse knowledge carriers, and a few experienced people have mastered most of the knowledge, which hinders the transfer and sharing of domain knowledge. Ontology is widely used in various stages of software engineering to define the semantic relationship between relevant information and knowledge. To solve the problem of knowledge silo in the process of software testing, this article forms an Entire Process Ontology on Software Testing (EPOST). EPOST covers the concepts and relationships of software testing process information, software test object information, and software defect information. The concepts and terms in the ontology are extracted from ISTQB, SWEBOK, IEEE std.829-2008 standard, and IEEE std.610.12-1990 standard. We adopt a comprehensive ontology construction method based on Dev. 101 method and Methontology method. The developed ontology is successfully evaluated by using validation and verification tests. Ontology verification uses an improved FOCA evaluation method by adding a cohesion metric. The evaluation result infers that EPOST has a high quality of ontology and good domain coverage, and achieves the purpose of ontology construction. Finally, we make a case study on the role of EPOST in software testing process. The results show that ontology-based application in the software testing process can promote the sharing and transmission of domain knowledge, and improve the testing process and testing quality.","2169-3536","","10.1109/ACCESS.2020.3037188","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9253652","Ontology construction;software testing;domain ontology;knowledge management;ontology evaluation","Ontologies;Software testing;Software;Tools;Sun;Semantics;IEEE Standards","IEEE standards;ISO standards;knowledge management;ontologies (artificial intelligence);program testing;software metrics;software quality","domain ontology construction;software engineering;knowledge-intensive work;domain knowledge;software testing process information;software test object information;software defect information;testing quality;entire process ontology on software testing;IEEE std.610.12-1990 standard;IEEE std.829-2008 standard;ISTQB;SWEBOK;EPOST;improved FOCA evaluation method;cohesion metric","","4","","38","CCBY","10 Nov 2020","","","IEEE","IEEE Journals"
"Boosted Exploratory Test Architecture: Coaching Test Engineers with Word Similarity","Y. Nishi; Y. Shibasaki","The University of Electro-Communications,Dept. of Informatics,Tokyo,Japan; The University of Electro-Communications,Dept. of Informatics,Tokyo,Japan","2021 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","28 May 2021","2021","","","173","174","Testing software using machine learning and neural network is difficult due to non-linearity. This paper proposes Boosted Exploratory Test architecture to support creativity of test engineers by using a non-linear test generator. This paper also shows experimental results Boosted Exploratory Test architecture with Word2Vec is better for a smart speaker.","","978-1-6654-4456-9","10.1109/ICSTW52544.2021.00038","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9440172","software testing;test architecture;Boosted Exploratory Test;Word2Vec;smart speaker","Software testing;Conferences;Neural networks;Computer architecture;Machine learning;Software;Generators","learning (artificial intelligence);natural language processing;neural nets;program testing","software using machine learning;nonlinear test generator;coaching test engineers;exploratory test architecture;Word2Vec;smart speaker","","","","8","","28 May 2021","","","IEEE","IEEE Conferences"
"Objective Re-weighting to Guide an Interactive Search Based Software Testing System","B. Marculescu; R. Feldt; R. Torkar","Sch. of Comput., Blekinge Inst. of Technol., Karlskrona, Sweden; Sch. of Comput., Blekinge Inst. of Technol., Karlskrona, Sweden; Sch. of Comput., Blekinge Inst. of Technol., Karlskrona, Sweden","2013 12th International Conference on Machine Learning and Applications","10 Apr 2014","2013","2","","102","107","Even hardware-focused industries today develop products where software is both a large and important component. Engineers tasked with developing and integrating these products do not always have a software engineering background. To ensure quality, tools are needed that automate and support software testing while allowing these domain specialists to leverage their knowledge and experience. Search-based testing could be a key aspect in creating an automated tool for supporting testing activities. However, domain specific quality criteria and trade-offs make it difficult to develop a general fitness function a priori, so interaction between domain specialists and such a tool would be critical to its success. In this paper we present a system for interactive search-based software testing and investigate a way for domain specialists to guide the search by dynamically re-weighting quality goals. Our empirical investigation shows that objective re-weighting can help a human domain specialist interactively guide the search, without requiring specialized knowledge of the system and without sacrificing population diversity.","","978-0-7695-5144-9","10.1109/ICMLA.2013.113","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6786089","search based software testing;interactive search based software engineering;user centered;embedded software;industrial experience","Software;Software testing;Search problems;Software engineering;Context;Sociology","automatic testing;interactive systems;program testing;software quality","software engineering background;automated testing tool;interactive search- based software testing;quality goals;objective reweighting;human domain specialist;population diversity","","5","","12","","10 Apr 2014","","","IEEE","IEEE Conferences"
"Modeling the effects of combining diverse software fault detection techniques","B. Littlewood; P. T. Popov; L. Strigini; N. Shryane","Centre for Software Reliability, City Univ., London, UK; NA; NA; NA","IEEE Transactions on Software Engineering","6 Aug 2002","2000","26","12","1157","1167","Considers what happens when several different fault-finding techniques are used together. The effectiveness of such multi-technique approaches depends upon a quite subtle interplay between their individual efficacies. The modeling tool we use to study this problem is closely related to earlier work on software design diversity which showed that it would be unreasonable even to expect software versions that were developed truly independently to fail independently of one another. The key idea was a ""difficulty function"" over the input space. Later work extended these ideas to introduce a notion of ""forced"" diversity. In this paper, we show that many of these results for design diversity have counterparts in diverse fault detection in a single software version. We define measures of fault-finding effectiveness and diversity, and show how these might be used to give guidance for the optimal application of different fault-finding procedures to a particular program. The effects on reliability of repeated applications of a particular fault-finding procedure are not statistically independent; such an incorrect assumption of independence will always give results that are too optimistic. For diverse fault-finding procedures, it is possible for effectiveness to be even greater than it would be under an assumption of statistical independence. Diversity of fault-finding procedures is a good thing and should be applied as widely as possible. The model is illustrated using some data from an experimental investigation into diverse fault-finding on a railway signalling application.","1939-3520","","10.1109/32.888629","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=888629","","Diversity reception;Fault detection;Software design;Application software;Redundancy;Hardware;Aerospace control;Battery powered vehicles;Software engineering;Particle measurements","system recovery;program diagnostics;software reliability;signalling;railways","software fault detection techniques;multi-technique approach;modeling tool;software design diversity;independently developed software versions;system failure;difficulty function;forced diversity;fault-finding effectiveness;repeated application reliability;diverse fault-finding procedures;statistical independence;railway signalling application;fault removal;software testing;software reliability growth","","32","","15","IEEE","6 Aug 2002","","","IEEE","IEEE Journals"
"Automatic generation of software test data based on hybrid particle swarm genetic algorithm","Rui Ding; Xianbin Feng; Shuping Li; Hongbin Dong","Computer department, Mudanjiang Normal University, China; Computer department, Mudanjiang Normal University, China; Computer department, Mudanjiang Normal University, China; National Science Park, Harbin Engineering University, China","2012 IEEE Symposium on Electrical & Electronics Engineering (EEESYM)","6 Aug 2012","2012","","","670","673","A hybrid particle swarm genetic algorithm is purposed to apply in software testing using case automated generations. On the basis of classical genetic algorithm, the algorithm divided the population into “families”, influencing the convergence efficiency by crossover in family, keeping the diversity of the population by crossover between families; meanwhile, enhancing the speed of convergence by the PSO crossover (commixed the thought of PSO in genetic algorithm) According to the characteristics of software testing problems, we designed the corresponding fitness function and the encoding method. The results of data experiment were given to illustrate the effectiveness of the algorithm.","","978-1-4673-2365-9","10.1109/EEESym.2012.6258748","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6258748","Genetic Algorithm;Particle Swarm Optimization;Software Testing;Case Automatically Generates","Reliability;Genetics","encoding;genetic algorithms;particle swarm optimisation;program testing","software test data automatic generation;hybrid particle swarm genetic algorithm;convergence efficiency;population diversity;PSO crossover;fitness function;encoding method","","5","","12","","6 Aug 2012","","","IEEE","IEEE Conferences"
"PHANTA: Diversified Test Code Quality Measurement for Modern Software Development","S. Tokumoto; K. Takayama",Fujitsu Laboratories Ltd.; Fujitsu Laboratories Ltd.,"2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)","9 Jan 2020","2019","","","1206","1207","Test code is becoming more essential to the modern software development process. However, practitioners often pay inadequate attention to key aspects of test code quality, such as bug detectability, maintainability and speed. Existing tools also typically report a single test code quality measure, such as code coverage, rather than a diversified set of metrics. To measure and visualize quality of test code in a comprehensive fashion, we developed an integrated test code analysis tool called Phanta. In this show case, we posit that the enhancement of test code quality is key to modernizing software development, and show how Phanta's techniques measure the quality using mutation analysis, test code clone detection, and so on. Further, we present an industrial case study where Phanta was applied to analyze test code in a real Fujitsu project, and share lessons learned from the case study.","2643-1572","978-1-7281-2508-4","10.1109/ASE.2019.00138","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952538","Software Testing;Test Code;Mutation Testing","Tools;Measurement;Cloning;Software;Testing;Computer bugs;Software engineering","program testing;software maintenance;software quality","diversified test code quality measurement;modern software development process;single test code quality measure;code coverage;integrated test code analysis tool;software development;test code clone detection;Phanta techniques measure;mutation analysis;Fujitsu project","","","","6","","9 Jan 2020","","","IEEE","IEEE Conferences"
"Using mutation testing to measure behavioural test diversity","F. G. d. O. Neto; F. Dobslaw; R. Feldt","Chalmers and the University of Gothenburg,Dept. of Computer Science and Engineering,Gothenburg,Sweden; Chalmers and the University of Gothenburg,Dept. of Computer Science and Engineering,Gothenburg,Sweden; Chalmers and the University of Gothenburg,Dept. of Computer Science and Engineering,Gothenburg,Sweden","2020 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","4 Aug 2020","2020","","","254","263","Diversity has been proposed as a key criterion to improve testing effectiveness and efficiency. It can be used to optimise large test repositories but also to visualise test maintenance issues and raise practitioners' awareness about waste in test artefacts and processes. Even though these diversitybased testing techniques aim to exercise diverse behavior in the system under test (SUT), the diversity has mainly been measured on and between artefacts (e.g., inputs, outputs or test scripts). Here, we introduce a family of measures to capture behavioural diversity (b-div) of test cases by comparing their executions and failure outcomes. Using failure information to capture the SUT behaviour has been shown to improve effectiveness of history-based test prioritisation approaches. However, historybased techniques require reliable test execution logs which are often not available or can be difficult to obtain due to flaky tests, scarcity of test executions, etc. To be generally applicable we instead propose to use mutation testing to measure behavioral diversity by running the set of test cases on various mutated versions of the SUT. Concretely, we propose two specific b-div measures (based on accuracy and Matthew's correlation coefficient, respectively) and compare them with artefact-based diversity (a-div) for prioritising the test suites of 6 different open-source projects. Our results show that our b-div measures outperform a-div and random selection in all of the studied projects. The improvement is substantial with an average increase in average percentage of faults detected (APFD) of between 19% to 31% depending on the size of the subset of prioritised tests.","","978-1-7281-1075-2","10.1109/ICSTW50294.2020.00051","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9155915","diversity-based testing;test prioritisation;test selection;empirical study","Testing;Fault detection;Reliability;Optimization;Atmospheric measurements;Particle measurements;Diversity reception","fault diagnosis;program testing","reliable test execution logs;flaky tests;test executions;mutation testing;b-div measures;artefact-based diversity;test suites;prioritised tests;behavioural test diversity;testing effectiveness;test repositories;diversity-based testing techniques;open-source projects;random selection;history-based test;SUT behaviour;failure outcomes;test scripts;diverse behavior;test artefacts;test maintenance issues","","","","31","","4 Aug 2020","","","IEEE","IEEE Conferences"
"Random Border Mirror Transform: A Diversity Based Approach to an Effective and Efficient Mirror Adaptive Random Testing","M. Omari; J. Chen; P. Kwaku Kudjo; H. Ackah-Arthur; R. Huang",Jiangsu University; Jiangsu University; Jiangsu University; Jiangsu University; Jiangsu University,"2019 IEEE 19th International Conference on Software Quality, Reliability and Security (QRS)","3 Oct 2019","2019","","","54","61","Mirror Adaptive random testing (MART) is an overhead reduction strategy for adaptive random testing methods. Theoretically speaking, MART's advantage over ordinary ARTs is determined by the mirroring scheme selected. Incidentally, an inherent problem with MART relates to the difficulty in the choice of a scheme for any testing task. This is because a higher scheme (larger mirror domains) does not necessarily guarantee efficient utilization of testing resources due to lack of diversity of mirror generated test cases. The culprit has been identified as the mapping functions used as substitutes to complex ART methods. In this paper, we present a new method for generating diversified mirror test cases by randomly displacing the mirror partitions upon which the mapping functions of MART operates. The result of simulations and experiments conducted shows remarkable improvement over MART's effectiveness and efficiency across MART schemes, especially where program failures are unrelated to one or more input parameters.","","978-1-7281-3927-2","10.1109/QRS.2019.00020","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8854699","Adaptive random testing;software testing;mirror adaptive random testing;test case diversity","Mirrors;Subspace constraints;Software;Power capacitors;Software testing;Software reliability","program testing;random processes;transforms","mapping functions;Mirror Adaptive random testing;overhead reduction strategy;adaptive random testing methods;MART;random border mirror transform;ART methods;software testing","","","","24","","3 Oct 2019","","","IEEE","IEEE Conferences"
"Instance Generator and Problem Representation to Improve Object Oriented Code Coverage","A. Sakti; G. Pesant; Y. Guéhéneuc","Department of Computer and Software Engineering, École Polytechnique de Montral, Montral, QC, Canada; Department of Computer and Software Engineering, École Polytechnique de Montral, Montral, QC, Canada; Department of Computer and Software Engineering, École Polytechnique de Montral, Montral, QC, Canada","IEEE Transactions on Software Engineering","11 Mar 2015","2015","41","3","294","313","Search-based approaches have been extensively applied to solve the problem of software test-data generation. Yet, test-data generation for object-oriented programming (OOP) is challenging due to the features of OOP, e.g., abstraction, encapsulation, and visibility that prevent direct access to some parts of the source code. To address this problem we present a new automated search-based software test-data generation approach that achieves high code coverage for unit-class testing. We first describe how we structure the test-data generation problem for unit-class testing to generate relevant sequences of method calls. Through a static analysis, we consider only methods or constructors changing the state of the class-under-test or that may reach a test target. Then we introduce a generator of instances of classes that is based on a family of means-of-instantiation including subclasses and external factory methods. It also uses a seeding strategy and a diversification strategy to increase the likelihood to reach a test target. Using a search heuristic to reach all test targets at the same time, we implement our approach in a tool, JTExpert, that we evaluate on more than a hundred Java classes from different open-source libraries. JTExpert gives better results in terms of search time and code coverage than the state of the art, EvoSuite, which uses traditional techniques.","1939-3520","","10.1109/TSE.2014.2363479","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6926828","Automatic Test Data Generation;Search Based Software Testing;Unit Class Testing;Seeding Strategy;Diversification Strategy;Java Testing;Automatic test data generation;search based software testing;unit class testing;seeding strategy;diversification strategy;Java testing","Testing;Complexity theory;Generators;Search problems;Java;Production facilities;Libraries","Java;object-oriented programming;program diagnostics;program testing;public domain software","instance generator;problem representation;object oriented code coverage;search-based approach;object-oriented programming;OOP;abstraction;encapsulation;visibility;source code;automated search-based software test-data generation approach;unit-class testing;method call sequences;static analysis;class-under-test;means-of-instantiation;seeding strategy;diversification strategy;search heuristic;JTExpert;Java class evaluation;open-source libraries;search time;EvoSuite","","56","","53","IEEE","16 Oct 2014","","","IEEE","IEEE Journals"
"Using the 5W+1H Model in Reporting Systematic Literature Review: A Case Study on Software Testing for Cloud Computing","C. Jia; Y. T. Yu","Dept. of Comput. Sci., City Univ. of Hong Kong, Hong Kong, China; Dept. of Comput. Sci., City Univ. of Hong Kong, Hong Kong, China","2013 13th International Conference on Quality Software","23 Sep 2013","2013","","","222","229","This paper documents a case study of using the 5W+1H model for reporting systematic literature review on software testing for cloud computing. To our knowledge, this is the first systematic literature review that applies the 5W+1H model, which is widely used in the journalism domain, to report the full picture of the research area in both software engineering and services computing. Existing guidelines on systematic literature review heavily rely on the researcher to pose the right research questions, and the review results are tightly focused on these research questions. For researchers new to a field, defining the right research questions that are effective in revealing the critical issues in the field can be challenging. Our case study demonstrates that the 5W+1H model provides an easy aid for the researcher to get over such initial challenges. As the researcher becomes more familiar with the field, he/she may then refine the research questions by adding more topic-specific contexts. In this way, the 5W+1H model serves to provide an exploratory framework to shape a systematic literature review. Applying to software testing for cloud computing, we are able to synthesize a comprehensive picture of recent researches on the field, including publication pattern, article citation immediacy, research topic diversity, research ideas for addressing testing challenges at different cloud service architectural layers. Based on the case study, we summarize the lessons learned on using the 5W+1H model in reporting systematic literature review.","2332-662X","978-0-7695-5039-8","10.1109/QSIC.2013.13","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6605931","5W+1H;cloud-based application;software testing;systematic literature review","Software testing;Cloud computing;Computational modeling;Software as a service;Systematics","cloud computing;program testing;software engineering","cloud service architectural layers;research ideas;research topic diversity;article citation immediacy;publication pattern;topic specific contexts;services computing;software engineering;cloud computing;software testing;case study;reporting systematic literature review","","2","","29","","23 Sep 2013","","","IEEE","IEEE Conferences"
"Visualizing Test Diversity to Support Test Optimisation","F. G. De Oliveira Neto; R. Feldt; L. Erlenhov; J. B. D. S. Nunes","Dept. of Comput. Sci. & Eng., Univ. of Gothenburg, Gothenburg, Sweden; Dept. of Comput. Sci. & Eng., Univ. of Gothenburg, Gothenburg, Sweden; Dept. of Comput. Sci. & Eng., Univ. of Gothenburg, Gothenburg, Sweden; Dept. of Comput. Syst., Fed. Univ. of Campina Grande, Campina Grande, Brazil","2018 25th Asia-Pacific Software Engineering Conference (APSEC)","23 May 2019","2018","","","149","158","Diversity has been used as an effective criteria to optimise test suites for cost-effective testing. Particularly, diversity-based (alternatively referred to as similarity-based) techniques have the benefit of being generic and applicable across different Systems Under Test (SUT), and have been used to automatically select or prioritise large sets of test cases. However, there is a challenge in how to present diversity information to developers and testers since results are typically many-dimensional. Furthermore, the generality of diversity-based approaches makes it harder to choose when and where to apply them. In this paper we address these challenges by investigating: i) what are the trade-offs in using different sources of diversity (e.g., diversity of test requirements or test scripts) to optimise large test suites, and ii) how visualisation of test diversity data can assist testers for test optimisation and improvement. We perform a case study on three industrial projects and present quantitative results on the fault detection capabilities and redundancy levels of different sets of test cases. Our key result is that test similarity maps, based on pair-wise diversity calculations, helped industrial practitioners identify issues with their test repositories and decide on actions to improve. We conclude that the visualisation of diversity information can assist testers in their maintenance and optimisation activities.","2640-0715","978-1-7281-1970-0","10.1109/APSEC.2018.00029","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8719537","Software Testing;Diversity;Search based Software Testing;Empirical Study","Optimization;Testing;Indexes;Data visualization;Fault detection;Maintenance engineering;Subspace constraints","data visualisation;fault diagnosis;program testing","test optimisation;test suites;cost-effective testing;test cases;diversity information;diversity-based approaches;test requirements;test scripts;test diversity data;test similarity maps;pair-wise diversity calculations;test repositories;maintenance;optimisation activities","","4","","25","","23 May 2019","","","IEEE","IEEE Conferences"
"Software Testing Techniques in IoT","G. Murad; A. Badarneh; A. Qusef; F. Almasalha","Computer Science Department, Applied Science University; Jordanian Engineers Association; Software Eng. Dept., Princess Sumaya Univ. for Technol., Amman, Jordan; Computer Science Department, Applied Science University","2018 8th International Conference on Computer Science and Information Technology (CSIT)","11 Oct 2018","2018","","","17","21","As well as the important industry 4.0 revolution, based on of the serves that IoT provides in our society in different fields such as smart building, factory, mobility, health care. Previous studies explore various technology solution to find the best technique to test IoT applications in order to ensure quality for IoT devices. The paper surveys diverse of aspects of multiples software testing and tools for loT devices, and provides details in use case testing for IoT environment and test different accepts such as usability, security, connectivity. The paper considers various security requirement and challenges an unveils different research problems in testing IoT applications and proposes multiple tools and software techniques that help to enhance IoT applications quality.","","978-1-5386-4152-1","10.1109/CSIT.2018.8486149","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8486149","Software Testing;IoT;Testing Methodologies;Testing Tools","Internet of Things;Tools;Software;Security;Software testing;Computer science","Internet of Things;mobile computing;program testing","smart building;health care;IoT devices;use case testing;multiple tools;IoT applications quality;IoT applications;software testing techniques","","5","","27","","11 Oct 2018","","","IEEE","IEEE Conferences"
"Research on Excavation Technology of Software Implied Testing Requirements","Y. Yang; K. Li; Q. Zhang; Y. Wang","Beijing Research Institute of the Beijing Flight Communications Computing,Beijing,China; Beijing Research Institute of the Beijing Flight Communications Computing,Beijing,China; Beijing Research Institute of the Beijing Flight Communications Computing,Beijing,China; Beijing Research Institute of the Beijing Flight Communications Computing,Beijing,China","2021 2nd International Conference on Computer Science and Management Technology (ICCSMT)","8 Jun 2022","2021","","","92","96","Aiming at the problems of inappropriate decomposition of software testing requirements and inexperienced testers in the software testing process, the paper proposes a software implicit testing requirements excavation method based on failure modes. Failure modes are obtained by analyzing historical failure data with the fault tree analysis method, according to which the testing guidelines corresponding to them are established afterwards. Implicit test requirements are testing requirements that are not mentioned in the software development requirements document but have occurred in other software with similar testing requests. The extraction of implied testing requirements relies on matching the semantic similarity between the development requirements document and the testing guidelines. The testing requirements that are not described in the development requirements document are complemented by the testing guidelines. The excavation of implied testing requirements complements the testing outline formed by the original decomposition of testing requirements according to the development requirement document and reduces the probability of the same problem occurring in the software. The experimental results show that it provides sufficient support for the improvement of testing requirements in the test of software and guarantees the reliability and security of the software efficiently.","","978-1-6654-2063-1","10.1109/ICCSMT54525.2021.00026","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9786960","component;testing requirements;failure mode;semantic similarity analysis;fault tree;software test","Software testing;Computer science;Semantics;Excavation;Software;Software reliability;Security","fault trees;probability;program testing","software implied;software testing requirements;software testing process;software implicit testing requirements excavation method;failure modes;testing guidelines;implicit test requirements;software development requirements document;similar testing requests;implied testing requirements;testing outline;development requirement document","","","","12","IEEE","8 Jun 2022","","","IEEE","IEEE Conferences"
"A Preliminary Study on Factors Affecting Software Testing Team Performance","T. Kanij; R. Merkel; J. Grundy","Swinburne Univ. of Technol., Hawthorn, VIC, Australia; Monash Univ., Clayton, VIC, Australia; Swinburne Univ. of Technol., Hawthorn, VIC, Australia","2011 International Symposium on Empirical Software Engineering and Measurement","1 Dec 2011","2011","","","359","362","With the growth of the software testing industry, many in-house testing groups and outsourcing testing companies have been established. Underlying the success of these testing groups and companies are team(s) of testers. This research investigates the importance of different factors, diversity and experience on building a successful testing team. We collected the opinions of testing practitioners on these factors via a survey. The outcome strongly indicates the relative importance of different factors and that diversity is helpful for a testing team. The results also support the importance of suitable team experience.","1949-3789","978-1-4577-2203-5","10.1109/ESEM.2011.48","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6092588","testing team;rank;diversity;experience","Software measurement;Software engineering","program testing;software development management","software testing team performance;outsourcing testing companies;suitable team experience;software testing industry","","10","","11","","1 Dec 2011","","","IEEE","IEEE Conferences"
"Teaching Practices of Software Testing in Programming Education","L. P. Scatalon; R. E. Garcia; E. F. Barbosa","University of São Paulo (ICMC-USP),São Carlos-SP,Brazil; São Paulo State University (FCT-Unesp),Presidente Prudente-SP,Brazil; University of São Paulo (ICMC-USP),São Carlos-SP,Brazil","2020 IEEE Frontiers in Education Conference (FIE)","4 Dec 2020","2020","","","1","9","This Research Full Paper presents an overview of the practices that have been used to integrate software testing into programming education. Introductory programming courses compose the core of several undergraduate programs, since programming is a crucial technical skill for professionals in many areas. Given the subject importance, researchers have been conducting several studies to investigate teaching approaches that can help overcoming students' learning difficulties. In particular, studies on introducing software testing into this context present evidence that testing practices can improve students' programming performance and habits. There are many teaching approaches in programming education, which involve different choices of programming paradigm and language, support tools and development practices, such as version control. Likewise, the integration of software testing into such diverse context can also happen in many different ways. Therefore, investigating the ways to teach programming and testing at the same time can help instructors with informed choices. In this sense, we identified teaching practices that have been adopted to integrate software testing into programming education. To do so, we further analyzed a subgroup of 195 papers that returned in our systematic mapping on this research domain. We selected papers describing empirical studies (e.g. survey, qualitative studies, experiments, case studies and experience reports), since this kind of study involves applying a given teaching practice in order to collect evidence or report the observed experience. Overall, our results shed light on how the integration of software testing has been done in different classroom contexts of programming education. We discuss the practices in terms of their application context (i.e. the course), how testing was introduced in theory and practice, and the adopted support tools. We also discuss an important gap regarding the lack of instruction in testing concepts, even when students are responsible to write their own tests.","2377-634X","978-1-7281-8961-1","10.1109/FIE44824.2020.9274256","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9274256","Software Testing;Programming Fundamentals;Teaching Practices;Computer Science Education","Programming;Programming profession;Education;Software testing;Tools;Task analysis;Software engineering","computer science education;educational courses;program testing;teaching","teaching practices;software testing;programming education;introductory programming courses;undergraduate programs;teaching approaches;testing practices;students learning difficulties;programming paradigm;programming language;student programming performance;programming teaching","","2","","81","","4 Dec 2020","","","IEEE","IEEE Conferences"
"Approaches used to Verify and Validate a Software Testing Ontology as an Artifact","L. Olsina; G. Tebes; D. Peppino; P. Becker","UNLPam GIDIS_Web,School of Engineering,General Pico,La Pampa,Argentina; UNLPam GIDIS_Web,School of Engineering,General Pico,La Pampa,Argentina; UNLPam GIDIS_Web,School of Engineering,General Pico,La Pampa,Argentina; UNLPam GIDIS_Web,School of Engineering,General Pico,La Pampa,Argentina","2020 IEEE Congreso Bienal de Argentina (ARGENCON)","13 Aug 2021","2020","","","1","8","Verification and Validation (V&V) are undoubtedly two key aspects of the artifact construction process. V&V entails activities, methods, tools, and ultimately strategies for ensuring quality when developing artifacts. Software engineering production lines, stakeholders and researchers produce diverse artifacts. For example, researchers may build ontologies, which can be both conceptualized and implemented artifacts. Ontologies are playing a central role in many application domains in particular, as well as in software and knowledge engineering disciplines in general. To show the applicability of V&V approaches, this work considers a software testing ontology as an artifact. This was developed following the Design Science Research methodology in the context of a layered ontological architecture. This paper illustrates the V&V approaches used, involving activities and methods for static and dynamic testing, evaluation and assessment. It addresses V&V approaches for the ontology conceptualization, as well as a functional dynamic testing method for its implementation.","","978-1-7281-5957-7","10.1109/ARGENCON49523.2020.9505430","Universidad Nacional de La Pampa; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9505430","Verification and Validation (V&V);V&V Activities and Methods;Software Testing Ontology;Artifact","Software testing;Knowledge engineering;Design methodology;OWL;Production;Ontologies;Tools","ontologies (artificial intelligence);program testing;software engineering","software testing ontology;artifact construction process;developing artifacts;software engineering production lines;diverse artifacts;conceptualized implemented artifacts;application domains;knowledge engineering disciplines;design science research methodology;layered ontological architecture;ontology conceptualization;functional dynamic testing method","","","","20","","13 Aug 2021","","","IEEE","IEEE Conferences"
"Configuration management strategy for distributed and diverse software development environments","U. V. Gumaste; Ti-Chung R. Hsueh; A. A. Nocera; Yiu Kwan Wo","AT&T Bell Labs., Holmdel, NJ, USA; NA; NA; NA","Proceedings of the IEEE International Conference on Industrial Technology (ICIT'96)","6 Aug 2002","1996","","","42","46","This paper intends to provide an overview of management of software development environments having multiple operating systems and hardware platforms. The paper addresses issues related to system integration as well as independence while fulfilling the need of a seamless software development environment. The article examines the elements necessary to provide efficient software development, integration and test environments that supports distributed execution of software programs across different hardware platforms. The issues related to dissimilar operating systems and hardware platforms are also presented. Requirements for initial and future configuration management needs of such dissimilar environments are discussed.","","0-7803-3104-4","10.1109/ICIT.1996.601537","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=601537","","Environmental management;Software development management;Programming;Hardware;Computer architecture;Software performance;Operating systems;Software testing;Productivity;Technology management","configuration management;distributed processing;programming environments","configuration management strategy;distributed software development environments;diverse software development environments;software development environment management;multiple operating systems;hardware platforms;seamless software development environment;software integration environment;software test environment;distributed execution","","","1","3","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Contributions and Perspectives in Architectures of Software Testing Environments","E. Y. Nakagawa; J. C. Maldonado","Dept. of Comput. Syst., Univ. of Sao Paulo, Sao Carlos, Brazil; Dept. of Comput. Syst., Univ. of Sao Paulo, Sao Carlos, Brazil","2011 25th Brazilian Symposium on Software Engineering","3 Nov 2011","2011","","","66","71","Producing high quality software systems has been one of the most important software development concerns. In this perspective, Software Architecture and Software Testing are two important research areas that have contributed in that direction. The attention given to the software architecture has played a significant role in determining the success of software systems. Otherwise, software testing has been recognized as a fundamental activity for assuring the software quality; however, it is an expensive, error-prone, and time consuming activity. For this reason, a diversity of testing tools and environments has been developed; however, they have been almost always designed without an adequate attention to their evolution, maintenance, reuse, and mainly to their architectures. Thus, this paper presents our main contributions to systematize the development of testing tools and environments, aiming at improving their quality, reuse, and productivity. In particular, we have addressed architectures for software testing tools and environments and have also developed and made available testing tools. We also state perspectives of research in this area, including open research issues that must be treated, considering the unquestionable relevance of testing automation to the testing activity.","","978-1-4577-2187-8","10.1109/SBES.2011.42","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6065147","","Computer architecture;Software testing;Software;Software architecture;Context","program testing;software architecture;software quality;software tools","software testing environment architecture;high quality software systems;software development;software testing tools;testing automation;testing activity","","2","","48","","3 Nov 2011","","","IEEE","IEEE Conferences"
"An experimental framework for the evaluation of cooperative diversity","G. J. Bradford; J. N. Laneman","Department of Electrical Engineering, University of Notre Dame, Indiana 46556, USA; Department of Electrical Engineering, University of Notre Dame, Indiana 46556, USA","2009 43rd Annual Conference on Information Sciences and Systems","2 Jun 2009","2009","","","641","645","Cooperative diversity is the result of relaying among nodes to achieve space diversity in multipath environments that offer limited time and frequency diversity. Although there is now substantial literature covering specification and analysis of cooperative communication strategies based upon models of wireless environments, there is much less work addressing experiments with real-world radio hardware and propagation channels. This work describes the construction of a three node, experimental testbed based upon a network of software-defined radios for development and verification of cooperative protocols. Several decode-and-forward relay protocols have been implemented and evaluated in terms of their diversity gains as measured from experimental curves of bit-error rate versus average signal-to-noise ratio. In contrast to the few other implementation efforts reported, the experimental setup maintains the relative node geometry while moving the network to induce fading, and the experimental results exhibit diversity benefits.","","978-1-4244-2733-8","10.1109/CISS.2009.5054797","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5054797","","Relays;Protocols;Frequency diversity;Hardware;Software testing;Decoding;Diversity methods;Gain measurement;Bit error rate;Signal to noise ratio","channel coding;decoding;diversity reception;fading channels;multipath channels;protocols;radiowave propagation;software radio","cooperative diversity;experimental evaluation framework;multipath environment;wireless environment;radio hardware;propagation channel;software-defined radio;decode-and-forward relay protocol;fading channel","","27","","17","","2 Jun 2009","","","IEEE","IEEE Conferences"
"Syntax-Tree Similarity for Test-Case Derivability in Software Requirements","S. Masuda; T. Matsuodani; K. Tsuda","IBM Research,Chuou-ku, Tokyo,Japan; Debug Engineering Research Laboratory,Tama-shi, Tokyo,Japan; University of Tsukuba,Bunkyo-ku, Tokyo,Japan","2021 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","28 May 2021","2021","","","162","172","Software testing has been important for software engineering to contribute to developing high-quality software. Decision table testing is a general technique to derive test cases with information on conditions and actions from software requirements. Deriving conditions and actions from requirements is key for efficient decision table testing. This paper proposes and evaluates a syntax-tree similarity method for test-case derivability in software requirements. We define the syntax-tree similarity technique used in our method as selecting test-case-derivable sentences from requirements at pre-processing. The syntax tree is defined as divided into sub-trees that consist of a root to each leaf. The syntax-tree similarity technique calculates the similarity between each sentence in the requirements and test-case-derivable sentence. The method involves natural language processing to select test-case-derivable sentences from the requirements on the basis of syntax-tree similarity then determines conditions and actions through dependency and case analyses. After selecting requirements by syntax-tree similarity, our method derives conditions and actions from the requirements by the deriving rules we define. Experiments revealed that the F-measure of the accuracy of the derived conditions and actions increased 16% from that reported in prior work. The results from case studies further indicate the effectiveness of our method.","","978-1-6654-4456-9","10.1109/ICSTW52544.2021.00037","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9440190","derive test cases;syntax-tree similarity;software requirements","Software testing;Conferences;Prototypes;Manuals;Syntactics;Software;Natural language processing","formal specification;natural language processing;program testing;software engineering;software quality;trees (mathematics)","software requirements;syntax-tree similarity technique;test-case-derivable sentence;syntax tree;deriving rules;derived conditions;test-case derivability;software testing;software engineering;developing high-quality software;efficient decision table testing;syntax-tree similarity method","","","","47","","28 May 2021","","","IEEE","IEEE Conferences"
"On the role of diversity measures for multi-objective test case selection","A. De Lucia; M. Di Penta; R. Oliveto; A. Panichella","University of Salerno, via Ponte don Melillo, Fisciano (SA), 84084, Italy; University of Sannio, Palazzo ex Poste, Via Traiano, 82100 Benevento, Italy; University of Molise, Contrada Fonte Lappone, 86090 Pesche (IS), Italy; University of Salerno, via Ponte don Melillo, Fisciano (SA), 84084, Italy","2012 7th International Workshop on Automation of Software Test (AST)","2 Jul 2012","2012","","","145","151","Test case selection has been recently formulated as multi-objective optimization problem trying to satisfy conflicting goals, such as code coverage and computational cost. This paper introduces the concept of asymmetric distance preserving, useful to improve the diversity of non-dominated solutions produced by multi-objective Pareto efficient genetic algorithms, and proposes two techniques to achieve this objective. Results of an empirical study conducted over four programs from the SIR benchmark show how the proposed technique (i) obtains non-dominated solutions having a higher diversity than the previously proposed multi-objective Pareto genetic algorithms; and (ii) improves the convergence speed of the genetic algorithms.","","978-1-4673-1822-8","10.1109/IWAST.2012.6228983","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6228983","Search-based Software Testing;Test Case Selection;Niched Genetic Algorithms;Empirical Studies","Genetic algorithms;Optimization;Minimization;Testing;Convergence;Measurement;Search problems","convergence;genetic algorithms;Pareto optimisation;program testing","diversity measure;multiobjective test case selection;multiobjective optimization problem;conflicting goal satisfaction;code coverage;computational cost;asymmetric distance preserving;multiobjective Pareto efficient genetic algorithm;SIR benchmark;nondominated solution;convergence speed;software testing","","14","","20","","2 Jul 2012","","","IEEE","IEEE Conferences"
"Challenges in Regression Test Selection for End-to-End Testing of Microservice-based Software Systems","D. Elsner; D. Bertagnolli; A. Pretschner; R. Klaus","Technical University of Munich,Munich,Germany; Technical University of Munich,Munich,Germany; Technical University of Munich,Munich,Germany; T-Systems International,Munich,Germany","2022 IEEE/ACM International Conference on Automation of Software Test (AST)","17 Jun 2022","2022","","","1","5","Dynamic regression test selection (RTS) techniques aim to minimize testing efforts by selecting tests using per-test execution traces. However, most existing RTS techniques are not applicable to microservice-based, or, more generally, distributed systems, as the dynamic program analysis is typically limited to a single system. In this paper, we describe our distributed RTS approach, microRTS, which targets automated and manual end-to-end testing in microservice-based software systems. We employ microRTS in a case study on a set of 20 manual end-to-end test cases across 12 versions of the German COVID-19 contact tracing application, a modern microservice-based software system. The results indicate that initially microRTS selects all manual test cases for each version. Yet, through semi-automated filtering of test traces, we are able to effectively reduce the testing effort by 10&#x2013;50&#x0025;. In contrast with prior results on automated unit tests, we find method-level granularity of per-test execution traces to be more suitable than class-level for manual end-to-end testing. CCS CONCEPTS &#x2022; Software and its engineering ${\rightarrow}$ Software testing and debugging.","","978-1-4503-9286-0","","Ministry of Education; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9796458","Software testing;regression test selection;microservice architectures;end-to-end testing;manual testing","Software testing;Filtering;Instruments;Diversity reception;Microservice architectures;Manuals;Debugging","","","","","","33","","17 Jun 2022","","","IEEE","IEEE Conferences"
"A Theoretical and Empirical Study of Diversity-Aware Mutation Adequacy Criterion","D. Shin; S. Yoo; D. Bae","KAIST, Daejeon, Republic of Korea; KAIST, Daejeon, Republic of Korea; KAIST, Daejeon, Republic of Korea","IEEE Transactions on Software Engineering","14 Oct 2018","2018","44","10","914","931","Diversity has been widely studied in software testing as a guidance towards effective sampling of test inputs in the vast space of possible program behaviors. However, diversity has received relatively little attention in mutation testing. The traditional mutation adequacy criterion is a one-dimensional measure of the total number of killed mutants. We propose a novel, diversity-aware mutation adequacy criterion called distinguishing mutation adequacy criterion, which is fully satisfied when each of the considered mutants can be identified by the set of tests that kill it, thereby encouraging inclusion of more diverse range of tests. This paper presents the formal definition of the distinguishing mutation adequacy and its score. Subsequently, an empirical study investigates the relationship among distinguishing mutation score, fault detection capability, and test suite size. The results show that the distinguishing mutation adequacy criterion detects 1.33 times more unseen faults than the traditional mutation adequacy criterion, at the cost of a 1.56 times increase in test suite size, for adequate test suites that fully satisfies the criteria. The results show a better picture for inadequate test suites; on average, 8.63 times more unseen faults are detected at the cost of a 3.14 times increase in test suite size.","1939-3520","","10.1109/TSE.2017.2732347","Information & communications Technology Promotion (IITP); Korea government (MSIP)(grant numbers:R0126-17-1101); Software R&D for Model-based Analysis and Verification of Higher-order Large Complex System; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7994647","Mutation testing;test adequacy criteria;diversity","Fault detection;Software engineering;Software testing;Correlation;Indexes;Subspace constraints","fault diagnosis;program testing;software engineering","empirical study;diversity-aware mutation adequacy criterion;software testing;test inputs;mutation testing;distinguishing mutation score;distinguishing mutation adequacy criterion;adequate test suites;inadequate test suites;theoretical study;program behaviors;killed mutants;fault detection capability","","15","","58","IEEE","27 Jul 2017","","","IEEE","IEEE Journals"
"Implementation of cooperative communications using software defined radios","M. Knox; E. Erkip","Department of Electrical and Computer Engineering, Polytechnic Institute of New York University, Brooklyn, NY, USA; Department of Electrical and Computer Engineering, Polytechnic Institute of New York University, Brooklyn, NY, USA","2010 IEEE International Conference on Acoustics, Speech and Signal Processing","28 Jun 2010","2010","","","5618","5621","Cooperative communications leverages the spatial diversity available in a wireless network enabling multiple radio nodes work together to improve the overall system performance. When a destination receiver combines the signal from an originating source with the associated signals from relay nodes, significant improvements in the bit error rate performance can be achieved. This paper details the measured bit error rate performance of a three-node cooperative communication system operating in a software defined radio testbed. The measured performances of several types of cooperative physical layer protocols are compared to similar systems operating over a single wireless link. The measured results include cooperative systems operating with a maximum ratio combining technique and two cooperative coded systems using hard decision decoding.","2379-190X","978-1-4244-4295-9","10.1109/ICASSP.2010.5495252","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5495252","cooperative communications;cooperative coding;software defined radio;WARP;WARPLAB","Software radio;Bit error rate;Diversity reception;Wireless networks;System performance;Receivers;Relays;Software measurement;Software testing;System testing","cooperative systems;decoding;diversity reception;error statistics","cooperative communications;software defined radios;spatial diversity;wireless network;relay nodes;bit error rate;cooperative systems;maximum ratio;hard decision decoding","","5","","11","","28 Jun 2010","","","IEEE","IEEE Conferences"
"Covering arrays: Evaluating coverage and diversity in the presence of disallowed combinations","J. Morgan; R. Lekivetz; T. Donnelly","JMP Division, SAS Institute Incorporated, Cary, NC, USA; JMP Division, SAS Institute Incorporated, Cary, NC, USA; JMP Division, SAS Institute Incorporated, Cary, NC, USA","2017 IEEE 28th Annual Software Technology Conference (STC)","25 Dec 2017","2017","","","1","4","Test engineers are often faced with the challenge of selecting test cases that maximize the chance of discovering faults while working with a limited budget. Combinatorial testing is an effective test case selection strategy to address this challenge. The basic idea is to select test cases that ensure that all possible combinations of settings from two (or more) inputs are accounted for, regardless of which subset of two (or more) inputs are selected. Currently, combinatorial testing usually implies a covering array as the underlying mathematical construct. Yet, despite their demonstrated utility, practitioners sometimes encounter challenges that impede their use. For example, given a covering array with constraints on allowed combinations of settings for some subset of inputs, it is often unclear how to assess the coverage and diversity [2] properties of the resulting covering array.","","978-1-5386-1088-6","10.1109/STC.2017.8234455","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8234455","covering array;software testing;systems testing;disallowed combinations;forbidden configurations","Measurement;Synthetic aperture sonar;Software testing;System testing;Control systems;Face","program testing","combinatorial testing;disallowed combinations;effective test case selection strategy;covering array","","1","","5","","25 Dec 2017","","","IEEE","IEEE Conferences"
"Efficient and Effective Generation of Test Cases for Pedestrian Detection - Search-based Software Testing of Baidu Apollo in SVL","H. Ebadi; M. H. Moghadam; M. Borg; G. Gay; A. Fontes; K. Socha","Infotiv AB,Gothenburg,Sweden; RISE Research Institutes of Sweden,Västerås,Sweden; RISE Research Institutes of Sweden,Lund,Sweden; Chalmers and the University of Gothenburg,Gothenburg,Sweden; Chalmers and the University of Gothenburg,Gothenburg,Sweden; RISE Research Institutes of Sweden,Lund,Sweden","2021 IEEE International Conference on Artificial Intelligence Testing (AITest)","14 Oct 2021","2021","","","103","110","With the growing capabilities of autonomous vehicles, there is a higher demand for sophisticated and pragmatic quality assurance approaches for machine learning-enabled systems in the automotive AI context. The use of simulation-based prototyping platforms provides the possibility for early-stage testing, enabling inexpensive testing and the ability to capture critical corner-case test scenarios. Simulation-based testing properly complements conventional on-road testing. However, due to the large space of test input parameters in these systems, the efficient generation of effective test scenarios leading to the unveiling of failures is a challenge. This paper presents a study on testing pedestrian detection and emergency braking system of the Baidu Apollo autonomous driving platform within the SVL simulator. We propose an evolutionary automated test generation technique that generates failure-revealing scenarios for Apollo in the SVL environment. Our approach models the input space using a generic and flexible data structure and benefits a multi-criteria safety-based heuristic for the objective function targeted for optimization. This paper presents the results of our proposed test generation technique in the 2021 IEEE Autonomous Driving AI Test Challenge. In order to demonstrate the efficiency and effectiveness of our approach, we also report the results from a baseline random generation technique. Our evaluation shows that the proposed evolutionary test case generator is more effective at generating failure-revealing test cases and provides higher diversity between the generated failures than the random baseline.","","978-1-6654-3481-2","10.1109/AITEST52744.2021.00030","ECSEL Joint Undertaking(grant numbers:876852); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9564347","Search-Based Test Generation;Evolutionary Algorithm;Advanced Driver Assistance Systems;Pedestrian Detection;Automotive Simulators","Software testing;Quality assurance;Web and internet services;Software algorithms;Test pattern generators;Artificial intelligence;Autonomous vehicles","data structures;evolutionary computation;learning (artificial intelligence);program testing","software testing;growing capabilities;autonomous vehicles;higher demand;sophisticated quality assurance approaches;pragmatic quality assurance approaches;machine learning-enabled systems;automotive AI context;simulation-based;early-stage testing;inexpensive testing;critical corner-case test scenarios;on-road testing;test input parameters;effective test scenarios;testing pedestrian detection;Baidu Apollo autonomous driving platform;SVL simulator;evolutionary automated test generation technique;failure-revealing scenarios;SVL environment;approach models;flexible data structure;multicriteria safety-based;2021 IEEE Autonomous Driving AI Test Challenge;baseline random generation technique;evolutionary test case generator;failure-revealing test cases;generated failures","","1","","24","","14 Oct 2021","","","IEEE","IEEE Conferences"
"Research on an autonomous and controllable portable universal interface test platform","Y. Xu; B. Liu; X. Wang; H. Zhang; Z. Zhang","Jiangsu Automation Research Institute,Lianyungang,Jiangsu,China; Jiangsu Automation Research Institute,Lianyungang,Jiangsu,China; Jiangsu Automation Research Institute,Lianyungang,Jiangsu,China; Jiangsu Automation Research Institute,Lianyungang,Jiangsu,China; Jiangsu Automation Research Institute,Lianyungang,Jiangsu,China","2021 3rd International Conference on Industrial Artificial Intelligence (IAI)","30 Nov 2021","2021","","","1","5","Industrial software testing including software development and debugging depends on the external input interface. The development, debugging and adaptation of interface software simulation consumes a lot of time. The process of software evaluation and self-test lack a portable general software testing equipment suitable for the industrial field, in order to greatly improve the testing efficiency, test integrity and adequacy. Therefore, it is urgent for the general interface generation platform to be transformed into high performance such as hardware, distributed, hardware interface adaptation, test task load and high real-time. In this paper, the overall design framework of portable general software test equipment is carried out, which includes the design and software development of the execution host, the software transformation of general control host and other research contents. At the same time, a portable general software testing equipment for complex industrial system software and multiple interfaces is developed. This platform can satisfy the diversity of complex industrial software system interfaces and the real-time requirements of special systems. It is expected to further promote the development of interface testing automation.","","978-1-6654-3517-8","10.1109/IAI53119.2021.9619437","Nature; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9619437","","Software testing;Debugging;Tools;Software systems;Software;Real-time systems;Hardware","program debugging;program testing;software engineering;user interfaces","interface software simulation;software evaluation;self-test;portable general software testing equipment;testing efficiency;test integrity;general interface generation platform;hardware interface adaptation;test task load;portable general software test equipment;software transformation;complex industrial software system interfaces;interface testing automation;autonomous interface test platform;controllable portable universal interface test platform;industrial software testing;external input interface;debugging;software development","","","","10","IEEE","30 Nov 2021","","","IEEE","IEEE Conferences"
"Diversity-Aware Mutation Adequacy Criterion for Improving Fault Detection Capability","D. Shin; S. Yoo; D. -H. Bae","Sch. of Comput., KAIST, Daejeon, South Korea; Sch. of Comput., KAIST, Daejeon, South Korea; Sch. of Comput., KAIST, Daejeon, South Korea","2016 IEEE Ninth International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","4 Aug 2016","2016","","","122","131","Many existing testing techniques adopt diversity as an important criterion for the selection and prioritization of tests. However, mutation adequacy has been content with simply maximizing the number of mutants that have been killed. We propose a novel mutation adequacy criterion that considers the diversity in the relationship between tests and mutants, as well as whether mutants are killed. Intuitively, the proposed criterion is based on the notion that mutants can be distinguished by the sets of tests that kill them. A test suite is deemed adequate by our criterion if the test suite distinguishes all mutants in terms of their kill patterns. Our hypothesis is that, simply by using a stronger adequacy criterion, it is possible to improve fault detection capabilities of mutation-adequate test suites. The empirical evaluation selects tests for real world applications using the proposed mutation adequacy criterion to test our hypothesis. The results show that, for real world faults, test suites adequate to our criterion can increase the fault detection success rate by up to 76.8 percentage points compared to test suites adequate to the traditional criterion.","","978-1-5090-3674-5","10.1109/ICSTW.2016.37","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7528954","Mutation testing;adequacy criteria;diversity","Fault detection;Conferences;Software testing;Electronic mail;Pathology;Subspace constraints","fault diagnosis;fault tolerant computing;program testing","diversity-aware mutation adequacy criterion;fault detection capability;mutants;kill patterns;mutation-adequate test suites;fault detection success rate","","6","","29","","4 Aug 2016","","","IEEE","IEEE Conferences"
"Dynamic white-box software testing using a recursive hybrid evolutionary strategy/genetic algorithm","A. Panchapakesan; R. Abielmona; E. Petriu","School of EECS, University of Ottawa, Canada; Research & Engineering, Larus Technologies Corporation, Ottawa, Canada; School of EECS, University of Ottawa, Canada","2013 IEEE Congress on Evolutionary Computation","15 Jul 2013","2013","","","2525","2532","Software testing is an important and time consuming part of the software development cycle. While automated testing frameworks do help in reducing the amount of programmer time that testing requires, the onus is still upon the programmer to provide such a framework with the inputs on which the software must be tested. This requires static analysis of the source code, which is more effective when performed as a peer review exercise and is highly dependent on the skills of the programmers performing the analysis. Thus, it demands the allocation of precious time of highly skilled programmers. An algorithm that automatically generates inputs to satisfy test coverage criteria for the software being tested would therefore be valuable, as it would imply that the programmer no longer needs to analyze code to generate the relevant test cases. This paper explores a hybrid evolutionary strategy with an evolutionary algorithm to discover such test case synthesis, in an improvement over previous methods which overly focus their search without maintaining the diversity required to cover the entire search space efficiently.","1941-0026","978-1-4799-0454-9","10.1109/CEC.2013.6557873","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6557873","Software testing;black-box testing;white-box testing;static white-box testing;dynamic white-box testing;evolutionary algorithm;genetic algorithm;evolutionary strategy;control flow graph","Testing;Biological cells;Sociology;Statistics;Genetic algorithms;Software;Evolutionary computation","automatic test software;flow graphs;program diagnostics;program testing;search problems;source coding","dynamic white-box software testing;recursive hybrid evolutionary strategy;genetic algorithm;software development cycle;automated testing frameworks;source code;static analysis;peer review exercise;highly skilled programmers;evolutionary algorithm;search space","","1","","14","","15 Jul 2013","","","IEEE","IEEE Conferences"
"A Framework for Automated Software Testing on the Cloud","G. Savio de Oliveira; A. Duarte","Informatics Centre, Federal University of Paraiba, Joao Pessoa, Brazil; Informatics Centre, Federal University of Paraiba, Joao Pessoa, Brazil","2013 International Conference on Parallel and Distributed Computing, Applications and Technologies","22 Sep 2014","2013","","","344","349","This work presents the framework Cloud Testing, a solution to parallelize the execution of a test suite over a distributed cloud infrastructure. The use of a cloud as runtime environment for automated software testing provides a more efficient and effective solution when compared to traditional methods regarding the exploration of diversity and heterogeneity for testing coverage. The objective of this work is evaluate our solution regarding the performance gains achieved with the use of the framework showing that it is possible to improve the software testing process with very little configuration overhead and low costs.","2379-5352","978-1-4799-2419-6","10.1109/PDCAT.2013.61","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6904278","software testing;cloud computing","Software testing;Cloud computing;Standards;Hardware;Random access memory","cloud computing;program testing","automated software testing coverage;cloud computing;cloudtesting;distributed cloud infrastructure","","5","","17","","22 Sep 2014","","","IEEE","IEEE Conferences"
"Crowdsourced Test Report Prioritization Based on Text Classification","Y. Yang; X. Chen","School of Computer Science, Hangzhou Dianzi University.; School of Computer Science, Hangzhou Dianzi University. (e-mail: chenxin4391@hdu.edu.cn)","IEEE Access","","2021","PP","99","1","1","In crowdsourced testing, crowd workers from different places help developers conduct testing and submit test reports for the observed abnormal behaviors. Developers manually inspect each test report and make an initial decision for the potential bug. However, due to the poor quality, test reports are handled extremely slowly. Meanwhile, due to the limitation of resources, some test reports are not handled at all. Therefore, some researchers attempt to resolve the problem of test report prioritization and have proposed many methods. However, these methods do not consider the impact of duplicate test reports. In this paper, we focus on the problem of test report prioritization and present a new method named DivClass by combining a diversity strategy and a classification strategy. First, we leverage Natural Language Processing (NLP) techniques to preprocess crowdsourced test reports. Then, we build a similarity matrix by introducing an asymmetric similarity computation strategy. Finally, we combine the diversity strategy and the classification strategy to determine the inspection order of test reports. To validate the effectiveness of DivClass, experiments are conducted on five crowdsourced test report datasets. Experimental results show that DivClass achieves 0.8887 in terms of APFD (Average Percentage of Fault Detected) and improves the state-of-the-art technique DivRisk by 14.12% on average. The asymmetric similarity computation strategy can improve DivClass by 4.82% in terms of APFD on average. In addition, empirical results show that DivClass can greatly reduce the number of inspected test reports.","2169-3536","","10.1109/ACCESS.2021.3128726","National Natural Science Foundation of China(grant numbers:61902096); Science and Technology of Zhejiang Province(grant numbers:LY21F020020); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9617598","Crowdsourced testing;test report prioritization;text classification;diversity strategy;asymmetric similarity","Computer bugs;Diversity reception;Software;Inspection;Task analysis;Software testing;Smart phones","","","","","","","CCBY","16 Nov 2021","","","IEEE","IEEE Early Access Articles"
"Exploring Test Suite Diversification and Code Coverage in Multi-Objective Test Case Selection","D. Mondal; H. Hemmati; S. Durocher","Dept. of Comput. Sci., Univ. of Manitoba, Winnipeg, MB, Canada; Dept. of Comput. Sci., Univ. of Manitoba, Winnipeg, MB, Canada; Dept. of Comput. Sci., Univ. of Manitoba, Winnipeg, MB, Canada","2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST)","7 May 2015","2015","","","1","10","Test case selection is a classic testing technique to choose a subset of existing test cases for execution, due to the limited budget and tight deadlines. While `code coverage' is the state of practice among test case selection heuristics, recent literature has shown that `test case diversity' is also a very promising approach. In this paper, we first compare these two heuristics for test case selection in several real-world case studies (Apache Ant, Derby, JBoss, NanoXML and Math). The results show that neither of the two techniques completely dominates the other, but they can potentially be complementary. Therefore, we next propose a novel approach that maximizes both code coverage and diversity among the selected test cases using NSGA-II multi- objective optimization, and the results show a significant improvement in fault detection rate. Specifically, sometimes this novel approach detects up to 16\%(Ant), 10\%(JBoss), and 14\% (Math) more faults compared to either of coverage or diversity-based approaches, when the testing budget is less than 20\% of the entire test suite execution cost.","2159-4848","978-1-4799-7125-1","10.1109/ICST.2015.7102588","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7102588","","Optimization;Testing;Fault detection;Linear programming;Shape;Diversity reception;Hamming distance","genetic algorithms;program testing;software fault tolerance","test suite diversification;multiobjective test case selection;testing technique;code coverage;test case selection heuristics;test case diversity;Apache Ant;Derby;JBoss;NanoXML;Math;code diversity;NSGA-II multiobjective optimization;fault detection rate;testing budget;test suite execution cost;genetic algorithm","","34","","29","","7 May 2015","","","IEEE","IEEE Conferences"
"Initial results from the 12, 20, and 30 GHz OLYMPUS propagation experiment in Blacksburg, Virginia","W. L. Stutzman; P. W. Remaklus; T. Pratt; A. Safaai-Jazi; R. Nealy","Bradley Dept. of Electr. Eng., Virginia Polytech. Inst. & State Univ., Blacksburg, VA, USA; Bradley Dept. of Electr. Eng., Virginia Polytech. Inst. & State Univ., Blacksburg, VA, USA; Bradley Dept. of Electr. Eng., Virginia Polytech. Inst. & State Univ., Blacksburg, VA, USA; Bradley Dept. of Electr. Eng., Virginia Polytech. Inst. & State Univ., Blacksburg, VA, USA; Bradley Dept. of Electr. Eng., Virginia Polytech. Inst. & State Univ., Blacksburg, VA, USA","IEEE Antennas and Propagation Society International Symposium 1992 Digest","6 Aug 2002","1992","","","736","739 vol.2","The OLYMPUS satellite has frequency coherent propagation beacons at 12.5, 19.77, and 29.66 GHz. These beacons are visible from Blacksburg, at an elevation angle of 14 degrees . Five receivers were developed: one at each frequency plus a second portable terminal with 20 and 30 GHz receivers for short-baseline diversity measurements. This experiment not only provided valuable data over the 10 to 30 GHz frequency range, but has provided a test bed for hardware and software approaches for the future ACTS (Advanced Communications Technology Satellite) program at 20/30 GHz. The authors present initial results from analysis of early data that shows that radiometer-derived attenuation agrees with beacon-measured attenuation to the fractional decibel level for fading up to 10 dB. Small baseline diversity, as expected, offers no improvement to rain fading, but does for scintillation events. Simple uplink power control algorithms were developed.<<ETX>></ETX>","","0-7803-0730-5","10.1109/APS.1992.221827","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=221827","","Satellite broadcasting;Attenuation;Frequency diversity;Frequency measurement;Software testing;Hardware;Communications technology;Artificial satellites;Data analysis;Radiometry","diversity reception;fading;radiowave propagation;satellite relay systems;tropospheric electromagnetic wave propagation","radiowave propagation;diversity measurements;SHF;OLYMPUS satellite;frequency coherent propagation beacons;Blacksburg;attenuation;fading;uplink power control algorithms;12.5 GHz;19.77 GHz;29.66 GHz","","2","","","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Test Case Selection Method for Emergency Changes","F. d. Farzat","Postgrad. Inf. Syst. Program, UNIRIO, Rio de Janeiro, Brazil","2nd International Symposium on Search Based Software Engineering","11 Nov 2010","2010","","","31","35","Software testing is an expensive task that significantly contributes to the total cost of a software development project. Among the many strategies available to test a software project, the creation of automated test cases that can be enacted after building a release or resolving a defect is increasingly used in the industry. However, certain defects found in the system operation may block major business operations. These critical defects are sometimes resolved directly in the production environment under such a restricted deadline that there is not enough time to run the complete set of automated test cases upon the patched version of the software. Declining to run the test case suite allows a quicker release of the software to production, but also allows other defects to be introduced into the system. This paper presents a heuristic approach to select test cases that might support emergency changes aiming to maximize the coverage and diversity of the testing activity under a strict time constraint and given the priority of the features that were changed.","","978-1-4244-8341-9","10.1109/SSBSE.2010.13","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5635168","Software Testing;Genetic Algorithm;Time Constraint;Process development;Risk Management","Software;Testing;Optimization;History;Companies;Time factors;Industries","program testing;software engineering","test case selection method;emergency changes;software testing;software development project;test case suite","","2","","11","","11 Nov 2010","","","IEEE","IEEE Conferences"
"Collaborative Testing of Web Services","H. Zhu; Y. Zhang","Oxford Brookes University, Oxford; The National University of Defense Technology, Changsha","IEEE Transactions on Services Computing","1 Mar 2012","2012","5","1","116","130","Software testers are confronted with great challenges in testing Web Services (WS) especially when integrating to services owned by other vendors. They must deal with the diversity of implementation techniques used by the other services and to meet a wide range of test requirements. However, they are in lack of software artifacts, the means of control over test executions and observation on the internal behavior of the other services. An automated testing technique must be developed to be capable of testing on-the-fly nonintrusively and nondisruptively. Addressing these problems, this paper proposes a framework of collaborative testing in which test tasks are completed through the collaboration of various test services that are registered, discovered, and invoked at runtime using the ontology of software testing STOWS. The composition of test services is realized by using test brokers, which are also test services but specialized in the coordination of other test services. The ontology can be extended and updated through an ontology management service so that it can support a wide open range of test activities, methods, techniques, and types of software artifacts. The paper presents a prototype implementation of the framework in semantic WS and demonstrates the feasibility of the framework by running examples of building a testing tool as a test service, developing a service for test executions of a WS, and composing existing test services for more complicated testing tasks. Experimental evaluation of the framework has also demonstrated its scalability.","1939-1374","","10.1109/TSC.2010.54","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5674012","Software engineering;software testing;distributed/internet based software engineering tools and techniques;testing tools;ontology;web services;semantic web services;service composition.","Ontologies;Software;Semantics;Collaboration;Software testing;Insurance","groupware;program testing;Web services","collaborative testing;Web services;software testers;WS;test requirements;software artifacts;internal behavior;automated testing technique;STOWS;ontology management service","","34","","72","","23 Dec 2010","","","IEEE","IEEE Journals"
"Reports Aggregation of Crowdsourcing Test Based on Feature Fusion","L. Cai; N. Wang; M. Chen; J. Wang; J. Wang; J. Gong","Shanghai Key Laboratory of Computer Software Testing &#x0026; Evaluating, Shanghai Development Center of Computer Software Technology,Shanghai,China; Shanghai Key Laboratory of Computer Software Testing &#x0026; Evaluating, Shanghai Development Center of Computer Software Technology,Shanghai,China; Shanghai Key Laboratory of Computer Software Testing &#x0026; Evaluating, Shanghai Development Center of Computer Software Technology,Shanghai,China; Shanghai Key Laboratory of Computer Software Testing &#x0026; Evaluating, Shanghai Development Center of Computer Software Technology,Shanghai,China; Shanghai Key Laboratory of Computer Software Testing &#x0026; Evaluating, Shanghai Development Center of Computer Software Technology,Shanghai,China; Shanghai Key Laboratory of Computer Software Testing &#x0026; Evaluating, Shanghai Development Center of Computer Software Technology,Shanghai,China","2021 IEEE 21st International Conference on Software Quality, Reliability and Security Companion (QRS-C)","1 Apr 2022","2021","","","51","59","In recent years, a new testing method based on the concept of crowdsourcing has made great progress. Developers upload the project to the crowdsourcing test platform and recruit a large number of crowdsourcing workers for testing, so that the testing process has higher test adequacy, faster testing speed and lower testing cost. However, the test reports submitted after the test have serious problems such as large quantity and high similarity, resulting in the failure to achieve the expected results. Based on the method of feature fusion, this paper integrates the text description information, bug type information and screenshot information of crowdsourcing test reports, clusters crowdsourcing test reports through the calculation of similarity between reports, and finally achieves better results.","2693-9371","978-1-6654-7836-6","10.1109/QRS-C55045.2021.00018","National Key R&D Program of China(grant numbers:2018YFB1403400); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9742039","crowdsourcing testing;similarity calculation;feature fusion","Crowdsourcing;Costs;Conferences;Machine learning;Software quality;Natural language processing;Mathematical models","","","","","","32","IEEE","1 Apr 2022","","","IEEE","IEEE Conferences"
"How Effectively Does Metamorphic Testing Alleviate the Oracle Problem?","H. Liu; F. Kuo; D. Towey; T. Y. Chen","Australia-India Centre for Automation Software Engineering, RMIT University, Melbourne 3001 VIC, Australia; Faculty of Information and Communication Technologies, Swinburne University of Technology, Hawthorn 3122 VIC, Australia; Division of Computer Science, The University of Nottingham, Ningbo, China; Faculty of Information and Communication Technologies, Swinburne University of Technology, Hawthorn 3122 VIC, Australia","IEEE Transactions on Software Engineering","4 Mar 2014","2014","40","1","4","22","In software testing, something which can verify the correctness of test case execution results is called an oracle. The oracle problem occurs when either an oracle does not exist, or exists but is too expensive to be used. Metamorphic testing is a testing approach which uses metamorphic relations, properties of the software under test represented in the form of relations among inputs and outputs of multiple executions, to help verify the correctness of a program. This paper presents new empirical evidence to support this approach, which has been used to alleviate the oracle problem in various applications and to enhance several software analysis and testing techniques. It has been observed that identification of a sufficient number of appropriate metamorphic relations for testing, even by inexperienced testers, was possible with a very small amount of training. Furthermore, the cost-effectiveness of the approach could be enhanced through the use of more diverse metamorphic relations. The empirical studies presented in this paper clearly show that a small number of diverse metamorphic relations, even those identified in an ad hoc manner, had a similar fault-detection capability to a test oracle, and could thus effectively help alleviate the oracle problem.","1939-3520","","10.1109/TSE.2013.46","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6613484","Software testing;test oracle;oracle problem;metamorphic testing;metamorphic relation","Computer crashes;Software;Educational institutions;Software testing;Training;Benchmark testing","program diagnostics;program testing;software fault tolerance;software quality","metamorphic testing;oracle problem;software testing;metamorphic relations;software properties;program correctness;software analysis;fault-detection capability","","123","","42","IEEE","27 Sep 2013","","","IEEE","IEEE Journals"
"Evaluation and Analysis of Spectrum-Based Fault Localization with Modified Similarity Coefficients for Software Debugging","Y. -S. You; C. -Y. Huang; K. -L. Peng; C. -J. Hsu","Dept. of Comput. Sci., Nat. Tsinghua Univ., Hsinchu, Taiwan; Inst. of Inf. Syst. & Applic., Nat. Tsinghua Univ., Hsinchu, Taiwan; Inst. of Inf. Syst. & Applic., Nat. Tsinghua Univ., Hsinchu, Taiwan; Inst. of Inf. Syst. & Applic., Nat. Tsinghua Univ., Hsinchu, Taiwan","2013 IEEE 37th Annual Computer Software and Applications Conference","31 Oct 2013","2013","","","180","189","During the process of fault localization, the spectrum-based techniques are frequently used and widely studied since they can automatically and effectively localize the faults of software and be implemented easily. So far most of spectrum-based fault localization techniques have relied heavily on the use of similarity coefficients. However, we noticed that existing similarity coefficients for fault localization may lack measure(s) to properly reflect the relationship between failing and passing test cases. It also has to note that the failing test cases usually are expected to provide more information to the similarity coefficients than the passing test cases. In order to evaluate the importance of failing and passing test cases in the similarity coefficients, a number of modified similarity coefficients in fault localization are presented and discussed. The modified similarity coefficients which are assigned the weights of the failing and/or passing test cases will be studied and analyzed with the multi-coverage-combined techniques. Five open source programs and 75 faulty versions in total from Siemens suite, which have been widely used for software testing and comparison of fault localization techniques, were selected as experiment subjects. Detailed analysis of the results shows that assigning the weights of failing and passing test cases to the similarity coefficients would be able to localize the faults more effectively and accurately.","0730-3157","978-0-7695-4986-6","10.1109/COMPSAC.2013.32","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6649819","Fault Localization;Software Debugging;Software Testing;Similarity Coefficient","Computer bugs;Software testing;Fault diagnosis;Vectors;Software debugging","program debugging;program testing;software fault tolerance","spectrum-based fault localization technique;software debugging;modified similarity coefficients;multicoverage-combined techniques;software testing","","4","","39","","31 Oct 2013","","","IEEE","IEEE Conferences"
"Prioritization of Metamorphic Relations Based on Test Case Execution Properties","M. Srinivasan","Gianforte Sch. of Comput., Montana State Univ., Bozeman, MT, USA","2018 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW)","18 Nov 2018","2018","","","162","165","A test oracle is essential for software testing. In certain complex systems, it is hard to distinguish between correct and incorrect behavior. Metamorphic testing is one of the solution to solve the test oracle problem. In metamorphic testing, metamorphic relations (MRs) are derived based on the properties exhibited by the program under test (PUT). These MRs play a major role in the generation of test data for conducting MT. The effectiveness of MRs can be determined based on the ability to detect considerable faults for the given PUT. Many metamorphic relations with different fault finding capability can be used to test the PUT and it is important to identify and prioritize the MRs based on its fault finding effectiveness. In order to answer this challenge, we propose to prioritize the MRs based on the diversity in the execution path of the source and follow-up test cases of the MRs. We propose four metrics to capture different levels of diversity in the execution behavior of the test cases for each of the derived MRs. The total weight calculated for each of the MRs using the metrics is used to prioritize the MRs.","","978-1-5386-9443-5","10.1109/ISSREW.2018.000-5","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8539189","Metamorphic Testing, Metamorphic Relations, Test case diversity, MR Prioritization","Measurement;Complexity theory;Indexes;Correlation;Tools;Software testing","program testing;software fault tolerance","metamorphic relations;test case execution properties;software testing;metamorphic testing;test oracle problem;test data;fault finding effectiveness;fault finding capability;program under test;fault detection","","1","","13","","18 Nov 2018","","","IEEE","IEEE Conferences"
"Metamorphic relations to improve the test accuracy of Multi Precision Arithmetic software applications","C. Aruna; R. S. R. Prasad","Department of Computer Science and Engineering, KKR & KSR Institute of Technology and Sciences, Guntur, Andhra Pradesh, India; Department of CSE, Acharya Nagarjuna University, Guntur, Andhra Pradesh, India","2014 International Conference on Advances in Computing, Communications and Informatics (ICACCI)","1 Dec 2014","2014","","","2244","2248","Recent advances in computing technologies are increasing the expectations of high accuracy and reliability from sophisticated arithmetic programs. Multi Precision Arithmetic (MPA) plays a vital role in majority of scientific applications, where the accuracy levels are more considerable and even a small mistake may misguide the downstream experimental results. Normal testing strategies rely on test oracles to predict the expected output to compare with target output. Testing of MPA programs is a crucial work with normal testing strategies, due to the complexity of generating oracles to verify the correctness of test outputs. In this paper we propose a novel software testing technique called Metamorphic Testing (MT), to test the non-testable MPA programs with the help of Metamorphic Relations (MRs) to alleviate the oracle problem.MT uses the data diversity technique to generate the follow-up test cases based on the existed successful test cases, which are low cost, scalable, efficient and leads to ‘N-Version Programming’. Experimental results are showing that our approach is identifying the hidden errors and improving the testing accuracy by finding more mutants.","","978-1-4799-3080-7","10.1109/ICACCI.2014.6968586","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6968586","Software Testing;Metamorphic Testing;Metamorphic relations;Follow-up test cases;Multi Precision Arithmetic","Accuracy;Software;Software testing;Complexity theory;Programming;Standards","program testing;software quality;software reliability","software reliability;data diversity technique;nontestable MPA programs;oracles;N-version programming;metamorphic testing;sophisticated arithmetic programs;multiprecision arithmetic;software testing;metamorphic relations","","2","","19","","1 Dec 2014","","","IEEE","IEEE Conferences"
"PODS — A project on diverse software","P. G. Bishop; D. G. Esp; M. Barnes; P. Humphreys; G. Dahll; J. Lahti","Central Electricity Research Laboratories, UK Central Electricity Generating Board, Surrey KT22 7SE, England; Central Electricity Research Laboratories, UK Central Electricity Generating Board, Surrey KT22 7SE, England; UK Atomic Energy Authority; UK Atomic Energy Authority; Institute for Energy; Technical Research Center of Finland","IEEE Transactions on Software Engineering","26 Sep 2012","1986","SE-12","9","929","940","A review of the Project on Diverse Software (PODS), a collaborative software reliability research project, is presented. The purpose of the project was to determine the effect of a number of different software development techniques on software reliability. The main objectives were to evaluate the merits of using diverse software, evaluate the specification language X-SPEX, and compare the productivity and reliability associated with high-level and low-level languages. A secondary objective was to monitor the software development process, with particular reference to the creation and detection of software faults. To achieve these objectives, an experiment was performed which simulated a normal software development process to produce three diverse programs to the same requirement. The requirement was for a reactor over-power protection (trip) system. After careful independent development and testing, the three programs were tested against each other in a special test harness to locate residual faults. The conclusions drawn from this project are discussed.","1939-3520","","10.1109/TSE.1986.6313048","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6313048","Fault classification;n-version programming;PODS;programming languages;reactor protection;software diversity;software faults;software reliability;specification languages;X","Software;Testing;Inductors;Specification languages;Software reliability;Documentation;Quality assurance","software reliability;specification languages","diverse software;Project on Diverse Software;PODS;software reliability research project;software development techniques;software reliability;diverse software;specification language X-SPEX;software development process;software faults;reactor over-power protection","","63","","","","26 Sep 2012","","","IEEE","IEEE Journals"
"A software fault tolerance experiment for space applications","D. Simon; C. Hourtolle; H. Biondi; J. Bernelas; P. Duverneuil; S. Gallet; P. Vielcanet; S. De Viguerie; F. Gsell; J. N. Chelotti","Centre Nat. d'Etudes Spatiales, Toulouse, France; Centre Nat. d'Etudes Spatiales, Toulouse, France; Centre Nat. d'Etudes Spatiales, Toulouse, France; NA; NA; NA; NA; NA; NA; NA","[1990] Digest of Papers. Fault-Tolerant Computing: 20th International Symposium","6 Aug 2002","1990","","","28","35","The aim of the experiment described was to implement and assess fault-tolerant software within an industrial framework. Another significant aspect was to adapt the classical software engineering life cycle to this type of project. Two complementary techniques are considered: fault avoidance through the use of higher level language and strict development process; and fault tolerance by using techniques based on design diversity, such as N-version programming and recovery blocks, and exception handling. Starting from the specification of an existing spacecraft orbit and attitude control system, a 3-version software was developed, coded in Ada, and assessed in a fault-tolerant experimental testbed. The authors describe the experiment development and the main study results (on development efforts, observed diversity, and methodology aspects).<<ETX>></ETX>","","0-8186-2051-X","10.1109/FTCS.1990.89363","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=89363","","Fault tolerance;Application software;Computer industry;Software engineering;Space vehicles;Software systems;Fault tolerant systems;Software testing;System testing;Diversity methods","aerospace computing;fault tolerant computing;software engineering","software fault tolerance experiment;space applications;classical software engineering life cycle;fault avoidance;design diversity;N-version programming;recovery blocks;exception handling;spacecraft orbit;attitude control system;Ada;methodology aspects","","2","1","13","","6 Aug 2002","","","IEEE","IEEE Conferences"
"SBST Tool Competition 2022","A. Gambi; G. Jahangirova; V. Riccio; F. Zampetti","University of Passau,Germany; Software Institute - USI,Switzerland; Software Institute - USI,Switzerland; University of Sannio,Italy","2022 IEEE/ACM 15th International Workshop on Search-Based Software Testing (SBST)","4 Jul 2022","2022","","","25","32","We report on the organization, challenges, and results of the tenth edition of the Java Unit Testing Competition as well as the second edition of the Cyber-Physical Systems (CPS) Testing Competition. Java Unit Testing Competition. Seven tools, i.e., BBC, EvoSuite, Kex, Kex-Reflection, Randoop, UTBot, and UTBot-Mocks, were executed on a benchmark with 65 classes sampled from four open-source Java projects, for two time budgets: 30 and 120 seconds. CPS Testing Tool Competition. Six tools, i.e., AdaFrenetic, AmbieGen, FreneticV, GenRL, EvoMBT and WOGAN competed on testing two driving agents by generating simulation-based tests. We considered one configuration for each test subject and evaluated the tools&#x0027; effectiveness and efficiency as well as the failure diversity. This paper describes our methodology, the statistical analysis of the results together with the competing tools, and the challenges faced while running the competition experiments.","","978-1-4503-9318-8","10.1145/3526072.3527538","H2020(grant numbers:957254-COSMOS); ERC(grant numbers:787703); DFG(grant numbers:FR 2955/4-1); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9810771","Tool Competition;Software Testing;Test Case Generation;Unit Testing;Java;Cyber-Physical Systems;Autonomous Vehicles;Search Based Software Engineering","Software testing;Java;Statistical analysis;Conferences;Organizations;Cyber-physical systems;Benchmark testing","","","","","","41","","4 Jul 2022","","","IEEE","IEEE Conferences"
"Collision resolution based on pulse shape diversity","X. Liu; S. Oymak; A. P. Petropulu; K. R. Dandekar","Electrical and Computer Engineering Department, Drexel University, Philadelphia 19104, USA; Electrical and Computer Engineering Department, Drexel University, Philadelphia 19104, USA; Electrical and Computer Engineering Department, Drexel University, Philadelphia 19104, USA; Electrical and Computer Engineering Department, Drexel University, Philadelphia 19104, USA","2009 IEEE 10th Workshop on Signal Processing Advances in Wireless Communications","10 Jul 2009","2009","","","409","413","A two-user wireless uplink scenario is considered, in which the users transmit simultaneously over the same channel. In the networking literature the result of such transmission is referred to as collision. It has been recently shown that small user delays and carrier frequency offsets (CFO) between the users allow for blind collision resolution based on the measurements of a single receive antenna. This is achieved by oversampling the collision signal, and exploiting the information on the collided packets that is contained in the signal's polyphase components. In this paper, user pulse-shape diversity is investigated for separating collided users even when delays and CFOs are small. In particular, an iterative pulse shape design is proposed that enforces several desirable characteristics to each user's pulse shape function. The proposed approach is tested on a software defined radio testbed and also via simulations. Both simulations and testbed evaluation suggest that the proposed approach can be very successful in resolving the users under realistic signal-to-noise ratio scenarios. Resolving collisions can significantly improve throughput in wireless networks.","1948-3252","978-1-4244-3695-8","10.1109/SPAWC.2009.5161817","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5161817","collision resolution;pulse shape diversity;blind user separation;successive interference cancelation;software defined radio.","Pulse shaping methods;Shape;Signal resolution;Delay;Software testing;Antenna measurements;Frequency measurement;Receiving antennas;Software radio;Signal to noise ratio","diversity reception;iterative methods;signal sampling;wireless channels","blind collision resolution;iterative pulse shape diversity;two-user wireless uplink scenario;wireless channel;carrier frequency offset;collision signal oversampling;signal polyphase component","","3","","14","","10 Jul 2009","","","IEEE","IEEE Conferences"
"Cloud based mobile application testing","L. Murugesan; P. Balasubramanian","School of Computing Science and Engineering, VIT University, Chennai, India; School of Computing Science and Engineering, VIT University, Chennai, India","2014 IEEE/ACIS 13th International Conference on Computer and Information Science (ICIS)","29 Sep 2014","2014","","","287","289","The testing of a mobile application is a difficult task keeping in mind the diversity in mobile devices and the runtime environment. Also the need of resources to test a mobile application varies from mobile phones to tablet. At present there are tools which can simulate the mobile environment to test mobile applications. These stimulators simulate only the functionality of a particular operating system but not the processor cores, speed, memory, cache size of the mobile device. In order to overcome the above short comings we move to cloud testing. In cloud computing we can easily allocate the required resources using virtualization and also it is easy to scale up our resources anytime without affecting the entire system. The major advantage in cloud is that it is cost-effective. In this paper we define a cloud based mobile testing model which can test application for different mobile environments and platforms.","","978-1-4799-4860-4","10.1109/ICIS.2014.6912148","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6912148","Cloud Testing;Software Testing;Mobile Application Testing;Cloud Computing","Mobile communication;Mobile handsets;Cloud computing;Runtime environment;Computational modeling;Software testing","cloud computing;mobile computing;operating systems (computers);program testing;virtualisation","software testing;cloud computing;virtualization;operating system;tablet;mobile phones;runtime environment;mobile devices;cloud based mobile application testing","","11","","16","","29 Sep 2014","","","IEEE","IEEE Conferences"
"Test Case Reuse based on ESIM Model","X. Chen; J. Wang; S. Zhou; P. Xue; J. Jia","University of Chinese Academy of Sciences Technology and Engineering Center for Space Utilization,Chinese Academy of Sciences,Beijing,China; Chinese Academy of Sciences,Technology and Engineering Center for Space Utilization,Beijing,China; Chinese Academy of Sciences,Technology and Engineering Center for Space Utilization,Beijing,China; Chinese Academy of Sciences,Technology and Engineering Center for Space Utilization,Beijing,China; Chinese Academy of Sciences,Technology and Engineering Center for Space Utilization,Beijing,China","2021 8th International Conference on Dependable Systems and Their Applications (DSA)","1 Dec 2021","2021","","","700","705","Software testing is crucial to guarantee the reliability of software, and test case plays an important role in software testing. Test cases are mainly written by testers, which not only consumes a lot of time, but the quality of test cases depends heavily on the designer’s technical capability. Test case reuse technology can reuse historically executed test cases, which are written by experts and stored in the knowledge base. Different from the test case reuse based on modeling and other methods, we propose a test case reuse technology based on the similarity of requirements documents, and use the model ESIM (Enhanced Sequential Inference Model), which performs well in the field of text matching. when employing this method, testers do not have to possess rich experiences and high-level expertise, in this way, the issue of the stability of design quality caused by difference of designer’s technical capability is solved.","2767-6684","978-1-6654-4391-3","10.1109/DSA52907.2021.00101","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9623005","software test;test case reuse;text similarity;NLP","Software testing;Knowledge based systems;Software;Stability analysis;Software reliability;Indexes","program testing;software reusability","software testing;test case reuse technology;Enhanced Sequential Inference Model;ESIM model","","","","16","IEEE","1 Dec 2021","","","IEEE","IEEE Conferences"
"Mobile Application GUI Similarity Comparison Based on Perceptual Hash for Automated Robot Testing","J. Cheng; W. Wang","Xi'an Technological University,School of Computer Science and Engineering,Shaanxi,China,710021; Northwestern Polytechnical University,School of Software,Shaanxi,China,710072","2021 International Conference on Intelligent Computing, Automation and Applications (ICAA)","30 Dec 2021","2021","","","245","251","Due to the rapid growth of mobile applications, the requirements for software testing speed are getting higher and higher. Therefore, automated testing is gradually replacing inefficient manual testing methods. However, most of the existing mobile applications are not open source code, and testing open source mobile applications is time-consuming and inefficient. Therefore, we propose automated robot testing based on black box testing. Firstly, YOLOV3 algorithm is used to obtain the information of mobile application interface components. Then, the perceptual hashing algorithm is used to identify the isomorphic GUI of mobile application, and the nodes that are the isomorphic GUI after the jump are merged to improve the test efficiency by simplifying the model. The experimental results show that the method can identify the isomorphic GUI quickly and accurately, and can better simplify the interface model and improve the test efficiency.","","978-1-6654-3730-1","10.1109/ICAA53760.2021.00052","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9653505","","Software testing;Codes;Computational modeling;Software algorithms;Semantics;Manuals;Mobile applications","graphical user interfaces;mobile computing;program testing","mobile application GUI similarity comparison;perceptual hash;automated robot testing;software testing speed;automated testing;inefficient manual testing methods;existing mobile applications;open source code;open source mobile applications;black box testing;YOLOV3 algorithm;mobile application interface components;perceptual hashing algorithm;isomorphic GUI;test efficiency","","","","6","IEEE","30 Dec 2021","","","IEEE","IEEE Conferences"
"Using Program Data-State Diversity in Test Data Search","M. Alshraideh; L. Bottaci","The University Of Hull, UK; Dept. of Comput. Sci., Hull Univ.","Testing: Academic & Industrial Conference - Practice And Research Techniques (TAIC PART'06)","16 Oct 2006","2006","","","107","114","Search-based automatic software test data generation for structural testing depends on the instrumentation of the test goal to construct a many-valued function which is then optimised. The method encounters difficulty when the search is in a region in which the function is not able to discriminate between different candidate test cases because it returns a constant value. A typical example of this problem arises in the instrumentation of branch predicates that depend on the value of a boolean-valued (flag) variable. Existing transformation techniques can solve many cases of the problem but there are situations for which transformation techniques are inadequate. This paper presents a technique for directing the search when the function that instruments the test goal is not able to discriminate candidate test inputs. The new technique depends on introducing program data-state diversity as an additional search goal. The search is guided by a new evaluation (cost) function made up of two parts, one depends on the conventional instrumentation of the test goal, the other depends on the diversity of the data-states produced during execution of the program under test. The method is demonstrated for a number of example programs for which existing methods are inadequate.","","0-7695-2672-1","10.1109/TAIC-PART.2006.37","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1691676","","Automatic testing;Instruments;Cost function;Software testing;Computer science;Search methods;Genetic algorithms","data flow analysis;optimising compilers;program control structures;program testing;search problems","program data-state diversity;search-based automatic software test data generation;structural testing;many-valued function construction;branch predicates;Boolean-valued variable;program transformation technique","","1","","18","","16 Oct 2006","","","IEEE","IEEE Conferences"
"Assessment of Data Diversity Methods for Software Fault Tolerance Based on Mutation Analysis","G. Gallardo; J. May; J. C. Gallardo","University of Bristol, UK; University of Bristol, UK; Research Associate at the SSRC","Second Workshop on Mutation Analysis (Mutation 2006 - ISSRE Workshops 2006)","2 Apr 2007","2006","","","6","6","One of the main concerns in safety-critical software is to ensure sufficient reliability because proof of the absence of systematic failures has proved to be an unrealistic goal. fault-tolerance (FT) is one method for improving reliability claims. It is reasonable to assume that some software FT techniques offer more protection than others, but the relative effectiveness of different software FT schemes remains unclear. We present the principles of a method to assess the effectiveness of FT using mutation analysis. The aim of this approach is to observe the power of FT directly and use this empirical process to evolve more powerful forms of FT. We also investigate an approach to FT that integrates data diversity (DD) assertions and TA. This work is part of a longer term goal to use FT in quantitative safety arguments for safety critical systems.","","0-7695-2897-X","10.1109/MUTATION.2006.1","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4144725","","Diversity methods;Fault tolerance;Genetic mutations;Software safety;Redundancy;Software testing;Fault tolerant systems;Software systems;Failure analysis;System testing","safety-critical software;software fault tolerance;software reliability","data diversity methods;software fault tolerance;mutation analysis;safety-critical software;reliability","","","","17","","2 Apr 2007","","","IEEE","IEEE Conferences"
"Comparing and Combining File-based Selection and Similarity-based Prioritization towards Regression Test Orchestration","R. Greca; B. Miranda; M. Gligoric; A. Bertolino","Gran Sasso Science Institute, Federal University of Pernambuco, The University of Texas at Austin, ISTI-CNR Italy,Brazil,USA, Italy; Gran Sasso Science Institute, Federal University of Pernambuco, The University of Texas at Austin, ISTI-CNR Italy,Brazil,USA, Italy; Gran Sasso Science Institute, Federal University of Pernambuco, The University of Texas at Austin, ISTI-CNR Italy,Brazil,USA, Italy; Gran Sasso Science Institute, Federal University of Pernambuco, The University of Texas at Austin, ISTI-CNR Italy,Brazil,USA, Italy","2022 IEEE/ACM International Conference on Automation of Software Test (AST)","17 Jun 2022","2022","","","115","125","Test case selection (TCS) and test case prioritization (TCP) techniques can reduce time to detect the first test failure. Although these techniques have been extensively studied in combination and isolation, they have not been compared one against the other. In this paper, we perform an empirical study directly comparing TCS and TCP approaches, represented by the tools Ekstazi and FAST, respectively. Furthermore, we develop the first combination, named Fastazi, of file-based TCS and similarity-based TCP and evaluate its benefit and cost against each individual technique. We performed our experiments using 12 Java-based open-source projects. Our results show that, in the median case, the combined approach detects the first failure nearly two times faster than either Ekstazi alone (with random test ordering) or FAST alone (without TCS). Statistical analysis shows that the effectiveness of Fastazi is higher than that of Ekstazi, which in turn is higher than that of FAST. On the other hand, FAST adds the least overhead to testing time, while the difference between the additional time needed by Ekstazi and Fastazi is negligible. Fastazi can also improve failure detection in scenarios where the time available for testing is restricted. CCS CONCEPTS &#x2022; Software and its engineering &#x2192;Software testing and debugging.","","978-1-4503-9286-0","","National Science Foundation; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9796413","regression testing;test case selection;test case prioritization;test orchestration;Fastazi","Costs;Automation;Statistical analysis;Diversity reception;Debugging;Open source software;Testing","","","","","","37","","17 Jun 2022","","","IEEE","IEEE Conferences"
"Elimination by Linear Association: An Effective and Efficient Static Mirror Adaptive Random Testing","M. Omari; J. Chen; H. Ackah-Arthur; P. Kwaku Kudjo","School of Computer Science and Communication Engineering, Jiangsu University, Zhenjiang, China; School of Computer Science and Communication Engineering, Jiangsu University, Zhenjiang, China; School of Computer Science and Communication Engineering, Jiangsu University, Zhenjiang, China; School of Computer Science and Communication Engineering, Jiangsu University, Zhenjiang, China","IEEE Access","10 Jun 2019","2019","7","","71038","71060","Adaptive random testing (ART) is a software testing method which combines randomness with even distribution of test cases within the input domain of a program with the aim of improving the effectiveness of random testing (RT). It was established right from the onset that, ART is considerably less efficient compared to RT due to the overhead cost involved in filtering randomly generated test cases in order to achieve the even spread objective. Again, it has been observed that over-concentration on achieving better effectiveness at the expense of efficiency will make ART advantage over RT a superficial one. Besides, the ART is close to its theoretical bound in terms of effectiveness. Various algorithms have therefore emerged that seeks to minimize the efficiency deficit incurred by the ART. One of such strategies is mirror adaptive random testing (MART). Unfortunately, the MART's performance is generally unstable due to the lack of diversity in mirror generated test cases. The culprit has been identified as the mirroring functions used in place of complex ART computations. In this paper, we present elimination (E) by linear association (E-MART) as a solution to the problem of the MART that guarantees diversity in all dimension(s) of mirror test cases. By partitioning the source domain into multiple subdomains, we systematically isolate mirror partitions which are linearly associated with the source domains. The source domain is then iteratively partitioned whiles forgetting strategy is applied to select test cases. The simulations and experimental studies conducted indicate that the EMART has a more stable performance compared to the MART and compares favorably in terms of efficiency by reducing the quadratic time of the MART to linear.","2169-3536","","10.1109/ACCESS.2019.2919160","National Natural Science Foundation of China(grant numbers:U1836116,61502205,61872167); Graduate Research Innovation Project of Jiangsu Province(grant numbers:KYCX171807); Six Talent Peaks Project in Jiangsu Province(grant numbers:XYDXXJS-016); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8725470","Adaptive random testing;ART overhead challenge;software testing;mirror adaptive random testing","Subspace constraints;Mirrors;Software testing;Software;Partitioning algorithms;Power capacitors","program testing","linear association;software testing method;randomly generated test cases;ART advantage;efficiency deficit;MART;mirroring functions;mirror test cases;mirror partitions;ART computations;static mirror adaptive random testing","","3","","40","OAPA","29 May 2019","","","IEEE","IEEE Journals"
"Industrial Scale Passive Testing with T-EARS","D. Flemström; H. Jonsson; E. P. Enoiu; W. Afzal","Mälardalen University,Sweden; Mälardalen University,Bombardier Transportation AB,Sweden; Mälardalen University,Sweden; Mälardalen University,Sweden","2021 14th IEEE Conference on Software Testing, Verification and Validation (ICST)","24 May 2021","2021","","","351","361","Passive testing continuously observes the system or system execution logs without any interference or instrumentation to test diverse combinations of functions, resulting in a more thorough evaluation over time. However, reaching a working solution to passive testing is not without challenges. While there have been some efforts to extract information from system requirements to create passive test cases, to our knowledge, no such efforts are mature enough to be applied in a real, industrial safety-critical context. Our passive testing approach uses the Timed Easy Approach to Requirements Syntax (T-EARS) specification language and its accompanying tool-chain. This study reports challenges and solutions to introducing system-level passive testing for a vehicular safety-critical system through industrial data analysis, including 116 safety-related requirements. Our results show that passive testing using the T-EARS language and its tool-chain can be used for system-level testing in an industrial setting for 64% of the studied requirements. We identified several sources of false positive results and show how to tune test cases to reduce such false positives systematically. Finally, we show the requirement coverage achieved by a manual test session and that passive testing using T-EARS can find a set of injected faults that are considered hard to find with other test techniques.","2159-4848","978-1-7281-6836-4","10.1109/ICST49551.2021.00047","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9438550","software testing;passive testing;test case automation","Software testing;Data analysis;Instruments;Manuals;Interference;Syntactics;Software","data analysis;program testing;safety-critical software;software fault tolerance;specification languages","system requirements;industrial safety-critical context;vehicular safety-critical system;system-level testing;industrial scale passive testing;Timed Easy Approach to Requirements Syntax;T-EARS specification language;system-level passive testing","","","","26","","24 May 2021","","","IEEE","IEEE Conferences"
"IFRIT: Focused Testing through Deep Reinforcement Learning","A. Romdhana; M. Ceccato; A. Merlo; P. Tonella","University of Genoa Genoa,Italy Security &#x0026; Trust Unit, FBK-ICT Trento,DIBRIS,Italy; University of Verona,Verona,Italy; DIBRIS University of Genoa Genoa,Italy; Software Institute, Universit&#x00E0; della Svizzera italiana,Lugano,Switzerland","2022 IEEE Conference on Software Testing, Verification and Validation (ICST)","8 Jun 2022","2022","","","24","34","Software is constantly changing as developers add new features or make changes. This directly impacts the effectiveness of the test suite associated with that software, especially when the new modifications are in an area where no test case exists. This article addresses the issue of developing a high-quality test suite to repeatedly cover a given point in a program, with the ultimate goal of exposing faults affecting the given program point. Our approach, IFRIT, uses Deep Reinforcement Learning to generate diverse inputs while keeping a high level of reachability of the desired program point. IFRIT achieves better results than state-of-the-art and baseline tools, improving reachability, diversity and fault detection.","2159-4848","978-1-6654-6679-0","10.1109/ICST53961.2022.00013","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9787902","reinforcement learning;software testing;focused testing","Software testing;Fault detection;Conferences;Discrete Fourier transforms;Reinforcement learning;Software","deep learning (artificial intelligence);fault diagnosis;program diagnostics;program testing;reinforcement learning","IFRIT;fault detection;high-quality test suite;program point;deep reinforcement learning;focused testing;baseline tools","","","","39","IEEE","8 Jun 2022","","","IEEE","IEEE Conferences"
"Diversity of interaction in a quality assurance course","M. Ardis; C. Dugas","Dept. of Comput. Sci. & Software Eng., Rose-Hulman Inst. of Technol., Terre Haute, IN, USA; NA","Proceedings Frontiers in Education 35th Annual Conference","3 Apr 2006","2005","","","F1G","13","All software engineering courses face a daunting task: how to recreate within the classroom the environment of software engineering as it is practiced. There are three major difficulties to overcome: providing the cultural environment of professional software engineering, providing opportunities for learning by observation and imitation, and providing opportunities for constructive feedback from teammates. Each of these difficulties can be addressed, but some creativity may be required to solve them within the traditional classroom setting","2377-634X","0-7803-9077-6","10.1109/FIE.2005.1612028","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1612028","Quality assurance;situated learning;software engineering;usability testing;Vygotsky","Quality assurance;Software engineering;Software quality;Application software;Software testing;Automatic testing;System testing;Computer science;Software design;Software performance","educational courses;quality assurance;software quality","quality assurance course;software engineering courses;professional software engineering","","","","5","","3 Apr 2006","","","IEEE","IEEE Conferences"
"Fostering the Diversity of Exploratory Testing in Web Applications","J. Leveau; X. Blanc; L. Réveillère; J. Falleri; R. Rouvoy","Univ. Bordeaux, Bordeaux INP, CNRS, LaBRI,Talence,France,UMR5800, F-33400; Univ. Bordeaux, Bordeaux INP, CNRS, LaBRI,Talence,France,UMR5800, F-33400; Univ. Bordeaux, Bordeaux INP, CNRS, LaBRI,Talence,France,UMR5800, F-33400; Univ. Bordeaux, Bordeaux INP, CNRS, LaBRI,Talence,France,UMR5800, F-33400; Univ. Lille / Inria,France","2020 IEEE 13th International Conference on Software Testing, Validation and Verification (ICST)","5 Aug 2020","2020","","","164","174","Exploratory testing (ET) is a software testing approach that complements automated testing by leveraging business expertise. It has gained momentum over the last decades as it appeals testers to exploit their business knowledge to stress the system under test (SUT). Exploratory tests, unlike automated tests, are defined and executed on-the-fly by testers. Testers who perform exploratory tests may be biased by their past experience and therefore may miss anomalies or unusual interactions proposed by the SUT. This is even more complex in the context of web applications, which typically expose a huge number of interaction paths to their users. As testers of these applications cannot remember all the sequences of interactions they performed, they may fail to deeply explore the application scope. This paper therefore introduces a new approach to assist testers in widely exploring any web application. In particular, our approach monitors the online interactions performed by the testers to suggest in real-time the probabilities of performing next interactions. Looking at these probabilities, we claim that the testers who favour interactions that have a low probability (because they were rarely performed), will increase the diversity of their explorations. Our approach defines a prediction model, based on ${n}$-grams, that encodes the history of past interactions and that supports the estimation of the probabilities. Integrated within a web browser extension, it automatically and transparently injects feedback within the application itself. We conduct a controlled experiment and a qualitative study to assess our approach. Results show that it prevents testers to be trapped in already tested loops, and succeeds to assist them in performing deeper explorations of the SUT.","2159-4848","978-1-7281-5778-8","10.1109/ICST46399.2020.00026","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9159101","test;Exploratory test;n-gram;web applications","Predictive models;Computational modeling;Monitoring;Software testing;Buildings;Context modeling","","","","","","26","","5 Aug 2020","","","IEEE","IEEE Conferences"
"Literature survey of Ant Colony Optimization in software testing","B. Suri; S. Singhal","Comp Sc USIT, GGSIPU; IT JIMS, Rohini, GGSIPU","2012 CSI Sixth International Conference on Software Engineering (CONSEG)","10 Nov 2012","2012","","","1","7","Ant Colony Optimization (ACO) is a well known and rapidly evolving meta-heuristic technique. A large number of optimization problems have already taken advantage of the ACO technique while countless others are on their way. A copious amount of effort has also been put in by the researchers for applying ACO in solving various software testing problems. This paper presents a survey of twenty-one such studies, identified as relating to the use of ACO in diverse software testing concepts. To the best of our knowledge, no literature survey could be found published in the same context till date. Consequently, the twenty one studies have been rigorously analyzed to find some common parameters which can be grouped together or compared in order to provide a useful insight into the field.","","978-1-4673-2177-8","10.1109/CONSEG.2012.6349501","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6349501","","Software testing;Unified modeling language;Optimization;Software;Flow graphs;Data models","ant colony optimisation;program testing","literature survey;ant colony optimization;meta-heuristic technique;ACO technique;software testing problems","","10","","30","","10 Nov 2012","","","IEEE","IEEE Conferences"
"Increasing Diversity in Coverage Test Suites Using Model Checking","G. Fraser; F. Wotawa","Inst. for Software Technol., Graz Univ. of Technol., Graz, Austria; Inst. for Software Technol., Graz Univ. of Technol., Graz, Austria","2009 Ninth International Conference on Quality Software","15 Jan 2010","2009","","","211","218","Automated test case generation often results in test suites containing significant redundancy such as test cases that are duplicates, prefixes of other test cases, or cover the same test requirements. In this paper we consider the fact that items described by a coverage criterion can be covered in different ways. We introduce a technique where each created test case is guaranteed to cover a test requirement in a new way, even if it has previously been covered. This increases the diversity of how test objectives are satisfied, thus reducing the redundancy in test suites, improving their fault detection ability, and usually also decreasing the number of test cases generated. This approach is based in a scenario of specification based testing using model checkers as test case generation tools, and evaluation is performed on three different case study specifications.","2332-662X","978-1-4244-5913-1","10.1109/QSIC.2009.36","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5381459","test case generation;specification based testing;model checking;test coverage;test redundancy;test diversity","Logic testing;Automatic testing;Software testing;Redundancy;Fault detection;Software quality;Performance evaluation;Programming;Monitoring;Encoding","fault diagnosis;formal specification;program testing;program verification","coverage test suite diversity;model checking;automated test case generation;coverage criterion;test requirement;fault detection;specification based testing","","1","","21","","15 Jan 2010","","","IEEE","IEEE Conferences"
"AmbieGen tool at the SBST 2022 Tool Competition","D. Humeniuk; G. Antoniol; F. Khomh","Poly technique Montr&#x00E9;al,Montr&#x00E9;al,Canada; Poly technique Montr&#x00E9;al,Montr&#x00E9;al,Canada; Poly technique Montr&#x00E9;al,Montr&#x00E9;al,Canada","2022 IEEE/ACM 15th International Workshop on Search-Based Software Testing (SBST)","4 Jul 2022","2022","","","43","46","AmbieGen is a tool for generating test cases for cyber-physical systems (CPS). In the context of SBST 2022 CPS tool competition, it has been adapted to generating virtual roads to test a car lane keeping assist system. AmbieGen leverages a two objective NSGA-II algorithm to produce the test cases. It has achieved the highest final score, accounting for the test case efficiency, effectiveness and diversity in both testing configurations.","","978-1-4503-9318-8","10.1145/3526072.3527531","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9810692","test cases;virtual roads;competition;genetic algorithm","Software testing;Roads;Conferences;Software algorithms;Cyber-physical systems;Search problems;Test pattern generators","","","","","","7","","4 Jul 2022","","","IEEE","IEEE Conferences"
"Integration of Test Generation Into Simulation-Based Platforms: An Experience Report","L. V. Sartori; J. Guiochet; H. Waeselynck; A. A. B. Galvan; S. H&#x00E9;bert-Vernhes; M. Albert","University of Toulouse, LAAS-CNRS,Toulouse,France; University of Toulouse, LAAS-CNRS,Toulouse,France; University of Toulouse, LAAS-CNRS,Toulouse,France; University of Toulouse, LAAS-CNRS,Toulouse,France; Na&#x00EF;o Technologies,Toulouse,France; SICK AG,Waldkirch,Germany","2022 IEEE/ACM International Conference on Automation of Software Test (AST)","17 Jun 2022","2022","","","77","86","Field-testing is costly and time-consuming, hence, simulation-based testing is becoming more and more important to validate autonomous systems. Since autonomous systems can be deployed in diverse environments, a significant amount of diversified test cases has to be created. TAF (Testing Automation Framework) is a test generation tool we developed to serve this purpose. It produces the test cases from a data model that specifies the virtual environments of interest. This paper presents a practitioner&#x2019;s view of the integration of TAF into simulation-based test platforms, through two industrial case studies. The first one is for testing an agricultural robot developed by Na&#x00EF;o Technologies, and the second one for a static perception system by SICK AG that surveils a road crossing to support connected vehicles with tracking data in complex urban scenarios. We report on our experience in the design of the data models, as well as in the automation of the execution, logging, and analysis of the generated tests. We conclude with lessons learned. CCS CONCEPTS &#x2022; Software and its engineering &#x2192; Software testing and debugging.","","978-1-4503-9286-0","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9796390","software testing;automation;software engineering;testing framework;industrial case study;autonomous systems;test case generation;simulation;software-in-the-loop (SIL) simulation;autonomous robot;agricultural robot;test oracle;dynamic agents","Agricultural robots;Automation;Autonomous systems;Roads;Virtual environments;Software;Data models","","","","","","15","","17 Jun 2022","","","IEEE","IEEE Conferences"
"Generation of All-Paths Unit Test with Function Calls","P. Mouy; B. Marre; N. Williams; P. Le Gall","CEA/LIST, LSL, Gif-sur-Yvette; CEA/LIST, LSL, Gif-sur-Yvette; CEA/LIST, LSL, Gif-sur-Yvette; NA","2008 1st International Conference on Software Testing, Verification, and Validation","6 Jun 2008","2008","","","32","41","Structural testing is usually restricted to unit tests and based on some clear definition of source code coverage. In particular, the all-paths criterion, which requires at least one test-case per feasible path of the function under test, is recognised as offering a high level of software reliability. This paper deals with the difficulties of using structural unit testing to test functions which call other functions. To limit the resulting combinatorial explosion in the number of paths, we choose to abstract the called functions by their specification. We incorporate the functional information on the called functions within the structural information on the function under test, given as a control flow graph (CFG). This representation combining functional and structural descriptions may be viewed as an extension of the classic CFG and allows us to characterise test selection criteria ensuring the coverage of the source code of the function under test. Two new criteria will be proposed. The first criterion corresponds to the coverage of all the paths of this new representation, including all the paths arising from the functional description of the called functions. The second criterion covers all the feasible paths of the function under test only. We describe how we automate test-data generation with respect to such grey-box (combinations of black- box and white-box) test selection strategies, and we apply the resulting extension of our PathCrawler tool to examples coded in the C language.","2159-4848","978-0-7695-3127-4","10.1109/ICST.2008.35","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4539530","unit test;structural testing;all-paths unit test;automatic generation;constraint solving;unit test with function calls;testing C programs","Automatic testing;Software testing;Explosions;Software reliability;Flow graphs;Diversity reception;Embedded software;Linear approximation;Application software","formal specification;program control structures;program testing;software reliability;structured programming","all-paths unit test;function calls;all-paths criterion;software reliability;structural unit testing;control flow graph;test-data generation;grey-box test selection;PathCrawler;C language","","11","","23","","6 Jun 2008","","","IEEE","IEEE Conferences"
"An empirical study on reliability modeling for diverse software systems","Xia Cai; M. R. Lyu","Dept. of Comput. Sci. & Eng., Chinese Univ. of Hong Kong, Shatin, China; Dept. of Comput. Sci. & Eng., Chinese Univ. of Hong Kong, Shatin, China","15th International Symposium on Software Reliability Engineering","24 Jan 2005","2004","","","125","136","Reliability and fault correlation are two main concerns for design diversity, yet empirical data are limited in investigating these two. In previous work, we conducted a software project with real-world application for investigation on software testing and fault tolerance for design diversity. Mutants were generated by injecting one single real fault recorded in the software development phase to the final versions. In this paper, we perform more analysis and experiments on these mutants to evaluate and investigate the reliability features in diverse software systems. We apply our project data on two different reliability models and estimate the reliability bounds for evaluation purpose. We also parameterize fault correlations to predict the reliability of various combinations of versions, and compare three different fault-tolerant software architectures.","1071-9458","0-7695-2215-7","10.1109/ISSRE.2004.6","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1383112","","Software systems;Fault tolerance;Application software;Reliability engineering;Software testing;Aerospace electronics;Computer science;Data engineering;Design engineering;Programming","software reliability;software architecture","software reliability modeling;fault correlation;software testing;fault tolerance","","3","","21","","24 Jan 2005","","","IEEE","IEEE Conferences"
"Test Case Update Detection Using Graph Similarity of UML State Machine in Early Development Process","A. N. Ponco Bimantoro; S. Rochimah; S. Arifiani","Departement of Informatics Institut Teknologi Sepuluh Nopember,Surabaya,Indonesia; Departement of Informatics Institut Teknologi Sepuluh Nopember,Surabaya,Indonesia; Departement of Informatics Institut Teknologi Sepuluh Nopember,Surabaya,Indonesia","2021 8th International Conference on Information Technology, Computer and Electrical Engineering (ICITACEE)","3 Dec 2021","2021","","","143","148","Test case and its data test are part of software testing, which is a crucial phase of software development. Usually, testing is commonly done by explanatory testing and test case-based testing. However, both testing can be very costly and take most of the development time. Moreover, the test case data generated in the early step of development processes could be invalid as its designed algorithm or software might be revised. Therefore, in this study, we proposed a graph similarity of transformed UML State Machine Diagram to justify whether a feature's algorithm data test needs an update or not. We conducted the test on East Java's student admission portal namely PPDB 2017, 2018, and 2019. From the experiment conducted, we found that our proposed method shows promising results with high precision (up to 100<sup>%</sup>) and 95.6% recall. Thus, our proposed method can be very useful in the early step of development processes because it can save both time and cost since we can detect which features need a new test case data.","","978-1-6654-3998-5","10.1109/ICITACEE53184.2021.9617486","ITS; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9617486","Data test;graph similarity;state machine diagram;UML","Software testing;Electrical engineering;Java;Costs;Unified modeling language;Software algorithms;Feature extraction","finite state machines;formal specification;graph theory;program testing;Unified Modeling Language","test case update detection;graph similarity;software testing;software development;explanatory testing;test case-based testing;test case data;UML state machine diagram;feature algorithm data test;East Java student admission portal;PPDB 2017","","","","12","IEEE","3 Dec 2021","","","IEEE","IEEE Conferences"
"The Effectiveness of Software Diversity in a Large Population of Programs","M. J. P. van der Meulen; M. A. Revilla","Det Norske Veritas, Høvik; University of Valladolid, Valladolid","IEEE Transactions on Software Engineering","12 Dec 2008","2008","34","6","753","764","In this paper, we first present an exploratory analysis of the aspects of multiple-version software diversity using 36,123, programs written to the same specification. We do so within the framework of the theories of Eckhardt and Lee and Littlewood and Miller. We analyse programming faults made, explore failure regions and difficulty functions, show how effective 1-out-of-2 diversity is and how language diversity increases this effectiveness. The second part of the paper generalizes the findings about 1-out-of-2 diversity, and its special case language diversity by performing statistical analyses of 89,402 programs written to 60 specifications. Most observations in the exploratory analysis are confirmed; however, although the benefit of language diversity can be observed, its effectiveness appears to be low.","1939-3520","","10.1109/TSE.2008.70","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4604670","Programming Techniques;Protection mechanisms;Design concepts;Quality analysis and evaluation;Software and System Safety;Reliability;Reliability;Performance measures;Programming Techniques;Protection mechanisms;Design concepts;Quality analysis and evaluation;Software and System Safety;Reliability;Reliability;Performance measures","Statistical analysis;Software reliability;Failure analysis;Functional programming;Fault tolerance;Software testing;Java;Algorithm design and analysis;Reliability engineering","software fault tolerance;statistical analysis","software diversity;exploratory analysis;programming fault;software failure;language diversity;1-out-of-2 diversity;statistical analysis;software reliability","","22","","12","","22 Aug 2008","","","IEEE","IEEE Journals"
"Grey-box Fuzzing With Deep Reinforcement Learning And Process Trace Back","C. Chen","Anhui University,Institutes of Physical Science and Information Technology,Hefei,China","2021 4th International Conference on Advanced Electronic Materials, Computers and Software Engineering (AEMCSE)","19 Aug 2021","2021","","","1167","1171","Grey-box fuzzing, as a software testing technique, can find possible program bugs such as memory leaks, assertion failures and invalid input by generate random data then input it into a program, and monitor program exceptions. With program running, grey-box fuzzing collected the branch information in order to guide choosing next seeds. In this paper, we try to use the concept of Markov decision processes to formalize grey-box fuzzing as a deep reinforcement learning problem, and use process trace back(Intel Process Trace) to collect branch information in order to improve its efficiency toward binary programs. The experiments show this approach can outperform baseline random fuzzing and gain performance improvement.","","978-1-6654-1596-5","10.1109/AEMCSE51986.2021.00238","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9512987","component;fuzzing;deep reinforcement learning;Intel PT;software testing","Computers;Software algorithms;Diversity reception;Reinforcement learning;Fuzzing;Markov processes;Tools","deep learning (artificial intelligence);fuzzy set theory;Markov processes;program debugging;program diagnostics;program testing","Intel Process Trace;baseline random fuzzing;grey-box fuzzing;program bugs;program running;program exception monitoring;deep reinforcement learning;process trace back;Markov decision processes;software testing","","","","12","","19 Aug 2021","","","IEEE","IEEE Conferences"
"Weaving Context Sensitivity into Test Suite Construction","H. Wang; W. K. Chan","Dept. of Comput. Sci., Univ. of Hong Kong, Hong Kong, China; Dept. of Comput. Sci., City Univ. of Hong Kong, Hong Kong, China","2009 IEEE/ACM International Conference on Automated Software Engineering","18 Mar 2010","2009","","","610","614","Context-aware applications capture environmental changes as contexts and self-adapt their behaviors dynamically. Existing testing research has not explored context evolutions or their patterns inherent to individual test cases when constructing test suites. We propose the notation of context diversity as a metric to measure how many changes in contextual values of individual test cases. In this paper, we discuss how this notion can be incorporated in a test case generation process by pairing it with coverage-based test data selection criteria.","1938-4300","978-1-4244-5259-0","10.1109/ASE.2009.79","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5431725","context diversity;software testing;context-aware programe","Weaving;Software testing;Computer science;Application software;Software engineering;Automatic testing;Middleware;Physics computing;Working environment noise;Programming profession","program testing;ubiquitous computing","context sensitivity weaving;test suite construction;context-aware applications;context diversity;test case generation process;coverage-based test data selection criteria","","12","","15","","18 Mar 2010","","","IEEE","IEEE Conferences"
"Wireless field trial results of a high hopping rate FHSS-FSK testbed","D. Cabric; A. M. Eltawil; H. Zou; S. Mohan; B. Daneshrad","Electr. Eng. & Comput. Sci. Dept., Univ. of California, Berkeley, CA, USA; NA; NA; NA; NA","IEEE Journal on Selected Areas in Communications","2 May 2005","2005","23","5","1113","1122","This paper presents a complete study and characterization of a real-time frequency-hopped, frequency shift-keyed testbed capable of transmitting data at 160 kb/s, with hopping rates of up to 80 Khops/s operating in the 900 MHz band. The system provides the highest hopping rate reported to date and sets a new trend for FHSS communications with superior low probability of interception/detection and anti-jamming (LPI/LPD/AJ) capabilities. The architecture features a direct digital frequency synthesizer to enable high-rate hopping, and a frequency correlator-based demodulator, plus all digital timing and frequency recovery algorithms to minimize complexity. Furthermore, single sideband modulation was used to achieve spectral efficiency. The testbed is software configured and provides the user with full control over the diversity combining techniques, symbol interleaving, packet structure, and acquisition protocols. A total of 5850 independent experiments were carried out under various receiver configurations and wireless environments. The results underscore the dramatic potential for a system that optimally combines high-rate hopping, interleaving, and equal gain combining to combat severe propagation conditions, including multipath fading and intentional jamming.","1558-0008","","10.1109/JSAC.2005.845437","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1425653","Direct digital frequency synthesizer (DDFS);diversity combining;equal gain combining (EGC);frequency hopping;frequency shift-keying","Frequency synthesizers;Diversity reception;Interleaved codes;Computer architecture;Spread spectrum communication;Demodulation;Timing;Software testing;Protocols;Fading","frequency shift keying;diversity reception;protocols;direct digital synthesis;correlation theory;data communication;probability;frequency hop communication;demodulators","wireless field trial;high hopping rate;FHSS-FSK testbed;real-time frequency-hop;frequency shift-keyed testbed;data transmission;interception probability;antijamming;DDFS;direct digital frequency synthesizer;frequency correlator-based demodulator;digital timing;frequency recovery algorithm;single sideband modulation;spectral efficiency;diversity combining technique;symbol interleave;acquisition protocol;EGC;equal gain combining;160 Kbit/s;900 MHz","","5","","16","IEEE","2 May 2005","","","IEEE","IEEE Journals"
"Frenetic at the SBST 2021 Tool Competition","E. Castellano; A. Cetinkaya; C. H. Thanh; S. Klikovits; X. Zhang; P. Arcaini","National Institute of Informatics,Tokyo,Japan; National Institute of Informatics,Tokyo,Japan; National Institute of Informatics,Tokyo,Japan; National Institute of Informatics,Tokyo,Japan; National Institute of Informatics,Tokyo,Japan; National Institute of Informatics,Tokyo,Japan","2021 IEEE/ACM 14th International Workshop on Search-Based Software Testing (SBST)","13 Jul 2021","2021","","","36","37","Frenetic is a genetic approach that leverages a curvature-based road representation. Given an autonomous driving agent, the goal of Frenetic is to generate roads where the agent fails to stay within its lane. In other words, Frenetic tries to minimize the “out of bound distance”, which is the distance between the car and either edge of the lane if the car is within the lane, and proceeds to negative values once the car drives off. This work resembles classic aspects of genetic algorithms such as mutations and crossover, but introduces some nuances aiming at improving diversity of the generated roads.","","978-1-6654-4571-9","10.1109/SBST52555.2021.00016","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9476234","","Software testing;Roads;Conferences;Tools;Drives;Genetics;Automobiles","automatic testing;driver information systems;genetic algorithms;Java;program testing;road traffic;road vehicles","SBST 2021 tool competition;Frenetic;genetic approach;curvature-based road representation;autonomous driving agent;lane;bound distance;car drives;genetic algorithms;generated roads","","3","","3","","13 Jul 2021","","","IEEE","IEEE Conferences"
"EvoMBT at the SBST 2022 Tool Competition","R. Ferdous; C. -k. Hung; F. Kifetew; D. Prandi; A. Susi","Fondazione Bruno Kessler,Italy; Fondazione Bruno Kessler,Italy; Fondazione Bruno Kessler,Italy; Fondazione Bruno Kessler,Italy; Fondazione Bruno Kessler,Italy","2022 IEEE/ACM 15th International Workshop on Search-Based Software Testing (SBST)","4 Jul 2022","2022","","","51","52","EvoMBT is a model-based test generator that uses search algorithms to generate tests from a given extended finite state machine (EFSM). In the context of Cyber-physical systems (CPS) testing, and in particular self-driving cars, we model a set of road configurations as an EFSM and use EvoMBT to generate different roads for testing the car. This report briefly introduces EvoMBT and summarizes its results in the Cyber-physical systems testing competition at SBST 2022. Overall the results achieved by EvoMBT are promising where effectiveness and efficiency scores are quite good while the scores related to diversity need improvement.","","978-1-4503-9318-8","10.1145/3526072.3527534","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9810734","search-based testing;model-based testing;cyber-physical systems;advanced driver assistance systems","Software testing;Roads;Conferences;Automata;Cyber-physical systems;Generators;Autonomous automobiles","","","","","","2","","4 Jul 2022","","","IEEE","IEEE Conferences"
"Measuring Effectiveness of Mutant Sets","R. Gopinath; A. Alipour; I. Ahmed; C. Jensen; A. Groce","Dept. of EECS, Oregon State Univ., Corvallis, OR, USA; Dept. of EECS, Oregon State Univ., Corvallis, OR, USA; Dept. of EECS, Oregon State Univ., Corvallis, OR, USA; Dept. of EECS, Oregon State Univ., Corvallis, OR, USA; Dept. of EECS, Oregon State Univ., Corvallis, OR, USA","2016 IEEE Ninth International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","4 Aug 2016","2016","","","132","141","Redundancy in mutants, where multiple mutants end up producing the same semantic variant of a program, is a major problem in mutation analysis. Hence, a measure of effectiveness that accounts for redundancy is an essential tool for evaluating mutation tools, new operators, and reduction techniques. Previous research suggests using the size of the disjoint mutant set as an effectiveness measure. We start from a simple premise: test suites need to be judged on both the number of unique variations in specifications they detect (as a variation measure), and also on how good they are at detecting hard-to-find faults (as a measure of thoroughness). Hence, any set of mutants should be judged by how well it supports these measurements. We show that the disjoint mutant set has two major inadequacies -- the single variant assumption and the large test suite assumption -- when used as a measure of effectiveness in variation. These stem from its reliance on minimal test suites. We show that when used to emulate hard to find bugs (as a measure of thoroughness), disjoint mutant set discards useful mutants. We propose two alternatives: one measures variation and is not vulnerable to either the single variant assumption or the large test suite assumption, the other measures thoroughness. We provide a benchmark of these measures using diverse tools.","","978-1-5090-3674-5","10.1109/ICSTW.2016.45","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7528955","Mutation Analysis;Software Testing;Empirical Analysis;Theoretical Analysis","Size measurement;Conferences;Software testing;Redundancy;Computer bugs;Runtime;Software measurement","program debugging;program testing;software quality","large-test suite assumption;single variant assumption;bugs;disjoint mutant set;mutation tools;mutation analysis","","13","","31","","4 Aug 2016","","","IEEE","IEEE Conferences"
"Evaluation and Comparison of Agent-Oriented Methodologies: A Software Engineering Viewpoint","K. Slhoub; M. Carvalho; F. Nembhard","College of Engineering and Sciences, Florida Institute of Technology, Melbourne, Florida, USA; College of Engineering and Sciences, Florida Institute of Technology, Melbourne, Florida, USA; College of Engineering and Sciences, Florida Institute of Technology, Melbourne, Florida, USA","2019 IEEE International Systems Conference (SysCon)","16 Sep 2019","2019","","","1","8","Numerous agent-oriented methodologies that offer a rich pool of resources to support developers of agent-based systems have been proposed. However, the use of existing methodologies in industrial settings is still limited due to the large volume of methodologies, diversity of covered scopes, ambiguity in concepts, and lack of maturity. This makes it difficult for agent technology practitioners to choose the appropriate methodology that best fits their given development context. To eliminate such agent-based development bottleneck, it is important to introduce suitable methods for evaluating, comparing, and classifying agent-oriented methodologies in order to leverage their usage among practitioners. Having systems to evaluate methodologies can effectively help developers better understand existing methodologies, realize their benefits, outline their pros and cons, and assist practitioners with selecting the best-fit methodology for a specific agent-based project. In response, this paper proposes a novel criteria-based evaluation that is influenced by software engineering practices to assess and compare agentoriented methodologies. The proposed evaluation is derived from the software engineering body of knowledge (SWEBOK) and provides a simplified method to assess the coverage degree of an agent-oriented methodology with respect to major software knowledge areas such as the requirements and testing phases. We demonstrate the applicability of the proposed evaluation by applying it to three agent-oriented methodologies (PASSI, MaSE, and Prometheus) in the software engineering requirements and testing phases.","2472-9647","978-1-5386-8396-5","10.1109/SYSCON.2019.8836962","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8836962","Agent-Oriented Methodologies;AgentOriented Software Engineering;Multi-Agent Systems;Software Requirements;Software Testing;SWEBOK;AOSE","Software engineering;Software;Knowledge engineering;Software testing;Tools;Diversity methods","multi-agent systems;object-oriented programming;program testing;project management;software agents;software development management;software engineering","agent-based systems;agent-based development bottleneck;agent-oriented methodologies;agent-based project;software engineering body of knowledge;SWEBOK;PASSI;MaSE;Prometheus;software engineering requirements;testing phases","","2","","39","","16 Sep 2019","","","IEEE","IEEE Conferences"
"DAC: Distributed Asynchronous Cooperation for Wireless Relay Networks","X. Zhang; K. G. Shin","Dept. of Electr. Eng. & Comput. Sci., Univ. of Michigan, Ann Arbor, MI, USA; Dept. of Electr. Eng. & Comput. Sci., Univ. of Michigan, Ann Arbor, MI, USA","2010 Proceedings IEEE INFOCOM","6 May 2010","2010","","","1","9","Cooperative relay is a communication paradigm that aims to realize the capacity of multi-antenna arrays in a distributed manner. However, the symbol-level synchronization requirement among distributed relays limits its use in practice. We propose to circumvent this barrier with a cross-layer protocol called Distributed Asynchronous Cooperation (DAC). With DAC, multiple relays can schedule concurrent transmissions with packet-level (hence coarse) synchronization. The receiver then extracts multiple versions of each relayed packet via a collision-resolution algorithm, thus realizing the diversity gain of cooperative communication. We demonstrate the feasibility of DAC by prototyping and testing it on the GNURadio/USRP software radio platform. To explore its relevance at the network level, we introduce a DAC-based MAC, and a generic approach to integrate the DAC MAC/PHY layer into a typical routing algorithm. Considering the use of DAC for multiple network flows, we analyze the fundamental tradeoff between the improvement in diversity gain and the reduction in multiplexing opportunities. DAC is shown to improve the throughput and delay performance of lossy networks with medium-level link quality. Our analytical results are also confirmed by network-level simulation in ns-2.","0743-166X","978-1-4244-5838-7","10.1109/INFCOM.2010.5461940","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5461940","","Relays;Diversity methods;Protocols;Receivers;Software prototyping;Software testing;Software radio;Physical layer;Routing;Throughput","access protocols;antenna arrays;diversity reception;radio receivers;software radio;telecommunication network routing;wireless channels","distributed asynchronous cooperation;wireless relay networks;cooperative relay;communication paradigm;multiantenna arrays;symbol-level synchronization;cross-layer protocol;packet-level synchronization;radio receiver;diversity gain;cooperative communication;GNURadio/USRP software radio platform;MAC protocol;DAC MAC/PHY layer;routing algorithm;medium-level link quality;ns-2 network-level simulation","","17","","25","","6 May 2010","","","IEEE","IEEE Conferences"
"A Preliminary Empirical Assessment of Similarity for Combinatorial Iteraction Testing of Software Product Lines","S. Fischer; R. E. Lopez-Herrejon; R. Ramler; A. Egyed","Johannes Kepler Univ. Linz, Linz, Austria; Johannes Kepler Univ. Linz, Linz, Austria; Software Competence Center, Hagenberg, Austria; Johannes Kepler Univ. Linz, Linz, Austria","2016 IEEE/ACM 9th International Workshop on Search-Based Software Testing (SBST)","9 Jan 2017","2016","","","15","18","Extensive work on Search-Based Software Testing for Software Product Lines has been published in the last few years. Salient among them is the use of similarity as a surrogate metric for t-wise coverage whenever higher strengths are needed or whenever the size of the test suites is infeasible because of technological or budget limitations. Though promising, this metric has not been assessed with real fault data. In this paper, we address this limitation by using Drupal, a widely used open source web content management system, as an industry-strength case study for which both variability information and fault data have been recently made available. Our preliminary assessment corroborates some of the previous findings but also raises issues on some assumptions and claims made. We hope our work encourages further empirical evaluations of Combinatorial Interaction Testing approaches for Software Product Lines.","","978-1-4503-4166-0","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7810700","Software Product Line;Combinatorial Interaction Testing;Product Similarity;Documented Faults;Empirical;Drupal","Testing;Computational modeling;Measurement;Fault detection;Software product lines;Data models;Feature extraction","program testing;search problems;software product lines","preliminary empirical assessment;combinatorial iteraction testing;software product lines;search-based software testing;Drupal;open source web content management system","","","","21","","9 Jan 2017","","","IEEE","IEEE Conferences"
"Identifying Similar Test Cases That Are Specified in Natural Language","M. Viggiato; D. Paas; C. Buzon; C. -P. Bezemer","Electrical and Computer Engineering, University of Alberta, 3158 Edmonton, Alberta, Canada; Game analytics, Prodigy Education, Toronto, Ontario, Canada; Engineering, Prodigy Education, Toronto, Ontario, Canada; Department of Electrical and Computer Engineering, University of Alberta, Edmonton, Alberta, Canada","IEEE Transactions on Software Engineering","","2022","PP","99","1","1","Software testing is still a manual process in many industries, despite the recent improvements in automated testing techniques. As a result, test cases (which consist of one or more test steps that need to be executed manually by the tester) are often specified in natural language by different employees and many redundant test cases might exist in the test suite. This increases the (already high) cost of test execution. Manually identifying similar test cases is a time-consuming and error-prone task. Therefore, in this paper, we propose an unsupervised approach to identify similar test cases. Our approach uses a combination of text embedding, text similarity and clustering techniques to identify similar test cases. We evaluate five different text embedding techniques, two text similarity metrics, and two clustering techniques to cluster similar test steps and three techniques to identify similar test cases from the test step clusters. Through an evaluation in an industrial setting, we showed that our approach achieves a high performance to cluster test steps (an F-score of 87.39\%) and identify similar test cases (an F-score of 83.47\%). Furthermore, a validation with developers indicates several different practical usages of our approach (such as identifying redundant test cases), which help to reduce the testing manual effort and time.","1939-3520","","10.1109/TSE.2022.3170272","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9763328","Software testing;Test case similarity;Clustering","Bit error rate;Natural languages;Testing;Task analysis;Manuals;Games;Codes","","","","","","","IEEE","26 Apr 2022","","","IEEE","IEEE Early Access Articles"
"A multinational case study on using diverse feedback types applied to introductory programming learning","D. S. Campos; A. J. Mendes; M. J. Marcelino; D. J. Ferreira; L. M. Alves","Center for Informatics and Systems, University of Coimbra, Coimbra, Portugal; Center for Informatics and Systems, University of Coimbra, Coimbra, Portugal; Center for Informatics and Systems, University of Coimbra, Coimbra, Portugal; Federal University of Goiás, Institute of Informatics, Goiânia, Brazil; Federal University of Goiás, Institute of Informatics, Goiânia, Brazil","2012 Frontiers in Education Conference Proceedings","18 Feb 2013","2012","","","1","6","Building written feedback, pedagogically sound, standardized and flexible enough to accommodate students who may be in different stages and learning curves is a complex and laborious task. In this paper, we describe a multinational case study involving diverse types of pedagogical feedback provided to Portuguese and Brazilian novice programming students. Programming errors, especially logical ones, can be used as a consistent metric for assessing learning. The research done looks for an innovative form to define content of several types of feedback. It also aims to create an efficient method for the discovery and mapping of students' logical programming errors. The results obtained so far using this approach are presented and analyzed.","2377-634X","978-1-4673-1352-0","10.1109/FIE.2012.6462412","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6462412","feedback;programming learning;logical errors;software testing;pedagogical rubric","Programming profession;Context;Software testing;Educational institutions;Complexity theory","computer aided instruction;computer science education;programming","multinational case study;diverse feedback types;introductory programming learning;written feedback;learning curves;laborious task;pedagogical feedback;Portuguese novice programming student;Brazilian novice programming student;student logical programming errors","","5","","15","","18 Feb 2013","","","IEEE","IEEE Conferences"
"Research on automatic generation of test data for multi-path coverage","M. Zhang; H. Li","Beijing Jiaotong University,School of Computer & Information Technology, Research Center for Network Management,Beijing,China; Beijing Jiaotong University,School of Computer and Information Technology, Research Center for Network Management,Beijing,China","2021 4th International Conference on Advanced Electronic Materials, Computers and Software Engineering (AEMCSE)","19 Aug 2021","2021","","","1185","1188","Software testing is a complex and time-consuming task, especially in the part of test case design. Therefore, test automation can greatly reduce the consumption of manpower and material resources. The main work of this paper is as follows:1This article designs a total path similarity for the target path group of the code from the perspective of multi-path oriented. And relying on this to generate test data that meets multiple target paths at one time, so as to reduce the number of iterations and time spent.2This article is inspired by the fitness function design of genetic algorithm, and designs a fitness evaluation method for multi-path and single-path.3This paper selects the Beetle Antennae Search algorithm from existing intelligent optimization algorithms. Because it does not require too much information, it performs very well in low- dimensional problems, and only needs one longhorn beetle in the search process, which greatly reduces the amount of calculation. And it is applied to the triangle classification problem program, and compared with the traditional genetic algorithm at the same time. The experimental results verify the correctness of the method, and the Beetle Antennae Search algorithm is more efficient than the genetic algorithm.","","978-1-6654-1596-5","10.1109/AEMCSE51986.2021.00242","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9513033","Multi-path;Beetle Antennae Search algorithm;path similarity;genetic algorithm","Software testing;Software algorithms;Sociology;Search problems;Classification algorithms;Statistics;Task analysis","genetic algorithms;optimisation;program testing;search problems","fitness evaluation method;single-path;Beetle Antennae Search algorithm;intelligent optimization algorithms;automatic generation;test data;multipath coverage;software testing;complex time-consuming task;test case design;test automation;manpower;material resources;main work;article designs;total path similarity;target path group;multiple target paths;fitness function design","","","","8","","19 Aug 2021","","","IEEE","IEEE Conferences"
"Downsized testers use diverse new technologies","J. Eidnes","Honeywell Inc., St. Louis Park, MN, USA","AUTOTESTCON 93","6 Aug 2002","1993","","","585","590","Several diverse new technologies were brought together during the development of two downsized testers for the F-16 Central Air Data Computer. The small size, clean design, and ease of operation produced as a result of this project illustrated the effectiveness of integrating these new technologies into a single system. This paper discusses changes in the test station development process that were brought about by these new technologies.<<ETX>></ETX>","","0-7803-0646-5","10.1109/AUTEST.1993.396304","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=396304","","Hardware;Instruments;Military computing;Central air conditioning;Software testing;Microcomputers;Aerospace electronics;Software systems;Buildings;System testing","aircraft computers;automatic test equipment;automatic test software","downsized testers;ATE;F-16 Central Air Data Computer;test station development","","","","1","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Space-time processing TDMA wireless testbed","H. Sampath; A. Paulraj","Inf. Syst. Lab., Stanford Univ., CA, USA; NA","1999 IEEE International Conference on Acoustics, Speech, and Signal Processing. Proceedings. ICASSP99 (Cat. No.99CH36258)","6 Aug 2002","1999","4","","2203","2206 vol.4","The paper describes the architecture of the Stanford University (SU) TDMA standalone testbed. The testbed was developed to evaluate space-time processing (STP) algorithms for diversity, co-channel interference (CCI) and intersymbol interference (ISI) mitigation, array gain and space-time coding. It operates in both uplink and downlink modes and uses a hybrid (combining a real and simulated) channel environment. A description of transmit and receive schemes implemented on the testbed is presented.","1520-6149","0-7803-5041-3","10.1109/ICASSP.1999.758373","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=758373","","Time division multiple access;Radio frequency;System testing;Radiofrequency interference;Software testing;Intersymbol interference;GSM;Computer architecture;Hardware;Transmitters","time division multiple access;space-time adaptive processing;diversity reception;cochannel interference;encoding;radio links;telecommunication channels;intersymbol interference;transmitting antennas;receiving antennas;interference suppression;parallel architectures","TDMA wireless testbed;space-time processing;Stanford University;space-time processing algorithms;diversity;co-channel interference;CCI;intersymbol interference;ISI;array gain;space-time coding;uplink;downlink;hybrid channel environment;simulated channel;real channel;transmit scheme;receive scheme;parallel DSP architecture","","2","1","9","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Augmenting test suites effectiveness by increasing output diversity","N. Alshahwan; M. Harman","CREST Centre, University College London Malet Place, London, WC1E 6BT, U.K.; CREST Centre, University College London Malet Place, London, WC1E 6BT, U.K.","2012 34th International Conference on Software Engineering (ICSE)","28 Jun 2012","2012","","","1345","1348","The uniqueness (or otherwise) of test outputs ought to have a bearing on test effectiveness, yet it has not previously been studied. In this paper we introduce a novel test suite adequacy criterion based on output uniqueness. We propose 4 definitions of output uniqueness with varying degrees of strictness. We present a preliminary evaluation for web application testing that confirms that output uniqueness enhances fault-finding effectiveness. The approach outperforms random augmentation in fault finding ability by an overall average of 280% in 5 medium sized, real world web applications.","1558-1225","978-1-4673-1067-3","10.1109/ICSE.2012.6227083","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6227083","SBSE;HTML output;Web applications","HTML;Testing;Educational institutions;Databases;Web pages;Instruments;Cloning","Internet;program testing;software fault tolerance","test suite adequacy criterion;augment test suites effectiveness;Web application testing;fault-finding effectiveness;real world Web applications;output diversity;software testing","","20","","9","","28 Jun 2012","","","IEEE","IEEE Conferences"
"Data diversity: an approach to software fault tolerance","P. E. Ammann; J. C. Knight","Dept. of Comput. Sci., Virginia Univ., Charlottesville, VA, USA; Dept. of Comput. Sci., Virginia Univ., Charlottesville, VA, USA","IEEE Transactions on Computers","6 Aug 2002","1988","37","4","418","425","Data diversity is described, and the results of a pilot study are presented. The regions of the input space that cause failure for certain experimental programs are discussed, and data reexpression, the way in which alternate input data sets can be obtained, is examined. A description is given of the retry block which is the data-diverse equivalent of the recovery block, and a model of the retry block, together with some empirical results is presented. N-copy programming which is the data-diverse equivalent of N-version programming is considered, and a simple model and some empirical results are also given.<<ETX>></ETX>","1557-9956","","10.1109/12.2185","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=2185","","Fault tolerance;System testing;Application software;Buildings;Computer applications;Software testing;Redundancy;Software algorithms;NASA;Computer science","fault tolerant computing","data diversity;software fault tolerance;data reexpression;retry block;N-copy programming;N-version programming","","220","6","12","","6 Aug 2002","","","IEEE","IEEE Journals"
"Adaptable Design for Root Cause Analysis of a Model-Based Software Testing Process","M. Nieminen; T. Räty","Digital Syst. & Services, VTT Tech. Res. Centre of Finland, Oulu, Finland; Digital Syst. & Services, VTT Tech. Res. Centre of Finland, Oulu, Finland","2015 12th International Conference on Information Technology - New Generations","1 Jun 2015","2015","","","379","384","Model-Based Testing (MBT) is a method for automating software testing and improving fault detection by using an abstracted model of the system under test to systematically generate and execute test cases. One of the main challenges in MBT is the efficient locating of fundamental causes of errors, which can be achieved using root cause analysis. As MBT is being applied to many diverse domains using various tools and tool chains, tool adaptability is an important factor to consider. We define the design for an automated Root Cause Analyzer (RCA) tool adaptable for different MBT testing scenarios and environments. In our RCA design, analysis is configured using rules for evaluating output data of other MBT components. We present an example of RCA application for a case study in mobile telecommunications testing to demonstrate the integration and adapting of our design into an existing tool chain. Within the case study, the RCA tool is successful in locating causes of errors, and is able to interface with MBT components and exploit their data in analysis. The research is based on the constructive method of the related publications and technologies and the results are derived by the implemented RCA tool.","","978-1-4799-8828-0","10.1109/ITNG.2015.67","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7113502","Model-Based Testing;Root Cause Analysis;Rule-Based Analysis;Rule Generation;Adaptability","Testing;Data models;Unified modeling language;Analytical models;Databases;XML;Adaptation models","fault diagnosis;program testing;software fault tolerance","adaptable design;root cause analysis;model-based software testing process;automating software testing;fault detection;abstracted model;tool chains;root cause analyzer tool;automated RCA tool;MBT testing scenarios;RCA design;mobile telecommunication testing","","1","","16","","1 Jun 2015","","","IEEE","IEEE Conferences"
"Fault Localization Based on Multi-level Similarity of Execution Traces","X. Wang; Q. Gu; X. Zhang; X. Chen; D. Chen","Dept. of Comput. Sci. & Technol., Nanjing Univ., Nanjing, China; Dept. of Comput. Sci. & Technol., Nanjing Univ., Nanjing, China; Dept. of Comput. Sci. & Technol., Nanjing Univ., Nanjing, China; Dept. of Comput. Sci. & Technol., Nanjing Univ., Nanjing, China; Dept. of Comput. Sci. & Technol., Nanjing Univ., Nanjing, China","2009 16th Asia-Pacific Software Engineering Conference","28 Dec 2009","2009","","","399","405","Since automated fault localization can improve the efficiency of both the testing and debugging process, it is an important technique for the development of reliable software. This paper proposes a novel fault localization approach based on multi-level similarity of execution traces, which is suitable for object-oriented software. It selects useful test cases at class level and computes code suspiciousness at block level. We develop a tool that implements the approach, and conduct empirical studies to evaluate its effectiveness. The experimental results show that our approach has the potential to be effective in localizing faults for object-oriented software.","1530-1362","978-0-7695-3909-6","10.1109/APSEC.2009.45","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5358777","software testing;fault localization;object-oriented;execution trace;multi-level similarity","Software testing;Automatic testing;Programming profession;Software debugging;Software engineering;Laboratories;Computer science;Fault detection;Failure analysis;Information analysis","fault location;object-oriented programming;program diagnostics;program testing","multilevel similarity;execution traces;automated fault localization;debugging process;testing process;reliable software. development;object-oriented software;code suspiciousness","","2","","17","","28 Dec 2009","","","IEEE","IEEE Conferences"
"An empirical study on testing and fault tolerance for software reliability engineering","M. R. Lyu; Zubin Huang; S. K. S. Sze; Xia Cai","Dept. of Comput. Sci. & Eng., Chinese Univ. of Hong Kong, China; Dept. of Comput. Sci. & Eng., Chinese Univ. of Hong Kong, China; Dept. of Comput. Sci. & Eng., Chinese Univ. of Hong Kong, China; Dept. of Comput. Sci. & Eng., Chinese Univ. of Hong Kong, China","14th International Symposium on Software Reliability Engineering, 2003. ISSRE 2003.","8 Dec 2003","2003","","","119","130","Software testing and software fault tolerance are two major techniques for developing reliable software systems, yet limited empirical data are available in the literature to evaluate their effectiveness. We conducted a major experiment to engage 34 programming teams to independently develop multiple software versions for an industry-scale critical flight application, and collected faults detected in these program versions. To evaluate the effectiveness of software testing and software fault tolerance, mutants were created by injecting real faults occurred in the development stage. The nature, manifestation, detection, and correlation of these faults were carefully investigated. The results show that coverage testing is generally an effective means to detecting software faults, but the effectiveness of testing coverage is not equivalent to that of mutation coverage, which is a more truthful indicator of testing quality. We also found that exact faults found among versions are very limited. This result supports software fault tolerance by design diversity as a creditable approach for software reliability engineering. Finally we conducted domain analysis approach for test case generation, and concluded that it is a promising technique for software testing purpose.","1071-9458","0-7695-2007-3","10.1109/ISSRE.2003.1251036","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1251036","","Software testing;Fault tolerance;Software reliability;Reliability engineering;Fault detection;Aerospace engineering;Fault tolerant systems;Software systems;Computer industry;Application software","program testing;software fault tolerance;aerospace computing;software reliability;program diagnostics;fault diagnosis","software testing;software fault tolerance;software reliability engineering;software development;industry-scale critical flight application;fault detection;fault correlation;coverage testing;domain analysis;test case generation","","27","","36","","8 Dec 2003","","","IEEE","IEEE Conferences"
"Effectively Sampling Higher Order Mutants Using Causal Effect","S. Oh; S. Lee; S. Yoo","School of Computing KAIST,Daejeon,Republic of Korea; School of Computing KAIST,Daejeon,Republic of Korea; School of Computing KAIST,Daejeon,Republic of Korea","2021 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","28 May 2021","2021","","","19","24","Higher Order Mutation (HOM) has been proposed to avoid equivalent mutants and improve the scalability of mutation testing, but generating useful HOMs remain an expensive search problem on its own. We propose a new approach to generate Strongly Subsuming Higher Order Mutants (SSHOM) using a recently introduced Causal Program Dependence Analysis (CPDA). CPDA itself is based on program mutation, and provides quantitative estimation of how often a change of the value of a program element will cause a value change of another program element. Our SSHOM generation approach chooses pairs of program elements using heuristics based on CPDA analysis, performs First Order Mutation to the chosen pairs, and generates an HOM by combining two FOMs.","","978-1-6654-4456-9","10.1109/ICSTW52544.2021.00017","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9440150","higher order mutant;mutation testing;causal inference;causal program dependence analysis","Software testing;Measurement;Conferences;Scalability;Diversity reception;Estimation;Benchmark testing","program testing;search problems","mutation testing;expensive search problem;program mutation;program element;value change;SSHOM generation approach;CPDA analysis;HOM;causal effect;higher order mutation;equivalent mutants;higher order mutant sampling;first order mutation;causal program dependence analysis;strongly subsuming higher order mutants;quantitative estimation;heuristics","","1","","12","","28 May 2021","","","IEEE","IEEE Conferences"
"TauLiM: Test Data Augmentation of LiDAR Point Cloud by Metamorphic Relation","J. Lin; J. Liu; Q. Zhang; X. Zhang; C. Fang","Nanjing University,State Key Laboratory for Novel Software Technology,China; Nanjing University,State Key Laboratory for Novel Software Technology,China; Nanjing University,State Key Laboratory for Novel Software Technology,China; Nanjing University,State Key Laboratory for Novel Software Technology,China; Nanjing University,State Key Laboratory for Novel Software Technology,China","2022 IEEE/ACM 44th International Conference on Software Engineering: Companion Proceedings (ICSE-Companion)","13 Jun 2022","2022","","","217","221","With the rapid development of object detection in deep learning (DL), applications on LiDAR point clouds have received much attention, such as autonomous driving. To verify the robustness of object detection models by testing, large amounts of diversifted annotated LiDAR point clouds are required to be used as test data. However, considering the sparseness of objects, the diversity of the existing point cloud dataset is limited by the number and types of objects. Therefore, it is important to generate diversifted point clouds by test data augmentation. In this paper, we propose a tool for LiDAR point cloud via test data augmentation, named TauLiM. A well-designed metamorphic relation (MR) [1] is proposed to augment point clouds while maintaining their physical characteristic of LiDAR. TauLiM is composed of three modules, namely point cloud configuration, coordinate filtering, and object insertion. To evaluate our tool, we employ experiments to compare the ability of testing between the existing dataset and the augmented one. The result shows that TauLiM can effectively augment diversified test data and test the object detection model. The video of TauLiM is available at https://www.youtube.com/watch?v=9S6xpRbbhtQ and TauLiM can be used at http://1.13.193.98:2601/.","2574-1926","978-1-6654-9598-1","10.1109/ICSE-Companion55297.2022.9793740","National Natural Science Foundation of China; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9793740","Software and its engineering → Software testing and development environments;Computing methodologies → Machine learning;Information systems→World Wide Web;Networks→Cyber-physical networks; Cloud computing","Point cloud compression;Software testing;Deep learning;Laser radar;Filtering;Object detection;Data models","image filtering;object detection;optical radar","TauLiM;test data augmentation;LiDAR point cloud;metamorphic relation;object detection model;diversifted point clouds;point cloud configuration;diversified test data;deep learning;physical characteristic;object insertion;coordinate filtering","","","","16","IEEE","13 Jun 2022","","","IEEE","IEEE Conferences"
"SimCoTest: A Test Suite Generation Tool for Simulink/Stateflow Controllers","R. Matinnejad; S. Nejati; L. C. Briand; T. Bruckmann","SnT Centre, Univ. of Luxembourg, Luxembourg City, Luxembourg; SnT Centre, Univ. of Luxembourg, Luxembourg City, Luxembourg; SnT Centre, Univ. of Luxembourg, Luxembourg City, Luxembourg; Delphi Automotive Syst., Luxembourg, Luxembourg","2016 IEEE/ACM 38th International Conference on Software Engineering Companion (ICSE-C)","23 Mar 2017","2016","","","585","588","We present SimCoTest, a tool to generate small test suites with high fault revealing ability for Simulink/Stateflow controllers. SimCoTest uses meta-heuristic search to (1) maximize the likelihood of presence of specific failure patterns in output signals (failure-based test generation), and to (2) maximize diversity of output signal shapes (output diversity test generation). SimCoTest has been evaluated on industrial Simulink models and has been systematically compared with Simuilnk Design Verifier (SLDV), an alternative commercial Simulink testing tool. Our results show that the fault revealing ability of SimCoTest outperforms that of SLDV. Further, in contrast to SLDV, SimCoTest is applicable to Simulink/Stateflow models in their entirety. A video describing the main features of SimCoTest is available at: https://youtu.be/YnXgveiGXEA.","","978-1-4503-4205-6","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7883346","Simulink/Stateflow models;Software testing;Search-based software testing;Output diversity;Failure-based test generation;Simulink Design Verifier (SLDV)","Software packages;Mathematical model;Computational modeling;Testing;Data models;Adaptation models;Shape","optimisation;program testing;search problems;software tools","SimCoTest;test suite generation tool;Simulink/stateflow controllers;high fault revealing ability;metaheuristic search;specific failure pattern presence maximization;failure-based test generation;diversity maximization;industrial Simulink models;Simuilnk design verifier;SLDV;Simulink testing tool","","","","14","","23 Mar 2017","","","IEEE","IEEE Conferences"
"An Automated Framework for Cost Reduction of Mutation Testing Based on Program Similarity","G. F. Guarnieri; A. V. Pizzoleto; F. C. Ferrari","Federal University of S&#x00E3;o Carlos,Sorocaba,SP,Brazil; Federal University of S&#x00E3;o Carlos,S&#x00E3;o Carlos,SP,Brazil; Federal University of S&#x00E3;o Carlos,S&#x00E3;o Carlos,SP,Brazil","2022 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","8 Jun 2022","2022","","","179","188","This paper presents an implementation and assessment of a framework named SiMut. The framework was introduced in a previous paper with the objective of helping reducing the cost for testing a program based on groups of similar programs previously tested with mutation. The implementation presented in the paper handles Java programs and includes a set of variants that relate to three types of program abstraction (original source code, processed source code, and internal complexity metrics), three similarity calculation strategies (clustering, information diversity, and plagiarism), and one mutation cost reduction approach (inspired by the One-Op mutation technique). Our evaluation encompasses 20 variant combinations, also referred to as SiMut configurations, and 35 small Java programs. A cross-comparison involving the formed clusters and a comparison with randomly formed clusters points to configurations that tend to reach high effectiveness in foreseeing the best mutation operators for untested programs.","2159-4848","978-1-6654-9628-5","10.1109/ICSTW55395.2022.00041","Coordenação de Aperfeiçoamento de Pessoal de Nível Superior; Fundação de Amparo à Pesquisa do Estado de São Paulo; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9787949","mutation testing;cost reduction;program similarity","Software testing;Measurement;Java;Costs;Codes;Conferences;Plagiarism","","","","","","31","IEEE","8 Jun 2022","","","IEEE","IEEE Conferences"
"Automated Test Suite Generation for Time-Continuous Simulink Models","R. Matinnejad; S. Nejati; L. C. Briand; T. Bruckmann","SnT Centre, Univ. of Luxembourg, Luxembourg, Luxembourg; SnT Centre, Univ. of Luxembourg, Luxembourg, Luxembourg; SnT Centre, Univ. of Luxembourg, Luxembourg, Luxembourg; Delphi Automotive Syst., Luxembourg","2016 IEEE/ACM 38th International Conference on Software Engineering (ICSE)","3 Apr 2017","2016","","","595","606","All engineering disciplines are founded and rely on models, although they may differ on purposes and usages of modeling. Interdisciplinary domains such as Cyber Physical Systems (CPSs) seek approaches that incorporate different modeling needs and usages. Specifically, the Simulink modeling platform greatly appeals to CPS engineers due to its seamless support for simulation and code generation. In this paper, we propose a test generation approach that is applicable to Simulink models built for both purposes of simulation and code generation. We define test inputs and outputs as signals that capture evolution of values over time. Our test generation approach is implemented as a meta-heuristic search algorithm and is guided to produce test outputs with diverse shapes according to our proposed notion of diversity. Our evaluation, performed on industrial and public domain models, demonstrates that: (1) In contrast to the existing tools for testing Simulink models that are only applicable to a subset of code generation models, our approach is applicable to both code generation and simulation Simulink models. (2) Our new notion of diversity for output signals outperforms random baseline testing and an existing notion of signal diversity in revealing faults in Simulink models. (3) The fault revealing ability of our test generation approach outperforms that of the Simulink Design Verifier, the only testing toolbox for Simulink.","1558-1225","978-1-4503-3900-1","10.1145/2884781.2884797","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886937","Simulink models;Software testing;Time-continuous behaviors;Search-based software testing;Output diversity;Signal features;Structural coverage;Simulink Design Verifier (SLDV)","Software packages;Computational modeling;Fuels;Testing;Mathematical model;Shape","automatic testing;program compilers;program testing;search problems","automated test suite generation;time-continuous Simulink models;code generation;test inputs;test outputs;meta-heuristic search algorithm;industrial domain models;public domain models;simulation Simulink models;signal diversity;fault revealing ability","","18","","61","","3 Apr 2017","","","IEEE","IEEE Conferences"
"Clustering homogeneous XML documents using weighted similarities on XML attributes","N. K. Nagwani; A. Bhansali","Department of CS&E, NIT, Raipur, India; Department of IT, OPJIT, Raigarh, India","2010 IEEE 2nd International Advance Computing Conference (IACC)","1 Mar 2010","2010","","","369","372","XML (eXtensible Markup Language) have been adopted by number of software vendors today, it became the standard for data interchange over the web and is platform and application independent also. A XML document is consists of number of attributes like document data, structure and style sheet etc. Clustering is method of creating groups of similar objects. In this paper a weighted similarity measurement approach for detecting the similarity between the homogeneous XML documents is suggested. Using this similarity measurement a new clustering technique is also proposed. The method of calculating similarity of document's structure and styling is given by number of researchers, mostly which are based on tree edit distances. And for calculating the distance between document's contents there are number of text and other similarity techniques like cosine, jaccord, tf-idf etc. In this paper both of the similarity techniques are combined to propose a new distance measurement technique for calculating the distance between a pair of homogeneous XML documents. The proposed clustering model is implemened using open source technology java and is validated experimentally. Given a collection of XML documents distances between documents is calculated and stored in the java collections, and then these distances are used to cluster the XML documents.","","978-1-4244-4790-9","10.1109/IADCC.2010.5422926","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5422926","XML Clustering;Weighted Similarity;XML Documents Similarity","XML;Java;Clustering algorithms;Software standards;Application software;Weight measurement;Distance measurement;Software measurement;Software testing;Information retrieval","document handling;pattern clustering;XML","homogeneous XML documents;extensible markup language;weighted similarities;XML attributes;XML clustering;similarity measurement","","10","","13","","1 Mar 2010","","","IEEE","IEEE Conferences"
"Introducing a test suite similarity metric for event sequence-based test cases","P. A. Brooks; A. M. Memon","Dept. of Computer Science, University of Maryland, College Park, MD, 20742 USA; Dept. of Computer Science, University of Maryland, College Park, MD, 20742 USA","2009 IEEE International Conference on Software Maintenance","30 Oct 2009","2009","","","243","252","Most of today's event driven software (EDS) systems are tested using test cases that are carefully constructed as sequences of events; they test the execution of an event in the context of its preceding events. Because sizes of these test suites can be extremely large, researchers have developed techniques, such as reduction and minimization, to obtain test suites that are ldquosimilarrdquo to the original test suite, but smaller. Existing similarity metrics mostly use code coverage; they do not consider the contextual relationships between events. Consequently, reduction based on such metrics may eliminate desirable test cases. In this paper, we present a new parameterized metric, CONTeSSi(n) which uses the context of n preceding events in test cases to develop a new context-aware notion of test suite similarity for EDS. This metric is defined and evaluated by comparing four test suites for each of four open source applications. Our results show that CONT eSSi(n) is a better indicator of the similarity of EDS test suites than existing metrics.","1063-6773","978-1-4244-4897-5","10.1109/ICSM.2009.5306305","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5306305","","Software testing;System testing;Software systems;Graphical user interfaces;Information retrieval;Computer science;Educational institutions;Application software;Automatic testing;Fault detection","program testing;public domain software;software metrics","test suite similarity metric;event sequence-based test cases;event driven software systems;open source systems;software testing","","6","1","21","","30 Oct 2009","","","IEEE","IEEE Conferences"
"Optimal Release Time for Software Systems","M. Jhaa; R. Jha","Citicorp Services India Limited,Pune,India; FIS Solutions (India) Pvt. Ltd.,Pune,India","2020 6th International Conference on Advanced Computing and Communication Systems (ICACCS)","23 Apr 2020","2020","","","1155","1160","Testing the lifecycle is a challenge when it comes to maintaining a high layer of software accuracy obtaining the software's optimal release time. The enterprise urgency to understand when to update and break trial to improve the software's reliability, maintaining the software market growth and decrease the price of research. Companies usually put their product on the market sooner, in order to reach the market. Software testing is a mechanism by which corporations update, Troubleshoot or upgrade their software when used as a debugging method, it guarantees optimum product release, increasing software stability while compressing the economic expense of testing. Today, its journey on market is dynamic due to distributed nature and the diversity of the software making patch an intrinsic testing element. A Sew is a chunk of software to repair or support a device program for fixing or improving it. An important issue within the software advanced preparation to complete when to prevent testing and deliver the software to the users. In this paper, the cost optimal release action, which decreases entire normal cost of program, will be addressed. Scientists have been working in the field to reduce entire testing cost, but so far, accuracy has not been studied in the system for optimal time scheduling. In this paper, we discuss accuracy, which is considerable aspect of quality of program. We therefore suggest reliability development, Design software testing to make the software system stable and cost-effective to fix testing cost issues, product delivery time, and acceptable reliability levels. Using real-life failed software dataset, the numeric illustration was implemented.","2575-7288","978-1-7281-5197-7","10.1109/ICACCS48705.2020.9074453","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9074453","Testing;SRGM (Software reliability growth models);Reliability;Release failure data set;software cost","Software;Testing;Software reliability;Tools;Biological system modeling;Numerical models","program testing;scheduling;software reliability","software market growth;software stability;cost optimal release action;testing cost;optimal time scheduling;software testing;software system;software dataset;software systems;software accuracy;Sew","","","","17","","23 Apr 2020","","","IEEE","IEEE Conferences"
"Construction of a Cloud Scenario Knowledge Graph for Cloud Service Market","S. Zhang; X. Liu; B. Xu; L. Cai; Y. Hu","School of Computer Science and Technology, Donghua University & Shanghai Key Laboratory of Computer Software Testing and Evaluating, Shanghai Software Center,Shanghai,China; School of Computer Science and Technology, Donghua University,Shanghai,China; School of Computer Science and Technology, Donghua University,Shanghai,China; Shanghai Key Laboratory of Computer Software Testing and Evaluating, Shanghai Software Center,Shanghai,China; Shanghai Key Laboratory of Computer Software Testing and Evaluating, Shanghai Software Center,Shanghai,China","2020 IEEE 11th International Conference on Software Engineering and Service Science (ICSESS)","4 Nov 2020","2020","","","503","506","Fast-growing cloud computing technology makes cloud application scenarios more diversified and difficult to choose. A knowledge recommending system is an effective way to reach automatic recommendation services. In this paper, we constructed a cloud scenario knowledge graph (CSKG) for cloud service market to assist cloud knowledge management and provided a web service interface for recommended applications. First a cloud scenario domain ontology was defined based on product knowledge of cloud suppliers and experience of domain experts. Then the BiLSTM-CRF model and Rule-based method were combined to automatically extract structured knowledge from multi-source and heterogeneous texts, where we proposed a tagging schema combined with entity extraction and relation classifier. Finally, a cloud scenario knowledge graph was constructed and visualized, several application examples based on the CSKG service were suggested.","2327-0594","978-1-7281-6579-0","10.1109/ICSESS49938.2020.9237681","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9237681","domain knowledge graph;recommendation system;cloud service;cloud application scenario","Knowledge engineering;Cloud computing;Visualization;Web services;Tagging;Ontologies;Software engineering","cloud computing;graph theory;knowledge management;ontologies (artificial intelligence);pattern classification;recommender systems;recurrent neural nets;text analysis;Web services","cloud scenario knowledge graph;cloud service market;cloud application scenarios;knowledge recommending system;automatic recommendation services;cloud knowledge management;cloud scenario domain ontology;cloud suppliers;cloud computing;Web service interface;product knowledge;BiLSTM-CRF model;rule-based method;multisource text;heterogeneous texts;tagging schema;entity extraction;relation classifier;CSKG service","","","","8","","4 Nov 2020","","","IEEE","IEEE Conferences"
"Boundary Value Exploration for Software Analysis","F. Dobslaw; F. G. de Oliveira Neto; R. Feldt","Chalmers and the University of Gothenburg,Dept. of Computer Science and Engineering,Gothenburg,Sweden; Chalmers and the University of Gothenburg,Dept. of Computer Science and Engineering,Gothenburg,Sweden; Chalmers and the University of Gothenburg,Dept. of Computer Science and Engineering,Gothenburg,Sweden","2020 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","4 Aug 2020","2020","","","346","353","For software to be reliable and resilient, it is widely accepted that tests must be created and maintained alongside the software itself. One safeguard from vulnerabilities and failures in code is to ensure correct behavior on the boundaries between subdomains of the input space. So-called boundary value analysis (BVA) and boundary value testing (BVT) techniques aim to exercise those boundaries and increase test effectiveness. However, the concepts of BVA and BVT themselves are not generally well defined, and it is not clear how to identify relevant sub-domains, and thus the boundaries delineating them, given a specification. This has limited adoption and hindered automation. We clarify BVA and BVT and introduce Boundary Value Exploration (BVE) to describe techniques that support them by helping to detect and identify boundary inputs. Additionally, we propose two concrete BVE techniques based on information-theoretic distance functions: (i) an algorithm for boundary detection and (ii) the usage of software visualization to explore the behavior of the software under test and identify its boundary behavior. As an initial evaluation, we apply these techniques on a much used and well-tested date handling library. Our results reveal questionable behavior at boundaries highlighted by our techniques. In conclusion, we argue that the boundary value exploration that our techniques enable is a step towards automated boundary value analysis and testing, which can foster their wider use and improve test effectiveness and efficiency.","","978-1-7281-1075-2","10.1109/ICSTW50294.2020.00062","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9155629","boundary value analysis;boundary value testing;test diversity","Software;Tools;Software testing;Visualization;Measurement;Heating systems","boundary-value problems;data visualisation;program testing","software visualization;boundary behavior;boundary value exploration;automated boundary value analysis;test effectiveness;software analysis;boundary inputs;boundary detection","","","","28","","4 Aug 2020","","","IEEE","IEEE Conferences"
"Identification of Failure Regions for Programs With Numeric Inputs","R. Huang; W. Sun; T. Y. Chen; S. Ng; J. Chen","School of Computer Science and Communication Engineering, and Jiangsu Key Laboratory of Security Technology for Industrial Cyberspace, Jiangsu University, Zhenjiang, China; School of Computer Science and Communication Engineering, Jiangsu University, Zhenjiang, China; Department of Computer Science and Software Engineering, Swinburne University of Technology, Hawthorn, VIC, Australia; Department of Computer Science and Software Engineering, Swinburne University of Technology, Hawthorn, VIC, Australia; School of Computer Science and Communication Engineering, Jiangsu University, Zhenjiang, China","IEEE Transactions on Emerging Topics in Computational Intelligence","21 Jul 2021","2021","5","4","651","667","Failure region, where failure-causing inputs reside, has provided many insights to enhance testing effectiveness of many testing methods. Failure region may also provide some important information to support other processes such as software debugging. When a testing method detects a software failure, indicating that a failure-causing input is identified, the next important question is about how to identify the failure region based on this failure-causing input, i.e., Identification of Failure Regions (IFR). In this paper, we introduce a new IFR strategy, namely Search for Boundary (SB), to identify an approximate failure region of a numeric input domain. SB attempts to identify additional failure-causing inputs that are as close to the boundary of the failure region as possible. To support SB, we provide a basic procedure, and then propose two methods, namely Fixed-orientation Search for Boundary (FSB) and Diverse-orientation Search for Boundary (DSB). In addition, we implemented an automated experimentation platform to integrate these methods. In the experiments, we evaluated the proposed SB methods using a series of simulation studies and empirical studies with different types of failure regions. The results show that our methods can effectively identify a failure region, within the limited testing resources.","2471-285X","","10.1109/TETCI.2020.3013713","National Natural Science Foundation of China(grant numbers:61872167,61502205,U1836116); China Postdoctoral Science Foundation(grant numbers:2019T120396); Postgraduate Research & Practice Innovation Program of Jiangsu Province(grant numbers:KYCX19_1614); Senior Personnel Scientific Research Foundation; Jiangsu University(grant numbers:14JDG039); Young Backbone Teacher Cultivation Project of Jiangsu University; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9165789","Software debugging;software testing;failure-based testing;identification of failure region (IFR)","Shape;Software;Flyback transformers;Software testing;Subspace constraints;Sun","program debugging;program testing","failure-causing input;approximate failure region;failure region identification;software failure;testing method;fixed-orientation search for boundary;diverse-orientation search for boundary;automated experimentation platform;numeric inputs","","","","33","IEEE","12 Aug 2020","","","IEEE","IEEE Journals"
"Code Coverage Similarity Measurement Using Machine Learning for Test Cases Minimization","M. C. Saputra; T. Katayama","University of Miyazaki, 1-1 Gakuen-Kibanadai Nishi,Interdisciplinary Graduate School of Agriculture and Engineering,Miyazaki,Japan,889-2192; University of Miyazaki, 1-1 Gakuen-Kibanadai Nishi,Interdisciplinary Graduate School of Agriculture and Engineering,Miyazaki,Japan,889-2192","2020 IEEE 9th Global Conference on Consumer Electronics (GCCE)","21 Dec 2020","2020","","","287","291","Machine learning approach for minimizing the number of test cases on the test suite is an interesting research area on software testing. The research tries to minimize the number of test cases on the test suite by minimizing redundant test cases based on similarity classification. The Support Vector Machine, K-Nearest Neighbour, and Decision tree classify similar test cases by comparing the lines executed by test cases. The result has shown that the support vector machine is the highest score on accuracy and the lowest score on error rate comparing with K-Nearest Neighbour, and Decision tree. Minimize the redundant test cases increase the quality of the test cases, and reducing time on the testing process.","2378-8143","978-1-7281-9802-6","10.1109/GCCE50665.2020.9291990","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9291990","Similarity;Test Case;Support Vector Machine;K-Nearest Neighbour Decision Tree","Software testing;Machine learning algorithms;Error analysis;Support vector machine classification;Machine learning;Minimization;Decision trees","decision trees;nearest neighbour methods;pattern classification;program testing;support vector machines","redundant test cases;testing process;machine learning;test suite;software testing;support vector machine;code coverage similarity measurement;test cases minimization;similarity classification;k-nearest neighbour;decision tree","","","","16","","21 Dec 2020","","","IEEE","IEEE Conferences"
"Sensitivity of Two Coverage-Based Software Reliability Models to Variations in the Operational Profile","O. J. da Silva; A. N. Crespo; M. L. Chaim; M. Jino","Ospra Software, Campinas, Brazil; Renato Archer-CTI, Centro de Tecnol. da Informacao, Campinas, Brazil; Univ. of Sao Paulo-USP, São Paulo, Brazil; Univ. of Campinas - UNICAMP, Campinas, Brazil","2010 Fourth International Conference on Secure Software Integration and Reliability Improvement","8 Jul 2010","2010","","","113","120","Software in field use may be utilized by users with diverse profiles. The way software is used affects the reliability perceived by its users, that is, software reliability may not be the same for different operational profiles. Two software reliability growth models based on structural testing coverage were evaluated with respect to their sensitivity to variations in operational profile. An experiment was performed on a real program (SPACE) with real defects, submitted to three distinct operational profiles. Distinction among the operational profiles was assessed by applying the Kolmogorov-Smirnov test. Testing coverage was measured according to the following criteria: all-nodes, all-arcs, all-uses, and all-potential-uses. Reliability measured for each operational profile was compared to the reliabilities estimated by the two models, estimated reliabilities were obtained using the coverage for the four criteria. Results from the experiment show that the predictive ability of the two models is not affected by variations in the operational profile of the program.","","978-1-4244-7434-9","10.1109/SSIRI.2010.24","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5502848","software reliability;operational profile;software test;test coverage;testing criteria","Software reliability;Software testing;Production;Robustness;Predictive models;Software measurement;Application software","program testing;software reliability","coverage based software reliability model;structural testing coverage;Kolmogorov-Smirnov test;operational profiles;software reliability growth models","","4","","25","","8 Jul 2010","","","IEEE","IEEE Conferences"
"Ubiquitous Application Testing on Cloud","A. I. Khan; A. Al-Badi","Department of Information Systems, Sultan Qaboos University, Muscat, Oman; Department of Information Systems, Sultan Qaboos University, Muscat, Oman","2018 International Conference on Smart Computing and Electronic Enterprise (ICSCEE)","18 Nov 2018","2018","","","1","4","Nowadays desktop-based application are continuously evolving into pervasive or ubiquitous applications. There are millions of ubiquitous applications developed and used, but the testing of these applications are very complex tasks due to diversity in ubiquitous devices. Cloud computing is the future which has brought cost reduction, improved business, and processes in organizations through minimum management efforts. Software testing is a process to make sure the software is of acceptable quality. The traditional testing processes are incompatible with the changing technology and environment such as in ubiquitous applications. The availability of 5G network has reduced the data streaming dependence on the network. Thus under the presence of 5 G network cloud based testing can be successfully carried out for ubiquitous applications. Therefore, this research proposes a testing process for ubiquitous applications on cloud consisting of five steps. The testing on cloud would include stress testing, performance testing, compatibility testing, functional testing, web browser testing, load testing, and latency testing etc. The research mainly relate to ubiquitous application testing.","","978-1-5386-4838-4","10.1109/ICSCEE.2018.8538412","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8538412","cloud computing;cloud based testing;cloud testing;ubiquitous application;ubiquitous devices;pervasive application;mobile application","Cloud computing;Software;Business;Software testing;Browsers;Conferences","cloud computing;program testing;ubiquitous computing","ubiquitous applications;ubiquitous application testing;ubiquitous devices;software testing;desktop-based application;cloud computing;5G network","","2","","36","","18 Nov 2018","","","IEEE","IEEE Conferences"
"A survey on the practices of mobile application testing","I. Santos; J. C. C. Filho; S. R. S. Souza","Institute of Mathematics and Computer Science (ICMC), University of São Paulo (USP),São Carlos,Brazil; Institute of Mathematics and Computer Science (ICMC), University of São Paulo (USP),São Carlos,Brazil; Institute of Mathematics and Computer Science (ICMC), University of São Paulo (USP),São Carlos,Brazil","2020 XLVI Latin American Computing Conference (CLEI)","28 Jun 2021","2020","","","232","241","Context: Mobile devices have become increasingly popular, and mobile applications should guarantee a very high level of reliability and quality. Mobile application testing needs to consider several unique requirements that distinguish it from conventional software testing. Objective: Our study aims to establish an overview of the testing practices conducted in mobile companies, to identify weaknesses that can be improved to make the testing activity more effective. Method: The survey questions were carefully designed using the Goal/Question/Metric method to provide relevant information to the questions raised in our study. Results and Conclusions: Our study outlines that native applications are more common. The testing level more performed is the system test and the positions that perform testing levels and objectives are described. Practices related to testing technique selection in the context of mobile applications are highlighted. In the context of this study, Cucumber and Selenium are the testing tools most used to automate testing activity. Some mobile testing characteristics were outlined to understand how the testing in mobile applications run on different devices, how testers deal with the diversity of operating systems that are constantly updated and whether tests are unified to testing a mobile app that runs in different platforms. Furthermore, we report the main challenges faced by testers during the validation of the mobile app.","","978-1-6654-1560-6","10.1109/CLEI52000.2020.00034","FAPESP (Sao Paulo Research Foundation)(grant numbers:2018/10183-9,2019/06937-0); CNPq(grant numbers:312922/2018-3); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9458347","Survey;Mobile testing;Software testing practices;Software quality","Software testing;Operating systems;Companies;Tools;Mobile handsets;Mobile applications;Software reliability","mobile computing;program testing;software metrics","mobile application testing;mobile devices;mobile applications;testing practices;mobile companies;testing level;system test;testing levels;testing technique selection;testing tools;automate testing activity;mobile testing characteristics;mobile app","","","","21","","28 Jun 2021","","","IEEE","IEEE Conferences"
"A Parallel Self-Similar Network Traffic Simulation Method on a Large Time Scale","J. Tian; J. Xu; H. C. Zhang","Inst. of Machine Intell., Nankai Univ., Tianjin; Inst. of Machine Intell., Nankai Univ., Tianjin; Inst. of Machine Intell., Nankai Univ., Tianjin","2008 International Symposium on Information Science and Engineering","30 Dec 2008","2008","2","","149","153","Measurements of network traffic have shown that self-similarity is a ubiquitous phenomenon spanning across diverse network environments. Previously, the researchers designed network traffic simulation system with sequential methods to generate a small number of network traffics in a short time scale. But there is one difficulty in simulating network traffics using parallel methods with high accuracy in a large time scale. In this paper, we present a parallel method of generating self-similar network traffic based on parallel algorithm and implement it via TCP/IP. We also carry out some experiments to show that this parallel method can generate highly accurate network simulation traffics with specified Hurst parameters.","2160-1291","978-0-7695-3494-7","10.1109/ISISE.2008.194","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4732363","Self-Similar Model;Network Traffic Simulation;Parallel Simulation Algorithm","Telecommunication traffic;Traffic control;System testing;Software testing;Computer networks;Software systems;Software tools;Automatic testing;Network synthesis;Computational modeling","parallel algorithms;telecommunication traffic;transport protocols;ubiquitous computing","parallel self-similar network traffic simulation method;network traffic measurements;ubiquitous phenomenon;diverse network environments;TCP;IP","","","","6","","30 Dec 2008","","","IEEE","IEEE Conferences"
"Architecture Design of a Network Traffic Simulation System Based on Self-Similar Model","T. Jie; X. Jing; Z. Huachuan","Inst. of Machine Intell., Nankai Univ. Tian Jin, Tianjin, China; Inst. of Machine Intell., Nankai Univ. Tian Jin, Tianjin, China; Inst. of Machine Intell., Nankai Univ. Tian Jin, Tianjin, China","2008 International Conference on Computational Intelligence and Security","22 Dec 2008","2008","2","","192","196","In order to generate self-similar network traffics, researchers designed network traffic simulation system using sequential methods to generate network traffics with self-similar property on a short time scale. But there is one difficulty in how the simulation system can generate network traffics with high accuracy on a much larger time scale. So, in this paper, we present an architecture design for the distributed testing system of generating self-similar network traffic based on parallel methods and implement it via TCP/IP. We also carry out some experiments to show that this distributed system can generate highly accurate network traffics in specified Hurst parameters.","","978-0-7695-3508-1","10.1109/CIS.2008.189","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4724763","Self-Similar Model;Network Traffic Simulation;Distributed System","Telecommunication traffic;Traffic control;System testing;Software testing;Computational modeling;Computer networks;Computer architecture;Software systems;Network synthesis;Software tools","computer networks;digital simulation;parallel algorithms;program testing;software architecture;telecommunication computing;telecommunication traffic;transport protocols","network traffic simulation system architecture design;self-similar model;sequential method;short time scale;distributed testing software system;parallel method;TCP/IP","","1","","6","","22 Dec 2008","","","IEEE","IEEE Conferences"
"An Efficient Automated Test Data Generation Method","H. Cui; L. Chen; B. Zhu; H. Kuang","Huazhong Normal Univ., Wuhan, China; Huazhong Normal Univ., Wuhan, China; Huazhong Normal Univ., Wuhan, China; Huazhong Normal Univ., Wuhan, China","2010 International Conference on Measuring Technology and Mechatronics Automation","6 May 2010","2010","1","","453","456","How to shorten the time for test data generation is concerned about the main points of the current era. For this purpose, this paper brought forward an efficient automated test data generation method. In this paper first elaborated the basic particle swarm optimization algorithm and the improved particle swarm optimization algorithm, and as a search strategy, and then in this paper focused on the path of trajectory similarity calculation method. Experiments show that their combination of two methods can more efficiently generate test data.","2157-1481","978-1-4244-5739-7","10.1109/ICMTMA.2010.556","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5459797","Test data;particle swarm optimization algorithm;improved PSO;predicate function;path similarity calculation method","Automatic testing;Particle swarm optimization;Software testing;Genetic algorithms;Software quality;Programming;Costs;Current measurement;Time measurement;Mechatronics","particle swarm optimisation;program testing;search problems","automated test data generation method;particle swarm optimization algorithm;search strategy;trajectory similarity calculation method path;software testing","","4","","8","","6 May 2010","","","IEEE","IEEE Conferences"
"Cluster-Based Parallel Testing Using Semantic Analysis","C. Landing; S. Tahvili; H. Haggren; M. Langkvis; A. Muhammad; A. Loufi","Örebro University,School of Science and Technology,Örebro,Sweden; Ericsson AB,Global Artificial Intelligence Accelerator (GAIA),Stockholm,Sweden; Ericsson AB,Global Artificial Intelligence Accelerator (GAIA),Stockholm,Sweden; Örebro University,School of Science and Technology,Örebro,Sweden; Ericsson AB,Global Artificial Intelligence Accelerator (GAIA),Stockholm,Sweden; Örebro University,School of Science and Technology,Örebro,Sweden","2020 IEEE International Conference On Artificial Intelligence Testing (AITest)","25 Aug 2020","2020","","","99","106","Finding a balance between testing goals and testing resources can be considered as a most challenging issue, therefore test optimization plays a vital role in the area of software testing. Several parameters such as the objectives of the tests, test cases similarities and dependencies between test cases need to be considered, before attempting any optimization approach. However, analyzing corresponding testing artifacts (e.g. requirement specification, test cases) for capturing the mentioned parameters is a complicated task especially in a manual testing procedure, where the test cases are documented as a natural text written by a human. Thus, utilizing artificial intelligence techniques in the process of analyzing complex and sometimes ambiguous test data, is considered to be working in different industries. Test scheduling is one of the most popular and practical ways to optimize the testing process. Having a group of test cases which are required the same system setup, installation or testing the same functionality can lead to a more efficient testing process. In this paper, we propose, apply and evaluate a natural language processing-based approach that derives test cases' similarities directly from their test specification. The proposed approach utilizes the Levenshtein distance and converts each test case into a string. Test cases are then grouped into several clusters based on their similarities. Finally, a set of cluster-based parallel test scheduling strategies are proposed for execution. The feasibility of the proposed approach is studied by an empirical evaluation that has been performed on a Telecom use-case at Ericsson in Sweden and indicates promising results.","","978-1-7281-6984-2","10.1109/AITEST49225.2020.00022","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9176809","Software Testing;Natural Language Processing;Test Optimization;Semantic Similarity;Clustering","Testing;Optimization;Job shop scheduling;Semantics;Manuals;Standards;Software","artificial intelligence;natural language processing;optimisation;pattern clustering;program testing;scheduling;statistical analysis","testing resources;test optimization;software testing;test cases similarities;manual testing procedure;test data;test specification;test case;cluster-based parallel test scheduling strategies;Levenshtein distance;natural language processing;artificial intelligence;natural text;optimization","","1","","51","","25 Aug 2020","","","IEEE","IEEE Conferences"
"ATE self test","A. M. Greenspan",NA,"IEEE Automatic Testing Conference.The Systems Readiness Technology Conference. Automatic Testing in the Next Decade and the 21st Century. Conference Record.","6 Aug 2002","1989","","","284","288","The ability of automatic test equipment (ATE) to introspectively assess its own well-being as well as assess the well-being of the UUTs (units under test) external to itself has long been understood to be a major advantage of offline ATE. The author argues that this inherent potential ATE system capability has not been used effectively. It has been treated as an afterthought and implemented by the most prosaic of methods. The results of this inadequate and inappropriate treatment of ATE self-test has been stagnation in improved MTBF of new ATE systems and regression in MTTR. The maintenance and training problems for new and modern ATE have been exacerbated rather than reduced. The author contends that this situation is a result of neglect and apathy on the part of ATE systems developers who have failed to be innovative or attentive to modern system techniques in the design of self-test for their ATE. The author proposes a five-phase ATE self-test approach that he hopes can resolve the above-mentioned problems. The phases are: pre-ATE planning; ATE planning; self-test implementation; self-test maturity and evaluation; and self-test feedback/archiving.<<ETX>></ETX>","","","10.1109/AUTEST.1989.81135","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=81135","","Automatic testing;Software testing;System testing;Cost function;Footwear;Test equipment;Design for testability;Design optimization;Diversity reception;Trademarks","automatic test equipment;maintenance engineering","maintenance engineering;ATE self test;automatic test equipment;units under test;MTBF;MTTR;maintenance;training","","","","","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Alternatives to achieve software diversity in common channel signaling networks","N. L. Hung; A. R. Jacob; S. E. Makris","Bellcore, Raritan, NJ, USA; NA; NA","IEEE Journal on Selected Areas in Communications","6 Aug 2002","1994","12","3","533","538","With the increasing amount of software deployed in the common channel signaling networks (CCSNs) and its increasing complexity, software and its failure effects on the CCSNs have become a major concern. The software error contributing to the 1991 CCSN outages, which affected a large number of customer lines, has underscored the vulnerability of the CCSNs to software failures. The current mated pair signaling transfer point (STP) implementations in the CCSNs, with both STPs from the same supplier having the same software, make this architecture susceptible to common-cause software failure modes that might result in failures of both STPs simultaneously. To address these concerns, ways have been considered to achieve software diversity in the CCSNs by ensuring software failure mode independence among network nodes. Four potential alternatives are identified here: (i) multiple software developments in STPs; (ii) different software generics for backup; (iii) mixed-supplier STP pairs; and (iv) E-link sets to different supplier STPs. The advantages and disadvantages of these alternatives to ensure software diversity are examined in this paper and should be weighed by individual telecommunications network providers. concerns expressed in this paper are not exhaustive listings, but rather catalysts for further studies and discussions.<<ETX>></ETX>","1558-0008","","10.1109/49.285295","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=285295","","Intelligent networks;Software testing;Fault tolerance;Software reliability;Jacobian matrices;Computer architecture;Programming;Telecommunication services;Software engineering;Guidelines","software reliability;telecommunication signalling;telecommunications computing;software quality;electrical engineering computing","common channel signaling networks;software error;software failures;signaling transfer point;STP;software diversity;network nodes;multiple software developments;software generics;telecommunications network providers;E-links;software reliability","","4","1","8","IEEE","6 Aug 2002","","","IEEE","IEEE Journals"
"Efficiently represent diverse system field usage in reliability testing","P. J. M. Sonnemans; A. Balasubramanian; K. Kevrekedis; M. J. Newby","Eindhoven University of Technology, The Netherlands; Eindhoven University of Technology, The Netherlands; Eindhoven University of Technology, The Netherlands; City University London, UK","2008 Annual Reliability and Maintainability Symposium","15 May 2009","2008","","","132","136","This paper addresses the problem how to represent diverse field usage of professional systems in an efficient way, so that field usage can be incorporated in reliability tests. With diverse we mean the variability in system use in the field. Operational Profiles are constructed from system field data to represent system field use. A clustering technique is introduced and applied in a strategic way to reduce the diversity in describing diverse system use in the field. In this way testing effort could be reduced by a factor 87 while maintaining 70 % similarity with the original system field data.","0149-144X","978-1-4244-1460-4","10.1109/RAMS.2008.4925783","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4925783","reliability;testing;system use;operational profile;clustering;grouping;field performance","System testing;Biomedical imaging;Medical diagnostic imaging;Hospitals;Software testing;Maintenance;Reliability;Automotive engineering;Manufacturing;Medical services","life testing;reliability theory;statistical analysis","system reliability testing;diverse system field usage;professional systems;clustering technique","","1","","10","","15 May 2009","","","IEEE","IEEE Conferences"
"Industrial real-time regression testing and analysis using firewalls","L. White; B. Robinson","Dept. of EECS, Case Western Reserve Univ., Cleveland, OH, USA; NA","20th IEEE International Conference on Software Maintenance, 2004. Proceedings.","22 Nov 2004","2004","","","18","27","Industrial real-time systems are complex and need to be thoroughly tested before being released to the customer. We have found that last minute changes are often responsible for the introduction of defects, causing serious problems for the customer. We demonstrate that these defects can be introduced into real-time software in diverse ways, and there is no simple regression testing method that can deal with all of these defect sources. This paper describes the application of a testing firewall for regression testing whose form differs depending upon the defect. The idea of the testing firewall is to limit the regression testing to those potentially affected system elements directly dependent upon changed system elements, and then to thoroughly test these elements. This has resulted in substantial savings in regression testing costs, and yet has been effective in detecting critical defects with significant implication in terms of customer acceptance at ABB. Empirical studies are reported for these experiences in an industrial setting.","1063-6773","0-7695-2213-0","10.1109/ICSM.2004.1357786","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1357786","","Software testing;System recovery;System testing;Real time systems;Costs;Software design;Software maintenance;Application software;Software quality;Robustness","program testing;real-time systems;system recovery;regression analysis;authorisation","industrial real-time systems;regression testing;regression analysis;testing firewall;real-time software;customer acceptance;ABB;software testing;software defect detection;deadlock","","18","","23","","22 Nov 2004","","","IEEE","IEEE Conferences"
"Test Data Generation Using Annealing Immune Genetic Algorithm","X. B. Tan; C. Longxin; X. Xiumei","Inst. of Comput., Foshan Vocational & Tech. Coll., Guangzhou, China; Inst. of Policy & Manage., Chinese Acad. of Sci., Beijing, China; Comput. & Inf. Technol., Beijing Jiaotong Univ., Beijing, China","2009 Fifth International Joint Conference on INC, IMS and IDC","13 Nov 2009","2009","","","344","348","With the development of software technology and the expansion of software project scale, software testing appears to be more crucial. And test data selection is one of the nodi during software structure testing because the suitability of test data may directly affect error detection. Notwithstanding existence of several methods to generate test data automatically, such an algorithm overcoming disadvantages of the existing methods in practice hasn't been brought out, that some errors still have to be detected by engineering experience. Therefore, this paper analyzes the characteristics and shortcomings of simple genetic algorithm, simulated annealing genetic algorithm as well as immune algorithm respectively. Aiming at solving the shortcomings in standard Genetic Algorithm on search efficiency, individual diversity and premature, the Annealing Immune Genetic Algorithm (AIGA) is presented as the core algorithm of test data generation by introducing the mechanism of reproduction rate adjustment of individual concentration of immune algorithm and annealing principium into genetic algorithm. Finally, AIGA mentioned above was applied and verified with a practical software testing example.","","978-1-4244-5209-5","10.1109/NCM.2009.56","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5331701","Software testing;test data generation;genetic algorithm;expectation of reproduction","Genetic algorithms;Software testing;Automatic testing;Simulated annealing;Algorithm design and analysis;Computational modeling;Solid modeling;Electronic mail;Analytical models;Iterative algorithms","genetic algorithms;program testing;simulated annealing","test data generation;annealing immune genetic algorithm;software technology;test data selection;software structure testing;error detection;simulated annealing genetic algorithm;search efficiency;reproduction rate adjustment;annealing principium","","4","","10","","13 Nov 2009","","","IEEE","IEEE Conferences"
"ALOHA with Collision Resolution: Physical layer description and software defined radio implementation","X. Liu; J. Kountouriotis; A. P. Petropulu; K. R. Dandekar","Electrical & Computer Engineering Department, Drexel University, Philadelphia PA, USA; Electrical & Computer Engineering Department, Drexel University, Philadelphia PA, USA; Electrical & Computer Engineering Department, Drexel University, Philadelphia PA, USA; Electrical & Computer Engineering Department, Drexel University, Philadelphia PA, USA","2010 IEEE International Conference on Acoustics, Speech and Signal Processing","28 Jun 2010","2010","","","3330","3333","A cross-layer scheme, namely ALOHA with Collision Resolution (ALOHA-CR), is proposed for high throughput wireless communications in a cellular scenario. Transmissions occur in a time-slotted ALOHA-type fashion but with an important difference: simultaneous transmissions of two users can be successful. The physical layer required to achieve this functionality is described and the statistical properties of the user delays are determined so that the probability of user separation is maximized. An implementation of ALOHA-CR on the Wireless Open Access Research Platform (WARP) testbed containing software defined radio nodes is discussed and experimental results are presented.","2379-190X","978-1-4244-4295-9","10.1109/ICASSP.2010.5496007","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5496007","multi-user system;blind source separation;MIMO systems;collision resolution;software defined radio","Physical layer;Software radio;Delay;Throughput;Diversity reception;Software testing;System testing;Wireless networks;Bandwidth;Frequency diversity","multi-access systems;protocols;software radio","collision resolution;physical layer description;software defined radio implementation;high throughput wireless communication;cellular scenario;time slotted ALOHA;wireless open access research platform","","1","","11","","28 Jun 2010","","","IEEE","IEEE Conferences"
"Security testing and resilience","A. Rosa Cavalli",Montimaqe,"2021 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","28 May 2021","2021","","","1","1","Testing techniques are used to check if a given system implementation satisfies its specification or some predefined properties. In the last years an important research activity has taken place concerning the definition of testing techniques for security. Resilience has also become a crucial issue to guarantee the security and robustness of systems. Resilience is the capability of a system to continue to function properly with minimal degradation of performance, despite intrusions and attacks. In this lecture, we will present the main features of security testing and resilience. Regarding security testing, we will focus on model-based security testing, penetration testing and fuzzing testing. Regarding resilience, we will present a formal methodology that is based on three techniques: modelling, diversification and reflection. To implement this methodology, we first developed an approach of resilience that leverages model-level diversity. With this aim, we define a model of the system and derive more robust variants that can replace the first one in case of attack. To avoid manually deriving the variants and to increase the level of diversity, we propose a second complementary approach. The latter approach also consists in having different variants of ones services; but unlike the first, we have a single model and the implementations differ at the language, source code and binaries levels. To conclude we propose a formal Web service testing framework by incorporating these complementary mechanisms in order to take advantage of the benefits provided by each.","","978-1-6654-4456-9","10.1109/ICSTW52544.2021.00031","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9440162","Security testing;Penetration testing;Monitoring;Root Cause Analysis;Resilience","Root cause analysis;Runtime;Web services;Conferences;Safety;Security;System implementation","fuzzy set theory;program testing;security of data;Web services","testing techniques;system implementation;model-level diversity;formal Web service testing framework;fuzzing testing;penetration testing;model-based security testing","","","","0","","28 May 2021","","","IEEE","IEEE Conferences"
"A dynamic optimization strategy for evolutionary testing","Xiaoyuan Xie; Baowen Xu; Liang Shi; Changhai Nie; Yanxiang He","Dept. of Comput. Sci. & Eng., Southeast Univ., Nanjing, China; Dept. of Comput. Sci. & Eng., Southeast Univ., Nanjing, China; Dept. of Comput. Sci. & Eng., Southeast Univ., Nanjing, China; Dept. of Comput. Sci. & Eng., Southeast Univ., Nanjing, China; NA","12th Asia-Pacific Software Engineering Conference (APSEC'05)","20 Mar 2006","2005","","","8 pp.","","Evolutionary testing (ET) is an efficient technique of automated test case generation. ET uses a kind of metaheuristic search technique, genetic algorithm (GA), to convert the task of test case generation into an optimal problem. The configuration strategies of GA have notable influences upon the performance of ET. In this paper, represent a dynamic self-adaptation strategy for evolutionary structural testing. It monitors evolution process dynamically, detects the symptom of prematurity by analyzing the population, and adjusts the mutation possibility to recover the diversity of the population. The empirical results show that the strategy can greatly improve the performance of the ET in many cases. Besides, some valuable advices are provided for the configuration strategies of ET by the empirical study.","1530-1362","0-7695-2465-6","10.1109/APSEC.2005.6","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1607196","Software testing;evolutionary testing;structural testing;dynamic optimization","Automatic testing;Software testing;Evolution (biology);Computer science;Software engineering;Genetic algorithms;Genetic mutations;System testing;Delay;Laboratories","program testing;formal verification;genetic algorithms","dynamic optimization strategy;automated test case generation;metaheuristic search technique;genetic algorithm;evolutionary structural testing","","1","1","16","","20 Mar 2006","","","IEEE","IEEE Conferences"
"FAST Approaches to Scalable Similarity-Based Test Case Prioritization","B. Miranda; E. Cruciani; R. Verdecchia; A. Bertolino","Fed. Univ. of Pernambuco, Recife, Brazil; Gran Sasso Sci. Inst., L'Aquila, Italy; Gran Sasso Sci. Inst., L'Aquila, Italy; ISTI, Pisa, Italy","2018 IEEE/ACM 40th International Conference on Software Engineering (ICSE)","2 Sep 2018","2018","","","222","232","Many test case prioritization criteria have been proposed for speeding up fault detection. Among them, similarity-based approaches give priority to the test cases that are the most dissimilar from those already selected. However, the proposed criteria do not scale up to handle the many thousands or even some millions test suite sizes of modern industrial systems and simple heuristics are used instead. We introduce the FAST family of test case prioritization techniques that radically changes this landscape by borrowing algorithms commonly exploited in the big data domain to find similar items. FAST techniques provide scalable similarity-based test case prioritization in both white-box and black-box fashion. The results from experimentation on real world C and Java subjects show that the fastest members of the family outperform other black-box approaches in efficiency with no significant impact on effectiveness, and also outperform white-box approaches, including greedy ones, if preparation time is not counted. A simulation study of scalability shows that one FAST technique can prioritize a million test cases in less than 20 minutes.","1558-1225","978-1-4503-5638-1","10.1145/3180155.3180210","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8453081","locality sensitive hashing;minhashing;scalability;similarity;software testing;test case prioritization","Scalability;History;Fault detection;Big Data;Software testing;Data mining","fault diagnosis;greedy algorithms;Java;program testing","test case prioritization criteria;similarity-based approaches;test case prioritization techniques;FAST technique;scalable similarity-based test case prioritization;black-box fashion;black-box approaches;white-box approaches;FAST approaches","","8","","34","","2 Sep 2018","","","IEEE","IEEE Conferences"
"Mining Similar Methods for Test Adaptation","D. Sondhi; M. Jobanputra; D. Rani; S. Purandare; S. Sharma; R. Purandare","CSE, Indraprastha Institute of Information Technology Delhi, 243095 New Delhi, Delhi, India, (e-mail: devikas@iiitd.ac.in); Computer Science, IIITD, 243095 New Delhi, Delhi, India, 110020 (e-mail: mayankjobanputra@gmail.com); Computer Science and Engineering, Gandhi Institute For Technological Advancement, 209150 Bhubaneswar, Odisha, India, 752054 (e-mail: ranidivya063@gmail.com); Computer Science and Engineering, Indraprastha Institute of Information Technology Delhi, 243095 New Delhi, Delhi, India, 110020 (e-mail: salil.purandare@gmail.com); Computer Science Engineering, International Institute of Information Technology Bhubaneswar, 267396 Bhubaneswar, Odisha, India, 751003 (e-mail: phs.sakshi@gmail.com); Computer Science and Engineering, Indraprastha Institute of Information Technology, 243095 New Delhi, Delhi, India, (e-mail: purandare@iiitd.ac.in)","IEEE Transactions on Software Engineering","","2021","PP","99","1","1","Developers may choose to implement a library despite the existence of similar libraries, considering factors such as computational performance, language or platform dependency, accuracy, convenience, and completeness of an API. As a result, GitHub hosts several library projects that have overlaps in their functionalities. These overlaps have been of interest to developers from the perspective of code reuse or the preference of one implementation over the other. Through an empirical study, we explore the extent and nature of existence of these similarities in the library functions. We have further studied whether the similarity of functions across different libraries and their associated test suites can be leveraged to reveal defects in one another. We see scope for effectively using the mining of test suites from the perspective of revealing defects in a program or its documentation. Another noteworthy observation made in the study is that similar functions may exist across libraries implemented in the same language as well as in different languages. Identifying the challenges that lie in building a testing tool, we automate the entire process in Metallicus, a test mining and recommendation tool. Metallicus returns a test suite for the given input of a query function and a template for its test suite. On a dataset of query functions taken from libraries implemented in Java or Python, Metallicus revealed 46 defects.","1939-3520","","10.1109/TSE.2021.3057163","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9347715","Test suites;mining;software testing;function similarity","Libraries;Testing;Tools;Software development management;Python;Documentation;Open source software","","","","1","","","IEEE","4 Feb 2021","","","IEEE","IEEE Early Access Articles"
"Cooperative Control of Water Volumes of Parallel Ponds Attached to An Open Channel Based on Information Consensus with Minimum Diversion Water Loss","C. Tricaud; Y. Chen","Center for Self-Organizing and Intelligent Systems (CSOIS), Department of Electrical and Computer Engineering, 4160 Old Main Hill, Utah State University, Logan, UT 84322-4160, USA. ctricaud@cc.usu.edu; Center for Self-Organizing and Intelligent Systems (CSOIS), Department of Electrical and Computer Engineering, 4160 Old Main Hill, Utah State University, Logan, UT 84322-4160, USA. yqchen@cc.usu.edu, T: (435)7970148, F: (435)7973054","2007 International Conference on Mechatronics and Automation","24 Sep 2007","2007","","","3283","3288","Decision making through information sharing for a canal irrigation system is discussed in this paper. A consensus-based decision algorithm is used to manage water distribution into a parallel ponds network and achieve good quality of service and minimum water-loss. The algorithm is tested in a simulation software reproducing the major dynamics of the system for different scenarios. While not taking into account some of the non-linearities and focusing on feasibility, the algorithm shows interesting results under ideal flow control conditions especially regarding convergence. Robustness is estimated by Monte Carlo evaluation of the effects of delay uncertainty, and the strategy maintains convergence.","2152-744X","978-1-4244-0827-6","10.1109/ICMA.2007.4304088","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4304088","Consensus;Irrigation Control;Open Water Channel","Irrigation;Convergence;Delay estimation;Decision making;Quality management;Quality of service;Software algorithms;Software testing;System testing;Nonlinear dynamical systems","decision making;delays;flow control;irrigation;Monte Carlo methods;water supply","cooperative control;water volume control;parallel ponds;minimum diversion water loss;decision making;information sharing;canal irrigation system;consensus-based decision algorithm;water distribution;flow control;Monte Carlo evaluation;delay uncertainty","","3","","14","","24 Sep 2007","","","IEEE","IEEE Conferences"
"Estimation of software diversity by fault simulation and failure searching","Luping Chen; J. May; G. Hughes","Dept. of Comput. Sci., Bristol Univ., UK; Dept. of Comput. Sci., Bristol Univ., UK; Dept. of Comput. Sci., Bristol Univ., UK","Proceedings 12th International Symposium on Software Reliability Engineering","7 Aug 2002","2001","","","122","131","An important problem for computer-based systems is providing fault tolerance for unknown (at the time of commencement of service) systematic design errors. Such design errors can have a long latency in normal operation and only become apparent under specific conditions associated with particular combinations of input and internal system states. The use of 'diverse' software versions remains a possible approach to prevent coincidental failure, but its potential value has never been quantified. This paper presents the application of data-flow and constant perturbation to simulate the introduction of faults or errors into programs and explores methods to establish the magnitudes and locations of the associated input space failure regions. Used together, these two techniques enable failure behaviour to be described in a quantitative way and provide a method to estimate the diversity of multi-version software. A simple case and a industrial software are studied to illustrate the applications of the approach.","1071-9458","0-7695-1306-9","10.1109/ISSRE.2001.989465","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=989465","","Software testing;Computer errors;Software safety;Computational modeling;Computer simulation;Fault tolerant systems;Application software;Software quality;Software engineering;Fault tolerance","software fault tolerance;program testing;data flow analysis","fault tolerance;systematic design errors;latency;data-flow;failure behaviour;software engineering;fault injection;software fault injection","","1","","28","","7 Aug 2002","","","IEEE","IEEE Conferences"
"Testing and Quality Validation for AI Software–Perspectives, Issues, and Practices","C. Tao; J. Gao; T. Wang","College of Computer Science and Technology, Nanjing University of Aeronautics and Astronautics, Nanjing, China; Department of Computer Engineering, San Jos&#x00E9; State University, San Jose, CA, USA; College of Computer Science and Technology, Nanjing University of Aeronautics and Astronautics, Nanjing, China","IEEE Access","5 Sep 2019","2019","7","","120164","120175","With the fast growth of artificial intelligence and big data computing technologies, more and more software service systems have been developed using diverse machine learning models and technologies to make business and intelligent decisions based on their multimedia input to achieve intelligent features, such as image recognition, recommendation, decision making, prediction, etc. Nevertheless, there are increasing quality problems resulting in erroneous testing costs in enterprises and businesses. Existing work seldom discusses how to perform testing and quality validation for AI software. This paper focuses on quality validation for AI software function features. The paper provides our understanding of AI software testing for new features and requirements. In addition, current AI software testing categories are presented and different testing approaches are discussed. Moreover, test quality assessment and criteria analysis are illustrated. Furthermore, a practical study on quality validation for an image recognition system is performed through a metamorphic testing method. Study results show the feasibility and effectiveness of the approach.","2169-3536","","10.1109/ACCESS.2019.2937107","National Basic Research Program of China (973 Program)(grant numbers:2018YFB1003900); National Natural Science Foundation of China(grant numbers:61402229,61602267); Collaborative Innovation Center of Novel Software Technology and Industrialization; Fundamental Research Funds for the Central Universities(grant numbers:NS2019058); State Key Laboratory of Novel Software Technology(grant numbers:KFKT2018B19); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811507","AI software quality validation;AI testing;testing AI software","Artificial intelligence;Software;Software testing;Data models;Quality assurance;Big Data","Big Data;image recognition;learning (artificial intelligence);program testing;software quality","artificial intelligence;big data computing technologies;software service systems;decision making;quality validation;AI software function features;test quality assessment;image recognition system;metamorphic testing method;machine learning models;AI software testing categories","","7","","49","CCBY","23 Aug 2019","","","IEEE","IEEE Journals"
"Agaric — A hybrid cloud based testing platform","J. Wu; C. Wang; Y. Liu; L. Zhang","School of Computer Science and Engineering, Beihang Univeristy (BUAA), Beijing, China; School of Computer Science and Engineering, Beihang Univeristy (BUAA), Beijing, China; School of Computer Science and Engineering, Beihang Univeristy (BUAA), Beijing, China; School of Computer Science and Engineering, Beihang Univeristy (BUAA), Beijing, China","2011 International Conference on Cloud and Service Computing","26 Jan 2012","2011","","","87","94","Cloud computing technology enables developers spend much more time on application quality without considering computing resource constraint, load balancing and performance tuning, etc. It raises challenges along with the benefits it offers to software testing. This paper is motivated with the concerns on how to test the online web applications in a scalable and diverse way. The resources occupied in the proposed cloud testing are diverse in computing ability, network performance, and software configuration (including operating system and browser, etc.). This paper at first identifies the eight unique features to define cloud testing. Then, this paper introduces the design of Agaric - hybrid cloud based testing platform. In Agaric we use both the diverse internet distributed and user owned computing resources, and the centered computing resources. The key to organize the test network is the proposed Test Flow Control Protocol (TFCP). TFCP is verified formally with Colored Petri Net and the platform is evaluated with both controlled and uncontrolled experiments.","","978-1-4577-1637-9","10.1109/CSC.2011.6138558","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6138558","software testing;cloud computing;cloud testing","Testing;Cloud computing;Protocols;Reliability;Servers","cloud computing;Internet;Petri nets;program testing;program verification;quality of service;resource allocation","software testing;online Web application;cloud computing technology;computing ability;network performance;Agaric;hybrid cloud based testing platform;Internet;centered computing resources;user owned computing resources;test flow control protocol;TFCP verification;colored Petri net;software configuration","","6","","11","","26 Jan 2012","","","IEEE","IEEE Conferences"
"GUI Test Case Prioritization by State-Coverage Criterion","Z. He; C. Bai","Dept. of Autom. Control, Beijing Univ. of Aeronaut. & Astronaut., Beijing, China; Dept. of Autom. Control, Beijing Univ. of Aeronaut. & Astronaut., Beijing, China","2015 IEEE/ACM 10th International Workshop on Automation of Software Test","27 Jul 2015","2015","","","18","22","Graphical User Interface (GUI) application is a kind of typical event-driven software (EDS) that transforms state according to input events invoked through a user interface. It is time consuming to test a GUI application since there are a large number of possible event sequences generated by the permutations and combinations of user operations. Although some GUI test case prioritization techniques have been proposed to determine ""which test case to execute next"" for early fault detection, most of them use random ordering to break tie cases, which has been proved to be ineffective. Recent research presents the opinion that using hybrid criteria can be an effective way for tie-breaking, but few studies focus on seeking a new criterion cooperating well with other criteria when breaking tie cases. In this paper, we propose a state-distance-based method using state coverage as a new criterion to prioritize GUI test cases. An empirical study on three GUI programs reveals that the state-distance-based method is really suitable for GUI test case prioritization and can cooperate well with the (additional) event length criterion.","","978-1-4673-7022-6","10.1109/AST.2015.11","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7166260","GUI testing;event-driven software;test case prioritization;GUI state similarity","Graphical user interfaces;Testing;Software;Fault detection;Software engineering;Measurement;Conferences","graphical user interfaces","GUI test case prioritization;state coverage criterion;graphical user interface;event-driven software;EDS;GUI application;fault detection;state distance based method;GUI programs","","5","1","11","","27 Jul 2015","","","IEEE","IEEE Conferences"
"Peer Instruction in Online Synchronous Software Engineering - Findings from fine-grained clicker data","B. Gopal; S. Cooper","University of Nebraska-Lincoln,Computer Science and Engineering,Lincoln,USA; University of Nebraska-Lincoln,Computer Science and Engineering,Lincoln,USA","2021 IEEE Frontiers in Education Conference (FIE)","20 Dec 2021","2021","","","1","8","In this Research Full paper, we present the results of a replication study in a semester-long, sophomore-level software engineering course utilizing Peer Instruction (PI). PI is an active learning pedagogy with roots in STEM Education. In this study, we examine the relationship between student response data from in-class PI correctness and students&#x0027; performance on quizzes and exams. We worked with a fully remote, synchronous course offered over Zoom. The study we replicated was with an honors cohort of students with a diversity of undergraduate majors, while we focused on a non-honors course containing computing-related majors. Our intervention design included a flipped-classroom approach for each class session with required readings, reading quizzes, followed by PI in class using online breakout rooms for peer discussion. Our course modules were heavily based on industry practices and knowledge from the workforce, across several varied modules that encompass the complete software development lifecycle, and were as follows: Software Process Models (SPM), Software Architecture (SA), Databases (DB), User Interface/user Experience (UI/UX), Software Testing (ST), and Continuous Integration (CI). Our data points for analysis with fine-grained PI student response data were two-fold: scores from weekly online quizzes, and a summative final exam, administered online through a course management system (CMS), at different points during the semester after the PI sessions. The online quizzes and the online exam were timed, closed book/notes, and conducted during class periods. We analyzed and classified individual student responses before and after each question in each module and attempted to create response patterns for each module. We correlated these response patterns with exam and quiz scores using ANOVA techniques, on a variety of questions including Parson&#x0027;s problems. We report overall correctness on each type of vote, track student response patterns from in-class to quizzes and the exam, and quantify absolute percentages of students that demonstrate longer-term learning from the PI process. Our results show that 58&#x0025; of students exhibited cognitive gains across all modules during PI sessions. Students who learn in class from PI perform well on the quizzes and the final exam, indicating persistence of the knowledge gained during PI several weeks after the actual sessions. We also found that those who fail to learn from the PI process in the class perform worse on quizzes and the final exam. Our results were consistent across all modules. More significantly, we found PI to be an effective way to teach our software engineering course based on student learning before and after PI, in a completely virtual environment, a result unique to our study. Based on our results, we discuss the implications for software engineering education, both in-person and virtual.","2377-634X","978-1-6654-3851-3","10.1109/FIE49875.2021.9637353","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9637353","Software Engineering Education;Peer Instruction;Active Learning;Online courses;Virtual Instruction;Cognitive gains using Peer Instruction;Fine-grained data analysis;student response data","Software testing;Knowledge engineering;Industries;Software architecture;Education;Virtual environments;Software","cognition;computer science education;educational courses;program testing;software architecture;statistical analysis;STEM;teaching;user interfaces","peer instruction;fine-grained clicker data;sophomore-level software engineering course;in-class PI correctness;fully remote course;synchronous course;nonhonors course;class session;online breakout rooms;course modules;software development lifecycle;software architecture;software testing;data points;fine-grained PI student response data;weekly online quizzes;summative final exam;course management system;PI sessions;online exam;student response patterns;PI process;student learning;software engineering education;online synchronous software engineering;STEM education;flipped-classroom approach;software process models;user interface;user experience;continuous integration;ANOVA techniques","","","","38","IEEE","20 Dec 2021","","","IEEE","IEEE Conferences"
"PODS revisited-a study of software failure behaviour","P. G. Bishop; F. D. Pullen","Central Electr. Res. Lab., Leatherhead, UK; Central Electr. Res. Lab., Leatherhead, UK","[1988] The Eighteenth International Symposium on Fault-Tolerant Computing. Digest of Papers","6 Aug 2002","1988","","","2","8","A description is given of an empirical study of the failure characteristics of software defects detected in the programs developed in the Project on Diverse Software (PODS). The results are interpreted in the context of a state machine model of software failure. The results of the empirical study case doubts on the general validity of the assumption of constant software failure probability and the assumption of constant software failure probability and the assumption that all defects have similar failure rates. In addition, an analysis of failure dependency lends support to the use of diversity as a means of minimizing the impact of design-level faults. Here, nonidentical faults exhibited coincident failure characteristics approximately in accord with the independence assumption, and some of the observed positive and negative correlation effects could be explained by failure masking effects, which can be removed by suitable design.<<ETX>></ETX>","","0-8186-0867-6","10.1109/FTCS.1988.5289","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5289","","Context modeling;Collaborative software;State-space methods;Predictive models;Kelvin;Failure analysis;Fault detection;Software testing;Software reliability;Real time systems","fault tolerant computing;software reliability","software failure behaviour;Project on Diverse Software;PODS;state machine model;failure dependency;design-level faults","","16","","","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Achieving dependability throughout the development process: a distributed software experiment","J. P. J. Kelly; S. C. Murphy","Dept. of Electr. & Comput. Eng., California Univ., Santa Barbara, CA, USA; NA","IEEE Transactions on Software Engineering","6 Aug 2002","1990","16","2","153","165","Distributed software engineering techniques and methods for improving the specification and testing phases are considered. To examine these issues, an experiment was performed using the design diversity approach in the specification, design, implementation, and testing of distributed software. In the experiment, three diverse formal specifications were used to produce multiple independent implementations of a distributed communication protocol in Ada. The problems encountered in building complex concurrent processing systems in Ada were also studied. Many pitfalls were discovered in mapping the formal specifications into Ada implementations.<<ETX>></ETX>","1939-3520","","10.1109/32.44379","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=44379","","Software testing;Automatic testing;Fault tolerance;Software engineering;Formal specifications;Hardware;Fault detection;Software performance;Protocols;Buildings","Ada;computer communications software;data communication systems;distributed processing;formal specification;program testing;protocols","distributed software engineering;B/B testing;automated testing;software testing;dependability;multiple independent implementations;distributed communication protocol;Ada;complex concurrent processing systems","","18","","29","","6 Aug 2002","","","IEEE","IEEE Journals"
"An Empirical Comparison of Combinatorial and Random Testing","L. S. Ghandehari; J. Czerwonka; Y. Lei; S. Shafiee; R. Kacker; R. Kuhn","Dept. of Comput. Sci. & Eng., Univ. of Texas at Arlington, Arlington, TX, USA; Microsoft Res., Redmond, WA, USA; Dept. of Comput. Sci. & Eng., Univ. of Texas at Arlington, Arlington, TX, USA; Dept. of Comput. Sci. & Eng., Univ. of Texas at Arlington, Arlington, TX, USA; Inf. Technol. Lab., Nat. Inst. of Stand. & Technol., Gaithersburg, MD, USA; Inf. Technol. Lab., Nat. Inst. of Stand. & Technol., Gaithersburg, MD, USA","2014 IEEE Seventh International Conference on Software Testing, Verification and Validation Workshops","5 Jun 2014","2014","","","68","77","Some conflicting results have been reported on the comparison between t-way combinatorial testing and random testing. In this paper, we report a new study that applies t-way and random testing to the Siemens suite. In particular, we investigate the stability of the two techniques. We measure both code coverage and fault detection effectiveness. Each program in the Siemens suite has a number of faulty versions. In addition, mutation faults are used to better evaluate fault detection effectiveness in terms of both number and diversity of faults. The experimental results show that in most cases, t-way testing performed as good as or better than random testing. There are few cases where random testing performed better, but with a very small margin. Overall, the differences between the two techniques are not as significant as one would have probably expected. We discuss the practical implications of the results. We believe that more studies are needed to better understand the comparison of the two techniques.","","978-1-4799-5790-3","10.1109/ICSTW.2014.8","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6825640","Combinatorial Testing;Random Testing;Software Testing","Testing;Fault detection;Schedules;Computational modeling;Measurement;Stability analysis;Standards","program testing;software fault tolerance","t-way combinatorial testing;random testing;Siemens suite;code coverage;fault detection effectiveness;faulty versions","","22","","22","","5 Jun 2014","","","IEEE","IEEE Conferences"
"Black-Box String Test Case Generation through a Multi-Objective Optimization","A. Shahbazi; J. Miller","Department of Electrical and Computer Engineering, Edmonton, AB, Canada; Department of Electrical and Computer Engineering, Edmonton, AB, Canada","IEEE Transactions on Software Engineering","14 Apr 2016","2016","42","4","361","378","String test cases are required by many real-world applications to identify defects and security risks. Random Testing (RT) is a low cost and easy to implement testing approach to generate strings. However, its effectiveness is not satisfactory. In this research, black-box string test case generation methods are investigated. Two objective functions are introduced to produce effective test cases. The diversity of the test cases is the first objective, where it can be measured through string distance functions. The second objective is guiding the string length distribution into a Benford distribution based on the hypothesis that the population of strings is right-skewed within its range. When both objectives are applied via a multi-objective optimization algorithm, superior string test sets are produced. An empirical study is performed with several real-world programs indicating that the generated string test cases outperform test cases generated by other methods.","1939-3520","","10.1109/TSE.2015.2487958","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7293669","Adaptive random testing;automated test case generation;black-box testing;mutation;random testing;software testing;string distance;string test cases;Adaptive random testing;automated test case generation;black-box testing;mutation;random testing;software testing;string distance;string test cases","Sociology;Statistics;Biological cells;Subspace constraints;Testing;Power capacitors;Genetic algorithms","optimisation;program testing;security of data","black-box string test case generation;security risks;random testing;RT;objective functions;string distance functions;Benford distribution;multiobjective optimization algorithm","","22","","76","IEEE","7 Oct 2015","","","IEEE","IEEE Journals"
"ALOHA with Collision Resolution: MAC layer analysis and software defined radio implementation","J. Kountouriotis; X. Liu; A. P. Petropulu; K. R. Dandekar","Electrical & Computer Engineering Department, Drexel University, Philadelphia PA, USA; Electrical & Computer Engineering Department, Drexel University, Philadelphia PA, USA; Electrical & Computer Engineering Department, Drexel University, Philadelphia PA, USA; Electrical & Computer Engineering Department, Drexel University, Philadelphia PA, USA","2010 44th Annual Conference on Information Sciences and Systems (CISS)","13 May 2010","2010","","","1","6","A cross-layer scheme, namely ALOHA with Collision Resolution (ALOHA-CR), is proposed for high throughput wireless communications in a cellular scenario. Transmissions occur in a time-slotted ALOHA-type fashion but with an important difference: simultaneous transmissions of two users can be successful. In this paper, throughput and service delay analysis is provided and the analytical results are validated on the Wireless Open Access Research Platform (WARP) testbed containing software defined radio (SDR) testbed. Both analysis and experiments indicate that ALOHA-CR leads to significant increase in throughput and reduction of service delays.","","978-1-4244-7417-2","10.1109/CISS.2010.5464810","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5464810","multi-user system;blind source separation;MIMO systems;collision resolution;software defined radio","Software radio;Throughput;Delay;Software testing;Road accidents;Wireless networks;Bandwidth;Frequency diversity;Diversity reception;Time division multiple access","cellular radio;software radio","ALOHA;collision resolution;MAC layer analysis;software defined radio implementation;high throughput wireless communications;cellular communications;wireless open access research platform","","1","","15","","13 May 2010","","","IEEE","IEEE Conferences"
"Adaptive Random Test Case Generation Based on Multi-objective Evolutionary Search","C. Mao; L. Wen; T. Y. Chen","Jiangxi University of Finance and Economics, China; Jiangxi University of Finance and Economics, China; Swinburne University of Technology, Australia","2020 IEEE 19th International Conference on Trust, Security and Privacy in Computing and Communications (TrustCom)","9 Feb 2021","2020","","","46","53","Diversity is the key factor for test cases to detect program failures. Adaptive random testing (ART) is one of the effective methods to improve the diversity of test cases. Being an ART algorithm, the evolutionary adaptive random testing (eAR) only increases the distance between test cases to enhance its failure detection ability. This paper presents a new ART algorithm, MoesART, based on multi-objective evolutionary search. In this algorithm, in addition to the dispersion diversity, two other new diversities (or optimization objectives) are designed from the perspectives of the balance and proportionality of test cases. Then, the Pareto optimal solution returned by the NSGA-II framework is used as the next test case. In the experiments, the typical block failure pattern in the cases of two-dimensional and three-dimensional input domains is used to validate the effectiveness of the proposed MoesART algorithm. The experimental results show that MoesART exhibits better failure detection ability than both eAR and the fixed-sized-candidate-set ART (FSCS-ART), especially for the programs with three-dimensional input domain.","2324-9013","978-1-6654-0392-4","10.1109/TrustCom50675.2020.00020","NSFC(grant numbers:61762040); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9343017","software testing;adaptive random testing;multi objective evolutionary search;test case;diversity","Privacy;Subspace constraints;Ear;Software;Power capacitors;Security;Testing","evolutionary computation;genetic algorithms;Pareto optimisation;program testing;search problems","multiobjective evolutionary search;diversities;failure detection ability;adaptive random test case generation;ART algorithm;evolutionary adaptive random testing","","","","35","","9 Feb 2021","","","IEEE","IEEE Conferences"
"DeepEvolution: A Search-Based Testing Approach for Deep Neural Networks","H. Ben Braiek; F. Khomh",Polytechnic Montreal; Polytechnic Montreal,"2019 IEEE International Conference on Software Maintenance and Evolution (ICSME)","5 Dec 2019","2019","","","454","458","The increasing inclusion of Deep Learning (DL) models in safety-critical systems such as autonomous vehicles have led to the development of multiple model-based DL testing techniques. One common denominator of these testing techniques is the automated generation of test cases, e.g., new inputs transformed from the original training data with the aim to optimize some test adequacy criteria. So far, the effectiveness of these approaches has been hindered by their reliance on random fuzzing or transformations that do not always produce test cases with a good diversity. To overcome these limitations, we propose, DeepEvolution, a novel search-based approach for testing DL models that relies on metaheuristics to ensure a maximum diversity in generated test cases. We assess the effectiveness of DeepEvolution in testing computer-vision DL models and found that it significantly increases the neuronal coverage of generated test cases. Moreover, using DeepEvolution, we could successfully find several corner-case behaviors. Finally, DeepEvolution outperformed Tensorfuzz (a coverage-guided fuzzing tool developed at Google Brain) in detecting latent defects introduced during the quantization of the models. These results suggest that search-based approaches can help build effective testing tools for DL systems.","2576-3148","978-1-7281-3094-1","10.1109/ICSME.2019.00078","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8919189","Software Testing;Deep Learning;Computer Vision;Search Based Testing;Metamorphic Testing","Computational modeling;Neurons;Quantization (signal);Space exploration;Software testing;Software","learning (artificial intelligence);neural nets;program testing","multiple model-based;testing techniques;automated generation;test adequacy criteria;random fuzzing;DeepEvolution;search-based approach;generated test cases;corner-case behaviors;effective testing tools;deep neural networks;safety-critical systems;deep learning models","","2","","19","","5 Dec 2019","","","IEEE","IEEE Conferences"
"Hook-based mobile software testing by using aspect-oriented programming","Y. Ma; E. M. Choi","Dept. of Computer Engineering, Dongguk University, Seoul, 100-715, Korea; Dept. of Computer Engineering, Dongguk University, Seoul, 100-715, Korea","2012 International Conference on Systems and Informatics (ICSAI2012)","25 Jun 2012","2012","","","2528","2532","The debugging for mobile software has been became supported easily and strongly by diversified technology such as performance analysis, tracing, and memory debugging. However, testers who want to find and locate knotty defects between the various components of embedded software feel that just using debugging tools is not enough. Although, using testing tools can achieve the target, but not all the testing tools can be deployed on the real device. So in this paper, we describe a new user-friendly Hook-based testing approach for embedded software. Besides introducing the concept of Hook-based testing, we show how to use AOP to implement components testing on the target easily. Meanwhile, we will provide the testing result by process tracing, and memory checking. Finally we compare with famous debugging tools to prove our approach much better.","","978-1-4673-0199-2","10.1109/ICSAI.2012.6223568","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6223568","","Testing;Embedded software;Abstracts;Debugging;Embedded systems;Monitoring","aspect-oriented programming;mobile computing;program debugging;program testing","Hook-based mobile software testing;aspect-oriented programming;mobile software debugging;performance analysis;performance tracing;memory debugging;embedded software;AOP;components testing;process tracing;memory checking","","","","7","","25 Jun 2012","","","IEEE","IEEE Conferences"
"Help, help, i'm being suppressed! The significance of suppressors in software testing","A. Groce; C. Zhang; M. A. Alipour; E. Eide; Y. Chen; J. Regehr",School of Electrical Engineering and Computer Science Oregon State University; School of Electrical Engineering and Computer Science Oregon State University; School of Electrical Engineering and Computer Science Oregon State University; School of Computing University of Utah; School of Computing University of Utah; School of Computing University of Utah,"2013 IEEE 24th International Symposium on Software Reliability Engineering (ISSRE)","2 Jan 2014","2013","","","390","399","Test features are basic compositional units used to describe what a test does (and does not) involve. For example, in API-based testing, the most obvious features are function calls; in grammar-based testing, the obvious features are the elements of the grammar. The relationship between features as abstractions of tests and produced behaviors of the tested program is surprisingly poorly understood. This paper shows how large-scale random testing modified to use diverse feature sets can uncover causal relationships between what a test contains and what the program being tested does. We introduce a general notion of observable behaviors as targets, where a target can be a detected fault, an executed branch or statement, or a complex coverage entity such as a state, predicate-valuation, or program path. While it is obvious that targets have triggers - features without which they cannot be hit by a test - the notion of suppressors - features which make a test less likely to hit a target - has received little attention despite having important implications for automated test generation and program understanding. For a set of subjects including C compilers, a flash file system, and JavaScript engines, we show that suppression is both common and important.","2332-6549","978-1-4799-2366-3","10.1109/ISSRE.2013.6698892","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6698892","","Testing;HTML;Computer crashes;Sociology;Statistics;Containers;Grammar","authoring languages;fault diagnosis;file organisation;program diagnostics;program testing;software fault tolerance","software testing;test features;compositional units;API-based testing;grammar-based testing;large-scale random testing;causal relationships;complex coverage entity;fault detection;predicate-valuation;program path;automated test generation;program understanding;flash file system;JavaScript engines","","12","","31","","2 Jan 2014","","","IEEE","IEEE Conferences"
"Survey on selenium tool in software testing","I. Altaf; J. A. Dar; F. u. Rashid; M. Rafiq","Department of Computer Science and Engineering, Amity University, Noida, India; Department of Computer Science and Engineering, Islamic University Of Science & technology, Kashmir, India; Department of Computer Science and Engineering, Islamic University Of Science & technology, Kashmir, India; Department of Computer Science and Engineering, Islamic University of Science & technology, Kashmir, India","2015 International Conference on Green Computing and Internet of Things (ICGCIoT)","14 Jan 2016","2015","","","1378","1383","We are moving towards a general public where web is the need of hour. Today the vast majority of the product applications executed, are composed as online applications which are keep running in a web program. Testing programming applications is critical. Numerous associations make utilization of a specific web application, so the same web applications are tried habitually by diverse clients from distinctive regions physically. Testing a web application physically is tedious, so we go for test automation. In test automation we make utilization of a product device to run repeatable tests against the application to be tried. There are various focal points of test automation. They are exceptionally exact and have more prominent preparing pace when contrasted with manual automation. There are various open source and business devices accessible for test mechanization. Selenium is one of the broadly utilized open source device for test computerization. Test automation enhances the effectiveness of programming testing procedures. Test automation gives quick criticism to engineers. It additionally discovers the imperfections when one may miss in the manual testing. In test automation we can perform boundless emphases for testing the same example of code ceaselessly commonly.","","978-1-4673-7910-6","10.1109/ICGCIoT.2015.7380682","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7380682","selenium;aka.selenium;selenium grid;selenium control;selenium ide;web driver;test case;RC","Selenium;Testing;Libraries;Java;Servers","automatic testing;Internet;program testing;public domain software","product applications;online applications;Web program;programming application testing;Web application;test automation;product device utilization;business devices;open source devices;test mechanization;test computerization;selenium tool;software testing","","5","","17","","14 Jan 2016","","","IEEE","IEEE Conferences"
"An Improved Test Case Generation Method of Pair-Wise Testing","Q. Feng-an; J. Jian-hui","Tongji University, Shanghai 201804,China; Tongji University, Shanghai 201804,China","16th Asian Test Symposium (ATS 2007)","21 Nov 2007","2007","","","149","154","Pair-wise testing is a testing criterion based on specification, which requires that for each pair of parameters, every combination of their valid value should be covered by at least one test case in the test set. This paper presents an improved method based on AETG. Experimental results show that the size of test set produced by our method is relatively small. In addition, the method can be easily implemented.","2377-5386","978-0-7695-2890-8","10.1109/ATS.2007.65","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4388001","","System testing;Software testing;Laboratories;Embedded system;Embedded computing;Computer science education;Computer science;Educational technology;Diversity reception;Costs","automatic test pattern generation;logic testing","test case generation method;pair-wise testing;AETG","","4","","13","","21 Nov 2007","","","IEEE","IEEE Conferences"
"SBST Tool Competition 2021","S. Panichella; A. Gambi; F. Zampetti; V. Riccio","Zurich University of Applied Science (ZHAW),Zurich,Switzerland; University of Passau,Passau,Germany; University of Sannio,Benevento,Italy; Software Institute - USI,Lugano,Switzerland","2021 IEEE/ACM 14th International Workshop on Search-Based Software Testing (SBST)","13 Jul 2021","2021","","","20","27","We report on the organization, challenges, and results of the ninth edition of the Java Unit Testing Competition as well as the first edition of the Cyber-Physical Systems Testing Tool Competition. Java Unit Testing Competition. This year, five tools, Randoop, UtBot, Kex, Evosuite, and EvosuiteDSE, were executed on a benchmark with (i) new classes under test, selected from three open-source software projects, and (ii) the set of classes from three projects considered in the eighth edition. We relied on an improved Docker infrastructure to execute the tools and the subsequent coverage and mutation analysis. Given the high number of participants, we considered only two time budgets for test case generation: thirty seconds and two minutes. Cyber- Physical Systems Testing Tool Competition. Five tools, Deeper, Frenetic, GABExplore, GAB Exploit, and Swat, competed on testing self-driving car software by generating simulation-based tests using our new testing infrastructure. We considered two experimental settings to study test generators' transitory and asymptotic behaviors and evaluated the tools' test generation effectiveness and the exposed failures' diversity. This paper describes our methodology, the statistical analysis of the results together with the contestant tools, and the challenges faced while running the competition experiments.","","978-1-6654-4571-9","10.1109/SBST52555.2021.00011","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9476243","Competition;Tools;Unit Testing;Simulation based Testing;Java;Self driving car software;Automated Test Generation","Software testing;Java;System testing;Statistical analysis;Organizations;Tools;Cyber-physical systems","benchmark testing;Java;program testing;public domain software;statistical analysis","SBST Tool Competition;Java Unit Testing Competition;Cyber-Physical Systems;open-source software projects;test case generation;cyber-physical systems;self-driving car software;simulation-based tests;testing infrastructure;statistical analysis","","1","","36","","13 Jul 2021","","","IEEE","IEEE Conferences"
"Towards a zero-defect product-the End-To-End test process","R. K. Prasad","AT&T Bell Labs., USA","Proceedings of 1994 1st International Conference on Software Testing, Reliability and Quality Assurance (STRQA'94)","6 Aug 2002","1994","","","137","147","The competitive market place today demands the best of everything-quality, cost and schedule. The ontime delivery of an error-free product at minimal cost are standards that demanding customers expect and good suppliers continually strive to meet. It is no easy task to strike an effective balance where quality is accomplished without sacrificing schedules and incurring unplanned costs-and to do so consistently, release after release. There is no silver bullet. However, there is a great deal of merit to establishing a well thought out process before-hand, planning the product release steps carefully, and monitoring and controlling the entire release cycle with discipline. I propose to share, from a tester point of view, the approach and experiences from the ontime, at-budget, zero defect delivery of one software development project-approximately 400,000 lines of code, with a very large and diverse customer base. In my opinion, the apriori definition and, more importantly, the buy-in from all the players in the project for the End-to-End test process and the disciplined release management of the project contributed significantly to the success story for this software project.","","0-7803-2608-3","10.1109/STRQA.1994.526399","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=526399","","System testing;Software testing;Costs;Programming;Systems engineering and theory;Project management;Silver;Process planning;Monitoring;Quality assurance","software development management;project management;program testing;software quality;software cost estimation","zero-defect product;End-To-End test process;competitive market place;software quality;software project cost;schedule;product release steps;software development project;release management","","1","","11","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Harvesting Production GraphQL Queries to Detect Schema Faults","L. Zetterlund; D. Tiwari; M. Monperrus; B. Baudry","Redeye AB,Sweden; KTH Royal Institute of Technology,Sweden; KTH Royal Institute of Technology,Sweden; KTH Royal Institute of Technology,Sweden","2022 IEEE Conference on Software Testing, Verification and Validation (ICST)","8 Jun 2022","2022","","","365","376","GraphQL is a new paradigm to design web APIs. Despite its growing popularity, there are few techniques to verify the implementation of a GraphQL API. We present a new testing approach based on GraphQL queries that are logged while users interact with an application in production. Our core motivation is that production queries capture real usages of the application, and are known to trigger behavior that may not be tested by developers. For each logged query, a test is generated to assert the validity of the GraphQL response with respect to the schema. We implement our approach in a tool called AutoGraphQL, and evaluate it on two real-world case studies that are diverse in their domain and technology stack: an open-source e-commerce application implemented in Python called Saleor, and an industrial case study which is a PHP-based finance website called Frontapp. AutoGraphQL successfully generates test cases for the two applications. The generated tests cover 26.9 &#x0025; of the Saleor schema, including parts of the API not exercised by the original test suite, as well as 48.7&#x0025; of the Frontapp schema, detecting 8 schema faults, thanks to production queries.","2159-4848","978-1-6654-6679-0","10.1109/ICST53961.2022.00014","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9787849","GraphQL;production monitoring;automated test generation;test oracle;API testing;schema","Software testing;Conferences;Pipelines;Finance;Production;Behavioral sciences;Test pattern generators","application program interfaces;electronic commerce;graph theory;Internet;program testing;query processing","AutoGraphQL;Saleor schema;original test suite;Frontapp schema;8 schema faults;harvesting production GraphQL queries;detect schema faults;web APIs;GraphQL API;testing approach;core motivation;production queries capture real usages;logged query;GraphQL response;real-world case studies;technology stack;open-source e-commerce application;PHP-based finance website","","","","50","IEEE","8 Jun 2022","","","IEEE","IEEE Conferences"
"On the similarities and differences between program documentation and test documentation","S. Tilley; T. Parveen","Florida Institute of Technology, USA; Independent Consultant, USA","2012 IEEE International Professional Communication Conference","10 Jan 2013","2012","","","1","2","Program documentation is a vital source of information for software engineers charged with making changes to complex applications. Test documentation can be used to help future stakeholders understand the rationale behind the testing effort. This panel will discuss some of the similar features and salient differences between program documentation and test documentation. Although both types of documentation are usually written by and for different groups of people (for reasonable-sized projects), there is enough overlap that each could be improved by studying the communication strategies of the other.","2158-1002","978-1-4577-2126-7","10.1109/IPCC.2012.6408643","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6408643","Communication;program documentation;test documentation","Documentation;Software;Software engineering;Software testing;IEEE standards","program testing;software engineering;system documentation","program documentation;test documentation;software engineers;reasonable-sized projects;communication strategies","","","","5","","10 Jan 2013","","","IEEE","IEEE Conferences"
"Predictive data mining model for software bug estimation using average weighted similarity","N. K. Nagwani; S. Verma","Department of CS&E, NIT Raipur, India; Department of Info. Tech., NIT Raipur, India","2010 IEEE 2nd International Advance Computing Conference (IACC)","1 Mar 2010","2010","","","373","378","Software bug estimation is a very essential activity for effective and proper software project planning. All the software bug related data are kept in software bug repositories. Software bug (defect) repositories contains lot of useful information related to the development of a project. Data mining techniques can be applied on these repositories to discover useful interesting patterns. In this paper a prediction data mining technique is proposed to predict the software bug estimation from a software bug repository. A two step prediction model is proposed In the first step bug for which estimation is required, its summary and description is matched against the summary and description of bugs available in bug repositories. A weighted similarity model is suggested to match the summary and description for a pair of software bugs. In the second step the fix duration of all the similar bugs are calculated and stored and its average is calculated, which indicates the predicted estimation of a bug. The proposed model is implemented using open source technologies and is explained with the help of illustrative example.","","978-1-4244-4790-9","10.1109/IADCC.2010.5422923","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5422923","Software bug repositories;Bug estimation;Weighted Similarity;Estimation Prediction","Data mining;Predictive models;Computer bugs;Open source software;Project management;Programming;Software testing;System testing;Software quality;Software development management","data mining;public domain software;software libraries","predictive data mining model;software bug estimation;average weighted similarity;software project planning;software bug repositories;open source technologies","","9","","11","","1 Mar 2010","","","IEEE","IEEE Conferences"
"The Art, Science, and Engineering of Fuzzing: A Survey","V. J. M. Manès; H. Han; C. Han; S. K. Cha; M. Egele; E. J. Schwartz; M. Woo","KAIST Cyber Security Research Center, Daejeon, Korea; KAIST, Daejeon, Korea; Naver Corp., Daejeon, Korea; KAIST, Daejeon, Korea; Boston University, Boston, MA, USA; Software Engineering Institute, Carnegie Mellon University, Pittsburgh, PA, USA; Carnegie Mellon University, Pittsburgh, PA, USA","IEEE Transactions on Software Engineering","11 Nov 2021","2021","47","11","2312","2331","Among the many software testing techniques available today, <italic>fuzzing</italic> has remained highly popular due to its conceptual simplicity, its low barrier to deployment, and its vast amount of empirical evidence in discovering real-world software vulnerabilities. At a high level, fuzzing refers to a process of repeatedly running a program with generated inputs that may be syntactically or semantically malformed. While researchers and practitioners alike have invested a large and diverse effort towards improving fuzzing in recent years, this surge of work has also made it difficult to gain a comprehensive and coherent view of fuzzing. To help preserve and bring coherence to the vast literature of fuzzing, this paper presents a unified, general-purpose model of fuzzing together with a taxonomy of the current fuzzing literature. We methodically explore the design decisions at every stage of our model fuzzer by surveying the related literature and innovations in the art, science, and engineering that make modern-day fuzzers effective.","1939-3520","","10.1109/TSE.2019.2946563","Institute of Information & communications Technology Planning & Evaluation(grant numbers:2019-0-01697); Development of Automated Vulnerability Discovery Technologies for Blockchain Platform Security; Siemens; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8863940","Software security;automated software testing;fuzzing;fuzz testing","Fuzzing;Security;Computer bugs;Terminology","program testing;security of data","software testing techniques;real-world software vulnerabilities;fuzzing","","41","","250","IEEE","11 Oct 2019","","","IEEE","IEEE Journals"
"Similarity-Based Search for Model Checking: A Pilot Study with Java PathFinder","E. Ibrahimov; J. Wang; Z. Q. Zhou","Sch. of Comput. Sci. & Software Eng., Univ. of Wollongong, Wollongong, NSW, Australia; Sch. of Comput. Sci. & Software Eng., Univ. of Wollongong, Wollongong, NSW, Australia; Sch. of Comput. Sci. & Software Eng., Univ. of Wollongong, Wollongong, NSW, Australia","2013 13th International Conference on Quality Software","23 Sep 2013","2013","","","238","244","When a model checker cannot explore the entire state space because of limited resources, model checking becomes a kind of testing with an attempt to find a failure (violation of properties) quickly. We consider two state sequences in model checking: (i) the sequence in which new states are generated, and (ii) the sequence in which the states generated in sequence (i) are checked for property violation. We observe that neighboring states in sequence (i) often have similarities in certain ways. Based on this observation we propose a search strategy, which generates sequence (ii) in such a way that similar states are evenly spread over the sequence. As a result, neighboring states in sequence (ii) can have a higher diversity. A pilot empirical study with Java Path Finder suggests that the proposed strategy can outperform random search in terms of creating equal or smaller number of states to detect a failure.","2332-662X","978-0-7695-5039-8","10.1109/QSIC.2013.15","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6605933","Model checking;random search;similarity-based search;heuristics;adaptive random sequence;Java PathFinder","Scattering;Java;Subspace constraints;Model checking;Search problems;Random sequences","failure analysis;Java;program testing;program verification","similarity-based search;model checking;Java PathFinder;state space;software testing;software failure;state sequences;software property violation;empirical analysis","","","","6","","23 Sep 2013","","","IEEE","IEEE Conferences"
"Comparing and Combining Analysis-Based and Learning-Based Regression Test Selection","J. Zhang; Y. Liu; M. Gligoric; O. Legunsen; A. Shi","University of Texas at Austin,Austin,TX,USA; University of Texas at Austin,Austin,TX,USA; University of Texas at Austin,Austin,TX,USA; Cornell University,Ithaca,NY,USA; University of Texas at Austin,Austin,TX,USA","2022 IEEE/ACM International Conference on Automation of Software Test (AST)","17 Jun 2022","2022","","","17","28","Regression testing&#x2013;rerunning tests on each code version to detect newly&#x2013;broken functionality-is important and widely practiced. But, regression testing is costly due to the large number of tests and the high frequency of code changes. Regression test selection (RTS) optimizes regression testing by only rerunning a subset of tests that can be affected by changes. Researchers showed that RTS based on program analysis can save substantial testing time for (medium-sized) open-source projects. Practitioners also showed that RTS based on machine learning (ML) works well on very large code repositories, e.g., in Facebook&#x2019;s monorepository. We combine analysis-based RTS and ML-based RTS by using the latter to choose a subset of tests selected by the former. We first train several novel ML models to learn the impact of code changes on test outcomes using a training dataset that we obtain via mutation analysis. Then, we evaluate the benefits of combining ML models with analysis-based RTS on 10 projects, compared with using each technique alone. Combining ML-based RTS with two analysis-based RTS techniques-Ekstazi and STARTS-selects 25.34&#x0025; and 21.44&#x0025; fewer tests, respectively. CCS CONCEPTS &#x2022; Software and its engineering $\rightarrow$Software testing and debugging.","","978-1-4503-9286-0","","Google; National Science Foundation; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9796454","Regression testing;regression test selection;machine learning;program analysis.","Training;Analytical models;Codes;Social networking (online);Diversity reception;Machine learning;Debugging","","","","","","86","","17 Jun 2022","","","IEEE","IEEE Conferences"
"Constraint Handling in NSGA-II for Solving Optimal Testing Resource Allocation Problems","G. Zhang; Z. Su; M. Li; F. Yue; J. Jiang; X. Yao","School of Computer and Information, Hefei University of Technology, Hefei, China; School of Computer and Information, Hefei University of Technology, Hefei, China; CERCIA, School of Computer Science, University of Birmingham, Birmingham, U.K.; School of Computer and Information, Hefei University of Technology, Hefei, China; School of Computer and Information, Hefei University of Technology, Hefei, China; Department of Computer Science and Engineering, Shenzhen Key Lab of Computational Intelligence, Southern University of Science and Technology, Shenzhen, China","IEEE Transactions on Reliability","29 Nov 2017","2017","66","4","1193","1212","In software testing, optimal testing resource allocation problems (OTRAPs) are important when seeking a good tradeoff between reliability, cost, and time with limited resources. There have been intensive studies of OTRAPs using multiobjective evolutionary algorithms (MOEAs), but little attention has been paid to the constraint handling. This paper comprehensively investigates the effect of the constraint handling on the performance of nondominated sorting genetic algorithm II (NSGA-II) for solving OTRAPs, from both theoretical and empirical perspectives. The heuristics for individual repairs are first proposed to handle constraint violations in NSGA-II, based on which several properties are derived. Additionally, the Z-score based Euclidean distance is adopted to estimate the difference between solutions. Finally, the above methods are evaluated and the experiments show several results. 1) The developed heuristics for constraint handling are better than the Existing Strategy in terms of the capacity and coverage values. 2) The Z-score operation obtains better diversity values and reduces repeated solutions. 3) The modified NSGA-II for OTRAPs (called NSGA-II-TRA) performs significantly better than the existing MOEAs in terms of capacity and coverage values, which suggests that NSGA-II-TRA could obtain more and higher quality testing-time-allocation schemes, especially for large, complex datasets. 4) NSGA-II-TRA is robust according to the sensitivity analysis results.","1558-1721","","10.1109/TR.2017.2738660","National Natural Science Foundation of China(grant numbers:61573125,61329302,61371155); Engineering and Physical Sciences Research Council(grant numbers:EP/J017515/1); Anhui Provincial Natural Science Foundation(grant numbers:1608085MF131,1508085MF132,1508085QF129); Science and Technology Innovation Committee Foundation of Shenzhen(grant numbers:ZDSYS201703031748284); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8023833","Constraint handling;heuristics;multiobjective optimization;software reliability;testing-resource allocation","Software reliability;Software systems;Resource management;Software testing","constraint handling;genetic algorithms;program testing;resource allocation;software reliability","software testing;optimal testing resource allocation problems;multiobjective evolutionary algorithms;nondominated sorting genetic algorithm II;Z-score based Euclidean distance;NSGA-II-TRA;quality testing-time-allocation schemes;OTRAPs;MOEAs;heuristics;constraint violation handling","","17","","47","IEEE","31 Aug 2017","","","IEEE","IEEE Journals"
"Using similarity measures for test scenario selection","P. G. Sapna; H. Mohanty","Department of Computer and Information Sciences, University of Hyderabad, India; Department of Computer and Information Sciences, University of Hyderabad, India","2009 International Conference on Industrial and Information Systems (ICIIS)","11 Mar 2010","2009","","","386","391","Specification based testing involves using specification as the basis for generating test cases. The Unified Modeling Language (UML) consists of diagrams to capture the static and dynamic behaviour of a system. Generating test scenarios using UML activity diagrams produces all possible scenarios which is impossible to test exhaustively. Test scenario selection involves selecting an effective subset of scenarios for testing. This paper presents a new metric based on common subscenario between scenarios, their lengths, and weights based on the position of the common subscenario in the scenario. The aim of this strategy is to select scenarios that are least similar and at the same time provide high coverage. The method is compared with results of random selection to study effectiveness of our technique.","2164-7011","978-1-4244-4836-4","10.1109/ICIINFS.2009.5429829","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5429829","","Software testing;Unified modeling language;System testing;Costs;Programming;Software quality;Fault detection;Object oriented modeling;Computer industry;Information systems","program testing;Unified Modeling Language","similarity measure;test scenario selection;specification based testing;test case generation;unified modeling language;system static behaviour;system dynamic behaviour;UML activity diagram","","1","","12","","11 Mar 2010","","","IEEE","IEEE Conferences"
"The effect of testing on reliability of fault-tolerant software","P. Popov; B. Littlewood","Centre for Software Reliability, City Univ., London, UK; Centre for Software Reliability, City Univ., London, UK","International Conference on Dependable Systems and Networks, 2004","26 Jul 2004","2004","","","265","274","Previous models have investigated the impact upon diversity - and hence upon the reliability of fault-tolerant software built from 'diverse' versions - of the variation in 'difficulty' of demands over the demand space. These models are essentially static, taking a single snapshot view of the system. In this paper, we consider a generalisation in which the individual versions are allowed to evolve - and their reliability to grow - through debugging. In particular, we examine the trade-off that occurs in testing between, on the one hand, the increasing reliability of individual versions, and on the other hand the possible diminution of diversity.","","0-7695-2052-9","10.1109/DSN.2004.1311896","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1311896","","Software testing;Fault tolerance;Fault tolerant systems;Battery powered vehicles;Software reliability;Debugging;Stochastic processes;Parameter estimation;Computer industry;Hardware","program testing;software fault tolerance;reliability;program debugging","reliability testing;fault-tolerant software;software debugging;software testing","","9","","7","","26 Jul 2004","","","IEEE","IEEE Conferences"
"Implementation of a real-time multiple input multiple output channel estimator on the smart antenna software radio test system platform using the Xilinx Virtex 2 Pro Field Programmable Gate Array","P. J. Green; D. P. Taylor","Dept. of Electr. & Comput. Eng., Canterbury Univ.; NA","2006 IEEE International Conference on Field Programmable Technology","2 Jan 2007","2006","","","257","260","This paper describes the concept, architecture, development and demonstration of a real time, channel estimator system on a Xilinx Virtex 2 Pro field programmable gate array for a 4-transmit 4-receiver multiple input and multiple output (MIMO) wireless test platform. It is designed and developed for research into receiver diversity and MIMO wireless systems. Hardware, firmware, use of the Xilinx Core Generator Intellectual Property modules and experimental verification of the channel estimator are discussed","","0-7803-9728-2","10.1109/FPT.2006.270322","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4042444","","Real time systems;MIMO;Software radio;Software testing;System testing;Antenna arrays;Field programmable gate arrays;Computer architecture;Hardware;Microprogramming","adaptive antenna arrays;antenna testing;channel estimation;field programmable gate arrays;MIMO systems","field programmable gate array;channel estimator;receiver diversity;MIMO wireless systems;Xilinx core generator;Xilinx Virtex 2 Pro;intellectual property","","2","","7","","2 Jan 2007","","","IEEE","IEEE Conferences"
"Modified ACO to maintain diversity in regression test optimization","S. Kumar; P. Ranjan; R. Rajesh","Department of computer science, Central University of South Bihar, India; Department of computer science, Central University of South Bihar, India; Department of computer science, Central University of South Bihar, India","2016 3rd International Conference on Recent Advances in Information Technology (RAIT)","9 Jul 2016","2016","","","619","625","Regression testing is unavoidable maintenance activity that is performed several times in software development life cycle. Optimization of regression test case is required to minimize the test case (which will in-turn reduce the time and cost of testing) and to find the fault in early testing activity. The two widely used regression test case optimization techniques, namely, selection and prioritization are recently found to be integrated with different metaheuristic algorithms for fruitful regression test cases. Among the various meta-heuristic algorithms, Ant colony optimization (ACO) algorithm is most popularly used. ACO will try to find the smallest path out all the test cases and it is not sufficient because it will not cover all the test cases which are needed. In this paper we have proposed a modified ant colony optimization to solve test cases in huge search space. The modified algorithm selects the best test cases that find the maximum fault in minimum time.","","978-1-4799-8579-1","10.1109/RAIT.2016.7507970","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7507970","Regresssion testing;Soft computing;Multi-objective optimization;Test case optimization;Nature Based Optimization","Optimization;Software;Ant colony optimization;Software algorithms;Software testing;Maintenance engineering","ant colony optimisation;program testing;regression analysis;search problems;software development management;software maintenance","ACO;maintenance activity;software development life cycle;regression test case optimization techniques;ant colony optimization;search space","","3","","24","","9 Jul 2016","","","IEEE","IEEE Conferences"
"Automatic Identification of High Impact Bug Report by Test Smells of Textual Similar Bug Reports","J. Ding; G. Fan; H. Yu; Z. Huang","East China University of Science and Technology,Department of Computer Science and Engineering; East China University of Science and Technology,Department of Computer Science and Engineering; East China University of Science and Technology,Department of Computer Science and Engineering; East China University of Science and Technology,Department of Computer Science and Engineering","2021 IEEE 21st International Conference on Software Quality, Reliability and Security (QRS)","10 Mar 2022","2021","","","446","457","Bug reports are written by the software stakeholders to track software defects and vulnerabilities. Since Software Quality Assurance (SQA) resources are limited, developers tend to resolve High-Impact Bugs (HIB) in advance. Prior research identified HIBs by analyzing the textual information in bug reports. However, they only consider textual information instead of the root cause of bugs, such as code quality. Since prior study revealed software test smells (i.e., sub-optimal test code implementation) are related to bug proneness, we intend to measure test smell distribution in textual similar bug reports to identify HIB reports. We first construct an effective model, which outperforms the baseline by 29.3% in terms of AUC-ROC. Secondly, we use SHAP to compute the importance of test smell features. Finally, we conduct an empirical survey to discuss the relationship between test smell and HIB reports. Result shows that Assertion Roulette and Conditional Test Logic test smell are important factors in distinguishing the types of bug reports.","2693-9177","978-1-6654-5813-9","10.1109/QRS54544.2021.00056","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9724899","high impact bug report;test code smell;software quality assurance;empirical software engineering","Codes;Computer bugs;Software quality;Predictive models;Reliability engineering;Software reliability;Security","logic testing;program debugging;program testing;quality assurance;software maintenance;software metrics;software quality","Conditional Test Logic test smell;High Impact bug report;Test smells;textual similar bug reports;software stakeholders;software defects;Software Quality Assurance resources;High-Impact Bugs;textual information;prior study revealed software test;sub-optimal test code implementation;bug proneness;test smell distribution;HIB reports;test smell features","","","","41","IEEE","10 Mar 2022","","","IEEE","IEEE Conferences"
"Simulation for Robotics Test Automation: Developer Perspectives","A. Afzal; D. S. Katz; C. Le Goues; C. S. Timperley","Carnegie Mellon University,Pittsburgh,PA; Carnegie Mellon University,Pittsburgh,PA; Carnegie Mellon University,Pittsburgh,PA; Carnegie Mellon University,Pittsburgh,PA","2021 14th IEEE Conference on Software Testing, Verification and Validation (ICST)","24 May 2021","2021","","","263","274","Robotics simulation plays an important role in the design, development, and verification and validation of robotics systems. Simulation represents a potentially cheaper, safer, and more reliable alternative to the widely used practice of manual field testing, and introduces valuable opportunities for extensive test automation. The goal of this paper is to develop a principled understanding of the ways robotics developers use simulation in their testing processes and the challenges they face in doing so. This understanding can guide the improvement of simulators and testing techniques for modern robotics development.To that end, we conduct a survey of 82 robotics developers from a diversity of backgrounds, addressing the current capabilities and limits of simulation in practice. We find that simulation is used by 84% of our participants for testing, and that many participants want to use simulation as part of their test automation. Using qualitative and quantitative research methods, we identify 10 high-level challenges that impede developers from using simulation for manual and automated testing and in general. These challenges include the gap between simulation and reality, a lack of reproducibility, and considerable resource costs associated with simulation. Finally, we outline ways in which simulators can be improved for use as a means of verification and validation and ways that the software engineering community can contribute to these improvements.","2159-4848","978-1-7281-6836-4","10.1109/ICST49551.2021.00036","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9438553","robotics simulation challenges;robotics testing;simulation testing;testing challenges;empirical study;practitioner survey","Software testing;Automation;Manuals;Tools;Reproducibility of results;Reliability;Robots","control engineering computing;mobile robots;program testing;software engineering","robotics test automation;robotics simulation;robotics systems;testing processes;testing techniques;modern robotics development;robotics developers;qualitative research methods;quantitative research methods;high-level challenges;automated testing","","2","","76","","24 May 2021","","","IEEE","IEEE Conferences"
"Estimating Fault Numbers Remaining After Testing","M. Roper","Dept. Comput. & Inf. Sci., Univ. of Strathclyde, Glasgow, UK","2013 IEEE Sixth International Conference on Software Testing, Verification and Validation","29 Jul 2013","2013","","","272","281","Testing is an essential component of the software development process, but also one which is exceptionally difficult to manage and control. For example, it is well understood that testing techniques are not guaranteed to detect all faults, but more frustrating is that after the application of a testing technique the tester has little or no knowledge of how many faults might still be left undiscovered. This paper investigates the performance of a range of capture-recapture models to determine the accuracy with which they predict the number of defects remaining after testing. The models are evaluated with data from two empirical testing-related studies and from one larger publicly available project and the factors affecting the accuracy of the models are analysed. The paper also considers how additional information (such as structural coverage data) may be used to improve the accuracy of the estimates. The results demonstrate that diverse sets of faults resulting from different testers using different techniques tend to produce the most accurate results, and also illustrate the sensitivity of the estimators to the patterns of fault data.","2159-4848","978-0-7695-4968-2","10.1109/ICST.2013.43","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6569739","Testing;Fault Estimation;Capture-Recapture","Testing;Animals;Charge carrier processes;Data models;Software;Sociology;Statistics","program testing;software fault tolerance","fault number estimation;software testing;software development process;fault detection;capture-recapture model;empirical testing","","2","","22","","29 Jul 2013","","","IEEE","IEEE Conferences"
"Cross-Device Difference Detector for Mobile Application GUI Compatibility Testing","Y. Ren; Y. Gu; Z. Ma; H. Zhu; F. Yin","Baidu China Co. Ltd,China; Baidu China Co. Ltd,China; Beijing Information Science &amp; Technology University,School of Instrument Science and opto Electronics Engineering,Beijing,China; Baidu China Co. Ltd,China; Baidu China Co. Ltd,China","2022 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","8 Jun 2022","2022","","","253","260","Graphical user interface (GUI) significantly affects the lifetime of mobile applications. However, the diversity of mobile technologies, platforms, and devices makes the GUI compatibility testing of mobile applications a challenging task. In this paper, by leveraging computer vision techniques, we take the GUI compatibility testing display problem as a screenshot difference detection problem and propose an image-based method named Cross-Device Difference Detector (CdDiff) to help testers more efficiently and accurately improve mobile application compatibility. Specifically, CdDiff uses a pair of screenshots from two devices as inputs, employs a well-designed page understanding module to extract key screen elements from each screenshot, and then utilizes a discrepancy positioning module to detect and visualize the difference elements between the two screenshots in an easily recognizable way. In addition, we built a cross-device GUI compatibility testing dataset, which contains 725 pairs of user interface screenshots taken from Baidu Netdisk, Baidu App, and Baidu Tieba, displayed on ten popular smartphones. Experiments conducted on the built dataset show that the proposed CdDiff achieved an overall accuracy of 0.924, demonstrating its effectiveness.","2159-4848","978-1-6654-9628-5","10.1109/ICSTW55395.2022.00052","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9787924","Test Result Verification;Mobile App;Compatibility Testing;Computer Vision","Software testing;Performance evaluation;Visualization;Conferences;Web and internet services;Detectors;Mobile applications","computer vision;graphical user interfaces;mobile computing;program testing;smart phones;user interfaces","screenshot difference detection problem;image-based method named Cross-Device Difference Detector;CdDiff;mobile application compatibility;difference elements;cross-device GUI compatibility testing dataset;user interface screenshots;mobile application GUI compatibility testing;graphical user interface;mobile applications;mobile technologies;leveraging computer vision techniques;display problem","","","","25","IEEE","8 Jun 2022","","","IEEE","IEEE Conferences"
"CITRUS: Automated Unit Testing Tool for Real-world C++ Programs","R. S. Herlim; Y. Kim; M. Kim","KAIST,Daejeon,South Korea; Hanyang University,Seoul,South Korea; KAIST,Daejeon,South Korea","2022 IEEE Conference on Software Testing, Verification and Validation (ICST)","8 Jun 2022","2022","","","400","410","C++ is popular in many application domains for its extensibility, flexibility, and high performance. At the same time, however, C++ is infamous for its complex syntax and semantics. Thus, it is challenging to write correct C++ programs and the need to automatically test C++ programs has been high. Unfortunately, due to the high complexity of C++ (e.g., template instantiation, complex STL types, etc.), there are almost no automated unit testing tool publicly available for real-world C++ programs. We have developed a new automated unit testing tool CITRUS that resolves the aforementioned complexity of C++ programs. After analyzing the source code of a target C++ program P, CITRUS automatically generates test driver files for P, each of which consists of various method calls of P. Then, to improve the test coverage of P, it generates more diverse test drivers by mutating the test driver code. Also, CITRUS increases the test coverage of <tex>$P$</tex> further by applying libfuzzer to alternate P&#x0027;s state by mutating arguments of the methods. We have demonstrated the testing effectiveness and the efficiency of CITRUS through the experiments on the real-world C++ programs, on which CITRUS achieves up to 95&#x0025; statement and 79&#x0025; branch coverage.","2159-4848","978-1-6654-6679-0","10.1109/ICST53961.2022.00046","IITP(grant numbers:2021-0-00905-001); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9787914","Automated test generation;C++ unit testing;random method sequence generation;code mutation;dynamic analysis","Software testing;Codes;Conferences;Semantics;C++ languages;Syntactics;Complexity theory","C++ language;program testing;software tools","complex syntax;semantics;complex STL types;C++ programs;CITRUS;test driver files;test coverage;test driver code;application domains;automated unit testing tool","","","","33","IEEE","8 Jun 2022","","","IEEE","IEEE Conferences"
"The N-Version Approach to Fault-Tolerant Software","A. Avizienis","Department of Computer Science, University of California","IEEE Transactions on Software Engineering","18 Sep 2006","1985","SE-11","12","1491","1501","Evolution of the N-version software approach to the tolerance of design faults is reviewed. Principal requirements for the implementation of N-version software are summarized and the DEDIX distributed supervisor and testbed for the execution of N-version software is described. Goals of current research are presented and some potential benefits of the N-version approach are identified.","1939-3520","","10.1109/TSE.1985.231893","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1701972","Design diversity;fault tolerance;multiple computation;N-version programming;N-version software;software reliability;tolerance of design faults","Fault tolerance;Circuit faults;Fault tolerant systems;Hardware;Application software;Humans;Computer science;Computer errors;Software testing;Software reliability","","Design diversity;fault tolerance;multiple computation;N-version programming;N-version software;software reliability;tolerance of design faults","","656","23","53","IEEE","18 Sep 2006","","","IEEE","IEEE Journals"
"Discovering Service Similarity by Testing","J. Church; A. Motro","Comput. Sci. Dept., George Mason Univ., Fairfax, VA, USA; Comput. Sci. Dept., George Mason Univ., Fairfax, VA, USA","2011 IEEE International Conference on Services Computing","5 Sep 2011","2011","","","733","734","We describe a comprehensive methodology for discovering service similarity (substitutability) by testing. Our solution does not rely on the service descriptions provided by their authors, it does not assume the existence of ontologies, semantic tagging, or other representations, and it avoids common information retrieval techniques. The only information our method expects is that every service in the repository will be annotated with its inputs and outputs, and that each input and output will be associated with a domain from a published list.","","978-1-4577-0863-3","10.1109/SCC.2011.91","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6009332","Web services;Software testing;Clustering methods;Software reusability","Testing;Indexes;Semantics;Accuracy;Service oriented architecture;Clustering methods","service-oriented architecture;Web services","service similarity discovery;ontologies;semantic tagging;information retrieval techniques","","2","","4","","5 Sep 2011","","","IEEE","IEEE Conferences"
"Improving Continuous Integration with Similarity-Based Test Case Selection","F. G. de Oliveira Neto; A. Ahmad; O. Leifler; K. Sandahl; E. Enoiu","Chalmers | Univ. of Gothenburg, Gothenburg, Sweden; Linkoping Univ., Linkoping, Sweden; Linkoping Univ., Linkoping, Sweden; Linkoping Univ., Linkoping, Sweden; Malardalen Univ., Vasteras, Sweden","2018 IEEE/ACM 13th International Workshop on Automation of Software Test (AST)","15 Nov 2018","2018","","","39","45","Automated testing is an essential component of Continuous Integration (CI) and Delivery (CD), such as scheduling automated test sessions on overnight builds. That allows stakeholders to execute entire test suites and achieve exhaustive test coverage, since running all tests is often infeasible during work hours, i.e., in parallel to development activities. On the other hand, developers also need test feedback from CI servers when pushing changes, even if not all test cases are executed. In this paper we evaluate similarity-based test case selection (SBTCS) on integration-level tests executed on continuous integration pipelines of two companies. We select test cases that maximise diversity of test coverage and reduce feedback time to developers. Our results confirm existing evidence that SBTCS is a strong candidate for test optimisation, by reducing feedback time (up to 92% faster in our case studies) while achieving full test coverage using only information from test artefacts themselves.","","978-1-4503-5743-2","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8536348","Similarity based test case selection;Continuous integration;Automated testing","Testing;Companies;Pipelines;Optimization;Software;Servers;Instruments","parallel processing;program testing","test feedback;similarity-based test case selection;integration-level tests;test optimisation;automated testing;continuous integration;continuous delivery;CI;CD;SBTCS","","","","21","","15 Nov 2018","","","IEEE","IEEE Conferences"
"Automated generation of diverse and challenging scenarios for test and evaluation of autonomous vehicles","G. E. Mullins; P. G. Stankiewicz; S. K. Gupta","Department of Mechanical Engineering and Institute for Systems Research, University of Maryland, College Park, MD 20742, USA; Johns Hopkins University Applied Physics Laboratory, 11100 Johns Hopkins Road, Laurel, Maryland 20723, USA; Department of Aerospace and Mechanical Engineering and Center for Advanced Manufacturing, University of Southern California, Los Angeles, California 90089, USA","2017 IEEE International Conference on Robotics and Automation (ICRA)","24 Jul 2017","2017","","","1443","1450","We propose a novel method for generating test scenarios for a black box autonomous system that demonstrate critical transitions in its performance modes. In complex environments it is possible for an autonomous system to fail at its assigned mission even if it complies with requirements for all subsystems and throws no faults. This is particularly true when the autonomous system may have to choose between multiple exclusive objectives. The standard approach of testing robustness through fault detection is directly stimulating the system and detecting violations of the system requirements. Our approach differs by instead running the autonomous system through full missions in a simulated environment and measuring performance based on high-level mission criteria. The result is a method of searching for challenging scenarios for an autonomous system under test that exercise a variety of performance modes. We utilize adaptive sampling to intelligently search the state space for test scenarios which exist on the boundary between distinct performance modes. Additionally, using unsupervised clustering techniques we can group scenarios by their performance modes and sort them by those which are most effective at diagnosing changes in the autonomous system's behavior.","","978-1-5090-4633-1","10.1109/ICRA.2017.7989173","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7989173","","Software;Autonomous vehicles;Robustness;Fault detection;Software testing","control engineering computing;fault diagnosis;pattern clustering;robust control;state-space methods;vehicles","automated generation;autonomous vehicles;black box autonomous system;robustness;fault detection;system requirements;state space;unsupervised clustering","","33","","21","","24 Jul 2017","","","IEEE","IEEE Conferences"
"Adaptive Random Testing for Multiagent Path Finding Systems","Y. Liu; X. -Y. Zhang","Beihang University, Beijing, China; National Institute of Informatics, Tokyo, Japan","IEEE Transactions on Reliability","2 Mar 2022","2022","71","1","295","308","The multiagent path finding (MAPF) problem identifies the scheduling of multiple agents simultaneously, such that all of them can reach their targets efficiently. To date, MAPF systems have been assigned important tasks such as traffics and warehouses. It is essential to conduct testing for MAPF systems to detect potential failures. Namely, in an MAPF system, a test case is a specific MAPF scenario, including the initial locations of the agents and the environment for these agents to play in. By testing, we intend to find the scenarios (i.e., test cases) whose executions reveal failures. Testing MAPF systems is challenging due to the complexity of its input and the interactions among multiple agents. This article proposes the testing approach based on the adaptive random testing (ART) for MAPF systems. ART aims to generate new test cases far from the already executed ones. Particularly, to calculate the distance between each pair of test cases, we introduce two metrics, the initial density distribution and the destination density distribution, to characterize the distribution of the agents’ initial and destination nodes, respectively. Benefit from ART, the diversity of the information generated during testing can be improved. Experimental results show that compared with the random testing, our approach can detect more diverse failure-revealing scenarios.","1558-1721","","10.1109/TR.2022.3146323","ERATO HASUO Metamathematics for Systems Design(grant numbers:JPMJER1603); JST; Engineerable AI Techniques for the Practical Applications of High-Quality Machine Learning-based Systems(grant numbers:JPMJMI20B8); JST-Mirai Program; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9725384","Adaptive random testing (ART);density measurement;multiagent path finding (MAPF);multiagent systems;software testing","Measurement;Adaptive systems;Job shop scheduling;Scalability;Subspace constraints;Benchmark testing;Planning","control engineering computing;mobile robots;multi-agent systems;multi-robot systems;path planning;program testing;scheduling","adaptive random testing;multiagent path finding systems;MAPF system;multiple agents scheduling;failure detection;ART;test cases;destination density distribution;destination nodes;software testing","","","","49","IEEE","2 Mar 2022","","","IEEE","IEEE Journals"
"System Level Test Automation in UAV Development","A. S. Yildirim; E. Berker; M. E. Kayakesen","UAV Test and Integration Department, Turkish Aerospace Industries, Ankara, Turkey; UAV Test and Integration Department, Turkish Aerospace Industries, Ankara, Turkey; UAV Test and Integration Department, Turkish Aerospace Industries, Ankara, Turkey","2018 IEEE AUTOTESTCON","15 Nov 2018","2018","","","1","6","As the complexity of defense systems have increased in recent years; avionics and automated test systems have become more complex. Consequently, system engineering requirements demand robust requirement verification for the customer specifications and product quality. Traditional test system does not meet the demands like inconvenient data format, difficulty in test programs' reuse, inefficient use of available system resources, difficult error findings. The testing technology is growing continuously and rapidly. Frequently used automated test strategies are mainly based on software testing in software verification level. A software insensitive avionic system mostly comprises software modules at the unit level. When it comes to testing from subsystem to system level different circumstances emerge. System level testing has always been heavily dependent on human intervention and human judgment. Before emergence of system of systems concept most of the systems have their own boundaries for external interaction at human machine interface (HMI) level. Hence it has been natural that testing system functionality as a whole at HMI boundaries were carried out by human testers. However due to developments in software technologies and by approaching to automated system level testing problem as a collection of many self-containing diverse sub-problems; it can be seen that software industry has already created lots of tools to address each of these sub-problems without even aiming to solve them for automated system test approach. In this paper automated UAV system test approach will be given by definition and analysis of each problem and solution addressing this problem. New automated testing model is presented to be functional on system level with a combination of hardware and software. The automated testing will handle the testing complexity with faster execution time, reduced testing costs, eliminating user errors and will also to increased probability of detecting failures. Test automation with both simulators and real devices is used for execution of the tests, and for the comparison of actual outcomes with predicted outcomes. This paper introduces a novel approach for test automation implementation for avionic system validation at system level in Unmanned Air Vehicle (UAV) development with different scenarios.","1558-4550","978-1-5386-5223-7","10.1109/AUTEST.2018.8532551","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8532551","Test Automation;UAV Verification;Smoke Test;Integration Test;System Level Test","Aerospace electronics;Testing;Aircraft;Unmanned aerial vehicles;Aerospace control;Software;Automation","autonomous aerial vehicles;avionics;program testing;program verification;software engineering","hardware;test automation implementation;avionic system validation;system level test automation;defense systems;test programs;software testing;software verification level;software insensitive avionic system;software modules;system level different circumstances;human machine interface level;system functionality;software technologies;automated system level testing problem;software industry;automated system test approach;UAV system test approach;system engineering requirements;robust requirement verification;customer specifications;product quality;programs reuse;error findings","","1","","3","","15 Nov 2018","","","IEEE","IEEE Conferences"
"Instruction based testbench architecture","Ho-seok Choi; Seung-beom Lee; Sin-chong Park","Inf. & Commun. Univ., Taejon, South Korea; Inf. & Commun. Univ., Taejon, South Korea; Inf. & Commun. Univ., Taejon, South Korea","Fifth International Workshop on System-on-Chip for Real-Time Applications (IWSOC'05)","14 Nov 2005","2005","","","329","333","This paper presents the synthesizable testbench architecture based on the defined instruction for standalone mode verification. The proposed testbench performs fast emulation with low resource and increases flexibility and reusability with variable description of instructions. To prove the performance of our testbench, we verified IEEE 802.11a PHY baseband system and compare with co-sim mode and modified co-sim mode emulation.","","0-7695-2403-6","10.1109/IWSOC.2005.76","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1530966","","Emulation;Hardware;Circuit simulation;Life estimation;Software testing;Performance evaluation;System testing;Physical layer;Baseband;Signal processing","integrated circuit testing;circuit simulation;hardware-software codesign;formal verification","instruction based testbench architecture;synthesizable testbench architecture;standalone mode verification;fast emulation;IEEE 802.11a PHY baseband system;modified co-sim mode emulation","","","","8","","14 Nov 2005","","","IEEE","IEEE Conferences"
"Assessing Software Product Line Testing Via Model-Based Mutation: An Application to Similarity Testing","C. Henard; M. Papadakis; G. Perrouin; J. Klein; Y. L. Traon","Interdiscipl. Centre for Security, Reliability & Trust (SnT), Univ. of Luxembourg, Luxembourg, Luxembourg; Interdiscipl. Centre for Security, Reliability & Trust (SnT), Univ. of Luxembourg, Luxembourg, Luxembourg; Precise Res. Center In Software Eng. (PReCISE), Univ. of Namur, Namur, Belgium; Interdiscipl. Centre for Security, Reliability & Trust (SnT), Univ. of Luxembourg, Luxembourg, Luxembourg; Interdiscipl. Centre for Security, Reliability & Trust (SnT), Univ. of Luxembourg, Luxembourg, Luxembourg","2013 IEEE Sixth International Conference on Software Testing, Verification and Validation Workshops","1 Aug 2013","2013","","","188","197","Needs for mass customization and economies of scale have pushed engineers to develop Software Product Lines (SPLs). SPLs are families of products sharing commonalities and exhibiting differences, built by reusing software assets abstractly represented by features. Feature models describe the constraints that link the features and allow the configuration of tailored software products. Common SPLs involve hundreds, even thousands of features, leading to billions of possible software products. As a result, testing a product line is challenging due to the enormous size of the possible products. Existing techniques focus on testing based on the product line's feature model by selecting a limited set of products to test. Being created manually or reverse-engineered, feature models are prone to errors impacting the generated test suites. In this paper, we examine ability of test suites to detect such errors. In particular, we propose two mutation operators to derive erroneous feature models (mutants) from an original feature model and assess the capability of the generated original test suite to kill the mutants. Experimentation on real feature models demonstrate that dissimilar tests suites have a higher mutant detection ability than similar ones, thus validating the relevance of similarity-driven product line testing.","","978-0-7695-4993-4","10.1109/ICSTW.2013.30","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6571629","Mutation;Testing;Feature Models;Software Product Lines;Similarity","Frequency modulation;Testing;Software;Context;Mobile handsets;Biological system modeling;Analytical models","program diagnostics;program testing","software product line testing;model-based mutation;SPL feature model;mass customization;economies-of-scale;software asset reuse;mutation operator;dissimilar tests suite;mutant detection ability;similarity-driven product line testing","","38","","36","","1 Aug 2013","","","IEEE","IEEE Conferences"
"Empirical Investigation of the Effects of Test Suite Properties on Similarity-Based Test Case Selection","H. Hemmati; A. Arcuri; L. Briand","Simula Res. Lab., Univ. of Oslo, Oslo, Norway; Simula Res. Lab., Univ. of Oslo, Oslo, Norway; Simula Res. Lab., Univ. of Oslo, Oslo, Norway","2011 Fourth IEEE International Conference on Software Testing, Verification and Validation","19 May 2011","2011","","","327","336","Our experience with applying model-based testing on industrial systems showed that the generated test suites are often too large and costly to execute given project deadlines and the limited resources for system testing on real platforms. In such industrial contexts, it is often the case that only a small subset of test cases can be run. In previous work, we proposed novel test case selection techniques that minimize the similarities among selected test cases and outperforms other selection alternatives. In this paper, our goal is to gain insights into why and under which conditions similarity-based selection techniques, and in particular our approach, can be expected to work. We investigate the properties of test suites with respect to similarities among fault revealing test cases. We thus identify the ideal situation in which a similarity-based selection works best, which is useful for devising more effective similarity functions. We also address the specific situation in which a test suite contains outliers, that is a small group of very different test cases, and show that it decreases the effectiveness of similarity-based selection. We then propose, and successfully evaluate based on two industrial systems, a solution based on rank scaling to alleviate this problem.","2159-4848","978-1-61284-174-8","10.1109/ICST.2011.12","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5770622","Test Case Selection;Similarity Measure;Distance Function;Adaptive Random Testing;Genetic Algorithms;Model Based Testing","Testing;Unified modeling language;Subspace constraints;Fault detection;Gallium;Context;Encoding","program testing","test suite properties;similarity-based test case selection technique;model-based testing;industrial systems;rank scaling","","21","","19","","19 May 2011","","","IEEE","IEEE Conferences"
"Using Semantic Similarity in Crawling-Based Web Application Testing","J. -W. Lin; F. Wang; P. Chu","Dept. of Inf., Univ. of California, Irvine, Irvine, CA, USA; Dept. of Electr. Eng., Nat. Taiwan Univ., Taipei, Taiwan; QNAP Inc., Taiwan","2017 IEEE International Conference on Software Testing, Verification and Validation (ICST)","18 May 2017","2017","","","138","148","To automatically test web applications, crawling-based techniques are usually adopted to mine the behavior models, explore the state spaces or detect the violated invariants of the applications. However, their broad use is limited by the required manual configurations for input value selection, GUI state comparison and clickable detection. In existing crawlers, the configurations are usually string-matching based rules looking for tags or attributes of DOM elements, and often application-specific. Moreover, in input topic identification, it can be difficult to determine which rule suggests a better match when several rules match an input field to more than one topic. This paper presents a natural-language approach based on semantic similarity to address the above issues. The proposed approach represents DOM elements as vectors in a vector space formed by the words used in the elements. The topics of encountered input fields during crawling can then be inferred by their similarities with ones in a labeled corpus. Semantic similarity can also be applied to suggest if a GUI state is newly discovered and a DOM element is clickable under an unsupervised learning paradigm. We evaluated the proposed approach in input topic identification with 100 real-world forms and GUI state comparison with real data from industry. Our evaluation shows that the proposed approach has comparable or better performance to the conventional techniques. Experiments in input topic identification also show that the accuracy of the rule-based approach can be improved by up to 22% when integrated with our approach.","","978-1-5090-6031-3","10.1109/ICST.2017.20","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7927970","Web application testing;semantic similarity;GUI testing","Testing;Graphical user interfaces;Crawlers;Web pages;Semantics;Manuals;Feature extraction","graphical user interfaces;Internet;program testing","semantic similarity;crawling-based Web application testing;crawling-based techniques;GUI state comparison;graphical user interface;clickable detection;natural-language approach;vector space;input topic identification","","5","","34","","18 May 2017","","","IEEE","IEEE Conferences"
"SiMut: Exploring Program Similarity to Support the Cost Reduction of Mutation Testing","A. V. Pizzoleto; F. C. Ferrari; L. D. Dallilo; J. Offutt","Federal University of São Carlos,Computing Department,São Carlos,SP,Brazil; Federal University of São Carlos,Computing Department,São Carlos,SP,Brazil; University of São Paulo,Department of Computer Systems,São Carlos,SP,Brazil; George Mason University,Department of Computer Science,Fairfax,VA,USA","2020 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","4 Aug 2020","2020","","","264","273","Scientists have created many cost reduction techniques for mutation testing, and most of them reduce cost with minor losses of effectiveness. However, many of these techniques are difficult to generalize, difficult to scale, or both. Published results are usually limited to a modest collection of programs. Therefore, an open question is whether the results of a given cost reduction technique on programs studied in the paper will hold true for other programs. This paper introduces a conceptual framework, named SiMut, to support the cost reduction of mutation testing based on historical data and program similarity. Given a new, untested program u, the central idea is applying to u the same cost reduction strategy applied to a group G of programs that are similar to u and have already been tested with mutation, and check for consistency of results in terms of reduced costs and quality of test sets. SiMut includes activities to compute program abstractions and similarity. Based on this information, it supports the application of mutation cost reduction techniques to both G and u. This paper presents the concepts behind SiMut, a proof-of-concept implementation of SiMut, and results from a pilot study. Finally, we discuss some issues related to the use of SiMut, focusing on the composition of a representative dataset to properly explore the potential of our framework.","","978-1-7281-1075-2","10.1109/ICSTW50294.2020.00052","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9155963","mutation testing;cost reduction;program similarity;reuse of historical data","Testing;Current measurement;Machine learning algorithms;Conferences;Bibliographies;Computer languages","cost reduction;program testing","historical data;program similarity;SiMut;untested program;mutation cost reduction techniques;program abstractions;mutation testing","","3","","49","","4 Aug 2020","","","IEEE","IEEE Conferences"
"Similarities Across Libraries: Making a Case for Leveraging Test Suites","D. Sondhi; D. Rani; R. Purandare","IIIT Delhi; Gandhi Institute for Technological Advancement, Bhubaneswar; IIIT Delhi","2019 12th IEEE Conference on Software Testing, Validation and Verification (ICST)","6 Jun 2019","2019","","","79","89","Developers may choose to implement a library, despite the existence of similar libraries, considering factors such as computational performance, language or platform dependency, and accuracy. As a result, GitHub is a host to several library projects that have overlaps in the functionalities. These overlaps have been of interest to developers from the perspective of code reuse or preferring one implementation over the other. We present an empirical study to explore the extent and nature of existence of these similarities in the library functions. We have further studied whether the similarity among functions across different libraries and their associated test suites can be leveraged to reveal defects in one another. Applying a natural language processing based approach on the documentations associated with functions, we have extracted matching functions across 12 libraries, available on GitHub, over 2 programming languages and 3 themes. Our empirical evaluation indicates existence of a significant number of similar functions across libraries in same as well as different programming languages where a language can influence the extent of existence of similarities. The test suites from another library can serve as an effective source of defect revealing tests. The study resulted in revealing 72 defects in 12 libraries. Further, we analyzed the source of origination of the defect revealing tests. We deduce that issue reports and pull requests can be beneficial in attaining quality test cases not only to test the libraries in which these issues are reported but also for other libraries that are similar in theme.","2159-4848","978-1-7281-1736-2","10.1109/ICST.2019.00018","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8730155","libraries;language;similarities;test suites;defect exposure;issue reports","Libraries;Documentation;Data mining;Testing;Training;Python;Natural language processing","natural language processing;program testing;programming languages;software libraries","library projects;library functions;natural language processing;defect revealing tests;test suites;programming languages;GitHub","","","","33","","6 Jun 2019","","","IEEE","IEEE Conferences"
"Test Generation and Test Prioritization for Simulink Models with Dynamic Behavior","R. Matinnejad; S. Nejati; L. C. Briand; T. Bruckmann","SnT Centre for Security, Reliability, and Trust, University of Luxembourg, Luxembourg; SnT Centre for Security, Reliability, and Trust, University of Luxembourg, Luxembourg; SnT Centre for Security, Reliability, and Trust, University of Luxembourg, Luxembourg; Delphi Automotive Systems, Luxembourg","IEEE Transactions on Software Engineering","17 Sep 2019","2019","45","9","919","944","All engineering disciplines are founded and rely on models, although they may differ on purposes and usages of modeling. Among the different disciplines, the engineering of Cyber Physical Systems (CPSs) particularly relies on models with dynamic behaviors (i.e., models that exhibit time-varying changes). The Simulink modeling platform greatly appeals to CPS engineers since it captures dynamic behavior models. It further provides seamless support for two indispensable engineering activities: (1) automated verification of abstract system models via model simulation, and (2) automated generation of system implementation via code generation. We identify three main challenges in the verification and testing of Simulink models with dynamic behavior, namely incompatibility, oracle and scalability challenges. We propose a Simulink testing approach that attempts to address these challenges. Specifically, we propose a black-box test generation approach, implemented based on meta-heuristic search, that aims to maximize diversity in test output signals generated by Simulink models. We argue that in the CPS domain test oracles are likely to be manual and therefore the main cost driver of testing. In order to lower the cost of manual test oracles, we propose a test prioritization algorithm to automatically rank test cases generated by our test generation algorithm according to their likelihood to reveal a fault. Engineers can then select, according to their test budget, a subset of the most highly ranked test cases. To demonstrate scalability, we evaluate our testing approach using industrial Simulink models. Our evaluation shows that our test generation and test prioritization approaches outperform baseline techniques that rely on random testing and structural coverage.","1939-3520","","10.1109/TSE.2018.2811489","H2020 European Research Council(grant numbers:694277); Delphi Automotive Systems, Luxembourg; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8305644","Simulink models;search-based software testing;test generation;test prioritization;test oracle;output diversity;signal features;structural coverage","Software packages;Testing;Tools;Computational modeling;Vehicle dynamics;Scalability","computer simulation;cyber-physical systems;program compilers;program testing;program verification;search problems","industrial Simulink models;random testing;Simulink modeling platform;dynamic behavior models;abstract system models;code generation;Simulink testing approach;black-box test generation approach;test output signals;CPS domain test oracles;test budget;cyber physical systems;automated verification;automated generation;meta-heuristic search;cost driver;test prioritization approach;structural coverage","","29","","124","IEEE","1 Mar 2018","","","IEEE","IEEE Journals"
"Mitagation against MAI in a Space Time Spreading Software Defined Radio Test Bed","S. Wee; M. Ros; P. J. Vial","Univ. of Wollongong, Wollongong, NSW; Univ. of Wollongong, Wollongong, NSW; Univ. of Wollongong, Wollongong, NSW","2009 Sixth International Conference on Information Technology: New Generations","10 Jun 2009","2009","","","534","540","A software defined radio test bed using the Gnu Radio project was installed on Unix boxes and modified so that estimates of the channel state coefficients were taken for a multiple input multiple output (MIMO) system to take advantage of space time transmission at a frequency of 2.4 GHz. This system was modified to provide a space time spreading test bed. The test bed was modified so that multiple access interference was experienced by offsetting different users data streams. The Walsh-Hadamard and Wysocki (low correlation) spreading sequences were deployed in the test bed to compare their bit error rate performance. We confirmed that the low cross correlation spreading sequences experienced an improved bit error rate compared to that obtained when using the Walsh-Hadamard spreading sequence for high signal to noise ratios.","","978-1-4244-3770-2","10.1109/ITNG.2009.117","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5070674","Gnu Radio;Space Time Spreading;MIMO;Software Defined Radio","Software radio;Software testing;Sociotechnical systems;Multiple access interference;Diversity reception;Receiving antennas;System testing;MIMO;Bit error rate;Fading","error statistics;interference suppression;MIMO communication;software radio;Unix","space time spreading software defined radio test bed;Gnu Radio project;Unix boxes;channel state coefficients;multiple input multiple output system;Walsh-Hadamard spreading sequences;Wysocki spreading sequences;bit error rate;multiple access interference;signal to noise ratios","","2","","16","","10 Jun 2009","","","IEEE","IEEE Conferences"
"Topology Insensitive Location Determination Using Independent Estimates Through Semi-Directional Antennas","C. -l. Yang; S. Bagchi; W. J. Chappell","Electr. & Comput. Eng. Dept., Purdue Univ., West Lafayette, IN; NA; NA","IEEE Transactions on Antennas and Propagation","13 Nov 2006","2006","54","11","3458","3472","We demonstrate the effect of using multiple estimations from independent single wireless motes in order to decrease network topology dependence on location estimation in a wireless sensor network. A method of determining the location of a target by using multiple compact semi-directional antennas is shown to give an independent estimate of location from each sensor mote in a network, each estimate not relying on the data from neighboring motes as in the case of traditional triangulation. We begin by demonstrating a method of using angular diversity through multiple semi-directional antennas in order to ascertain the location of a target. The estimation of both range and angle is demonstrated in the presence of a noisy and/or faded channel. An efficient and fast algorithm on a wireless sensor mote is presented through a Taylor series expansion of the simulated antenna pattern. Furthermore, using the results from the location estimation from a single node, location determination in a realistic network is explored through both theory and simulation. The results indicate that our proposed algorithm depends significantly less on the topology (spatial arrangement) of the anchor nodes. While network planning for a variety of topologies of anchor nodes is shown to be necessary when using triangulation, our proposed algorithm is insensitive to the deployments of the anchor nodes. A testbed was created in order to experimentally demonstrate that the predictions are accurate even in triangulation-adverse topologies. The experimental testbed shows that a linear arrangement of closely spaced sensors can reduce the location error to one-fourth of the location error using triangulation","1558-2221","","10.1109/TAP.2006.884294","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4012482","Directional antennas;location determination;sensor networks;topology;triangulation","Wireless sensor networks;Network topology;Application software;Testing;Computer applications;Protocols;Taylor series;Nanotechnology;Computerized monitoring;Condition monitoring","antenna radiation patterns;directive antennas;diversity reception;fading channels;radio direction-finding;telecommunication network planning;telecommunication network topology;wireless sensor networks","location estimation;wireless sensor network;target location;multiple compact semidirectional antennas;angular diversity;fading channel;Taylor series expansion;antenna pattern simulation;network planning;triangulation-adverse topology;linear arrangement","","3","","20","","13 Nov 2006","","","IEEE","IEEE Journals"
"Helping End-User Programmers ""Engineer"" Software: an Opportunity for Empirical Researchers","G. Rothermel","University of Nebraska-Lincoln, USA","First International Symposium on Empirical Software Engineering and Measurement (ESEM 2007)","15 Oct 2007","2007","","","9","10","While much of the software that people depend on is written by professional software engineers, increasingly, important applications are being created by non-professional (end-user) programmers. Using tools such as spreadsheet environments and web authoring tools, these programmers are creating software that is being used to support significant activities and inform decisions. Such software needs to work dependably and increase user productivity, but evidence shows that it frequently does not. For example, studies have shown that a large percentage of the spreadsheets created by end-users contain faults, and data suggests that time spent maintaining web macros may actually impede their users' overall efforts. In recent years researchers have begun to address this problem, considering various approaches to adapting software engineering techniques to the realm of end-user programming. For example, researchers have sought ways to help end users test and debug spreadsheets, and to increase productivity in web macros by combining them with various software engineering devices. To make progress in this area, researchers are turning to empirical studies, in order to investigate new approaches, understand the factors that influence them, and better understand issues related to end user programmers themselves. In this talk I will present recent work being done in end-user software engineering, with a particular focus on the state of the art of empirical research in the area. I will show that there is a pressing need for further empirical work in this context, and that there are interesting questions that researchers from the ESEM community could help to answer. For example, how are end-users different from programmers, and how does that affect how we conduct the research? (Are there assumptions we make when doing studies with programmers that do not hold with end-users? What are the threats to validity when, say, we use CS students as subjects in end-user studies?) As another example, how are end-users different from each other and how does that affect study results? (The end-user community is much more diverse than the professional programmer community. What are the important context variables one needs to capture when studying them?) A concerted effort by the ESEM community on such issues could result in a substantial impact on society as a whole, and on the everyday lives of many people.","1949-3789","978-0-7695-2886-1","10.1109/ESEM.2007.42","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4343727","","Programming profession;Software engineering;Computer science;Software testing;Software quality;Application software;Productivity;Software maintenance;Computer aided manufacturing;Software measurement","authoring systems;personal computing;software engineering;spreadsheet programs","software engineering techniques;end-user programming;spreadsheet environments;web authoring tools","","","","","","15 Oct 2007","","","IEEE","IEEE Conferences"
"Working Session Reports","J. Stafford; J. Bosch",Tufts University; NA,"5th Working IEEE/IFIP Conference on Software Architecture (WICSA'05)","24 Apr 2006","2005","","","181","184","WICSA is a working conference and in 2005 continued the tradition of providing working sessions as a forum supportive of communication among the diverse population that makes up the software architecture community. The working sessions of WICSA 5 reflected on the achievements in the field of software architecture during the past decade, took stock of the current state of the field, and identified opportunities for researchers to contribute to improving the practice.","","0-7695-2548-2","10.1109/WICSA.2005.76","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1620103","","Software architecture;Computer architecture;Software testing;Application software;Software quality;Documentation;Architecture description languages;Disk recording;Software systems;Vehicles","","","","","","","","24 Apr 2006","","","IEEE","IEEE Conferences"
"Architecting Distributed PXI Test Systems","S. Stock","National Instruments, 11500 N Mopac Expwy, Austin, TX 78759 (512)683-5624. spencer.stock@ni.com","2006 IEEE Autotestcon","15 Jan 2007","2006","","","547","551","The popularity of distributed test systems is growing for a number of reasons, which include the distribution of processing among multiple intelligent nodes in order to increase computing power and I/O bandwidth and geographic constraints that prohibit all of the components of a system from residing in a single location. This paper will examine the features of the PXI platform that enable the architecting of distributed test systems. These features include software frameworks that easily interface with both local and distributed hardware, integration resources for PXI systems with a diversity of instruments and hybrid test systems, and hardware synchronization resources that enable distributed synchronization down to the sub- nanosecond level by extending the PXI backplane across multiple distributed PXI systems or synchronization over significant distances with technologies such as GPS. This paper will also examine distributed system design techniques for communication and data transfer between intelligent nodes and discuss dedicated deterministic communication for advanced distributed PXI test systems.","1558-4550","1-4244-0051-1","10.1109/AUTEST.2006.283724","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4062437","","System testing;Instruments;Software testing;Hardware;Control systems;Ethernet networks;Software architecture;Application software;Software measurement;Distributed computing","automatic testing;peripheral interfaces;synchronisation","architecting distributed;PXI test systems;distributed test systems;software frameworks;local hardware;distributed hardware;hybrid test systems;hardware synchronization;distributed synchronization;distributed system design;data transfer","","4","","3","","15 Jan 2007","","","IEEE","IEEE Conferences"
"Guideline-based approach for achieving non-functional attributes of software","M. Hneif; Sai Peck Lee","Department of Software Engineering, Faculty of Computer Science and Information Technology, University of Malaya, Kuala Lumpur, Malaysia; Department of Software Engineering, Faculty of Computer Science and Information Technology, University of Malaya, Kuala Lumpur, Malaysia","2010 2nd International Conference on Computer Engineering and Technology","17 Jun 2010","2010","6","","V6-305","V6-308","Non-functional attributes of software are considered as major element for improving software quality. However, achieving these attributes in a software system is not a simple task, bearing in mind the relationships between these attributes, and the diversity of software domains. This paper proposes a new guideline-based software development approach that provides the suitable guidelines for the software engineer, throughout the phases of software development for the purpose of achieving a high quality level of non-functional attributes of software.","","978-1-4244-6349-7","10.1109/ICCET.2010.5486233","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5486233","non-functional attributes;guideline-based development;software quality;preventive approach","Software quality;Software systems;Programming;Software testing;System testing;Software maintenance;Software engineering;Computer science;Information technology;Guidelines","software quality;software reliability","software quality;guideline based software development;software systems;nonfunctional attributes","","1","","16","","17 Jun 2010","","","IEEE","IEEE Conferences"
"Software measurement in the U.S. Army","D. S. Lucero","Army Oper. Test & Evaluation Command, USA","Proceedings Twenty-First Annual International Computer Software and Applications Conference (COMPSAC'97)","6 Aug 2002","1997","","","589","590","Many means for organizing software measures have been developed over the years. The Army has found that the larger the organization, the higher in the hierarchy the requirement for software measurement needs to be stated. The reason for this stems from the growing diversity of developers in larger organizations. Small organizations that have a well defined process for developing software, or a common set of software development tools, can require that specific data elements be collected, or specific measurements be taken. If larger organizations attempting to impose such specific requirements on developers are likely to meet some resistance, a tight policy does not allow for variation in development processes and development tools. With software development centers building air defense systems in Huntsville, Alabama; command and control systems in Monmouth, New Jersey; logistics systems in Petersburg, Virginia; personnel systems in Fairfax, Virginia; communications systems in Sierra Vista, Arizona; aviation systems in St. Louis, Missouri, armor systems in Picatinny, New Jersey and Detroit Michigan, and engineering systems at various locations throughout the US, the Army must have a policy for software measurement that puts in place flexible reporting requirements, yet provides training and support tailored to the needs of specific programs.","0730-3157","0-8186-8105-5","10.1109/CMPSAC.1997.625076","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=625076","","Software measurement;Software testing;Software metrics;Quality management;Stability;Software quality;Software systems;System testing;Delay systems;Delay effects","military computing;software metrics;software development management","software measurement;US Army;software measures;larger organizations;small organizations;software development tools;software development centers;air defense systems;command and control systems;logistics systems;personnel systems;aviation systems;armor systems;engineering systems;US Army operational test/evaluation command","","","2","6","","6 Aug 2002","","","IEEE","IEEE Conferences"
"An Empirical Comparison of Similarity Measures for Abstract Test Case Prioritization","R. Huang; Y. Zhou; W. Zong; D. Towey; J. Chen","Sch. of Comput. Sci. & Commun. Eng., Jiangsu Univ., Zhenjiang, China; Sch. of Comput. Sci. & Commun. Eng., Jiangsu Univ., Zhenjiang, China; Sch. of Comput. Sci. & Commun. Eng., Jiangsu Univ., Zhenjiang, China; Sch. of Comput. Sci., Univ. of Nottingham Ningbo China, Ningbo, China; Sch. of Comput. Sci. & Commun. Eng., Jiangsu Univ., Zhenjiang, China","2017 IEEE 41st Annual Computer Software and Applications Conference (COMPSAC)","11 Sep 2017","2017","1","","3","12","Test case prioritization (TCP) attempts to order test cases such that those which are more important, according to some criterion or measurement, are executed earlier. TCP has been applied in many testing situations, including, for example, regression testing. An abstract test case (also called a model input) is an important type of test case, and has been widely used in practice, such as in configurable systems and software product lines. Similarity-based test case prioritization (STCP) has been proven to be cost-effective for abstract test cases (ATCs), but because there are many similarity measures which could be used to evaluate ATCs and to support STCP, we face the following question: How can we choose the similarity measure(s) for prioritizing ATCs that will deliver the most effective results? To address this, we studied fourteen measures and two popular STCP algorithms - local STCP (LSTCP), and global STCP (GSTCP). We also conducted an empirical study of five realworld programs, and investigated the efficacy of each similarity measure, according to the interaction coverage rate and fault detection rate. The results of these studies show that GSTCP outperforms LSTCP - in 61% to 84% of the cases, in terms of interaction coverage rates; and in 76% to 78% of the cases with respect to fault detection rates. Our studies also show that Overlap, the simplest similarity measure examined in this study, could obtain the overall best performance for LSTCP; and that Goodall3 has the best performance for GSTCP.","0730-3157","978-1-5386-0367-3","10.1109/COMPSAC.2017.271","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8029584","Software testing;test case prioritization;abstract test case;similarity","Testing;Fault detection;Software;Computer science;Software product lines;Fault diagnosis;Algorithm design and analysis","program testing","global STCP;local STCP;ATC;abstract test case prioritization;similarity measures","","5","","25","","11 Sep 2017","","","IEEE","IEEE Conferences"
"Study and implementation of model-driven testing method for network management interface","Y. Chen; Limin Hou; Yichang Liu; Yongping Zhang; Feng Qi","State Key Laboratory of Networking and Switching Technology, Beijing University of Posts and Telecommunications, 100876, China; Department of Information Engineering, Railway Vocational and Technical College, Zhengzhou 450052, Henan, China; State Key Laboratory of Networking and Switching Technology, Beijing University of Posts and Telecommunications, 100876, China; State Key Laboratory of Networking and Switching Technology, Beijing University of Posts and Telecommunications, 100876, China; State Key Laboratory of Networking and Switching Technology, Beijing University of Posts and Telecommunications, 100876, China","2009 IEEE International Conference on Communications Technology and Applications","8 Dec 2009","2009","","","259","263","A model-driven testing method for network management interface was proposed in order to minimize the impact of changeful test requirement and diverse interface technologies, improve the test efficiency as well as lower test cost. This method was founded on testing models including test case model and test scenario model, which can be transformed and constructed from platform-independent model (PIM) and platform-specific model (PSM) defined in network management interface specifications automatically or manually. This paper also gave composing of test model and transformation rules from PIM/PSM to test model. Furthermore, an automatic testing platform tool was implemented and applied to the interface testing of 3G mobile communication networks management.","","978-1-4244-4816-6","10.1109/ICCOMTA.2009.5349199","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5349199","model-driven;network management interface;testing method;testing tool","Automatic testing;Technology management;Software testing;Programming;Software maintenance;Computer integrated manufacturing;System testing;Communication system software;Software tools;Laboratories","3G mobile communication;mobile computing;program testing;telecommunication network management","model-driven testing;network management interface;platform-independent model;platform-specific model;test case model;test scenario model;3G mobile communication","","1","","7","","8 Dec 2009","","","IEEE","IEEE Conferences"
"The role of extensibility in software standards for automatic test systems","T. P. Lopes; I. A. Neag; J. E. Ralph","Teradyne Inc., North Reading, MA, USA; NA; NA","IEEE Autotestcon, 2005.","27 Mar 2006","2005","","","367","373","The extension of standardized software interfaces provides a consistent format by which software vendors expose unique functional features of a product, as well as features common with other products, but not supported by existing standards. Extensibility is critical in the field of automatic test systems (ATSs) due to the diversity of existing hardware and software and the need to maintain systems over long periods of time. The paper describes the principle of interface extensibility and shows that, when properly used, extensions do not compromise the interoperability benefits obtained through standardization. Modern software interfacing technologies provide effective support for extensibility. The paper illustrates this support by analyzing the extensibility features of various ATS software standards. This analysis is used to derive a set of rules for designing interface extensions. Extensibility in the emerging automatic test markup language (ATML) standards is presented in detail and illustrated through examples","1558-4550","0-7803-9101-2","10.1109/AUTEST.2005.1609160","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1609160","","Software standards;Automatic testing;Software testing;System testing;Application software;Standards development;Electrical resistance measurement;Software maintenance;Standardization;Hardware","automatic test software;software standards;XML","software standards;automatic test systems;software interface extensibility;software interfacing technologies;ATS;automatic test markup language standards;ATML standards","","1","","5","","27 Mar 2006","","","IEEE","IEEE Conferences"
"A Novelty Search Approach for Automatic Test Data Generation","M. Boussaa; O. Barais; G. Sunyé; B. Baudry","Inria/IRISA, Rennes, France; Inria/IRISA, Rennes, France; Inria/IRISA, Rennes, France; Inria/IRISA, Rennes, France","2015 IEEE/ACM 8th International Workshop on Search-Based Software Testing","3 Aug 2015","2015","","","40","43","In search-based structural testing, metaheuristic search techniques have been frequently used to automate the test data generation. In Genetic Algorithms (GAs) for example, test data are rewarded on the basis of an objective function that represents generally the number of statements or branches covered. However, owing to the wide diversity of possible test data values, it is hard to find the set of test data that can satisfy a specific coverage criterion. In this paper, we introduce the use of Novelty Search (NS) algorithm to the test data generation problem based on statement-covered criteria. We believe that such approach to test data generation is attractive because it allows the exploration of the huge space of test data within the input domain. In this approach, we seek to explore the search space without regard to any objectives. In fact, instead of having a fitness-based selection, we select test cases based on a novelty score showing how different they are compared to all other solutions evaluated so far.","","978-1-4673-7079-0","10.1109/SBST.2015.17","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7173590","","Search problems;Testing;Java;Sociology;Statistics;Space exploration;Measurement","data handling;genetic algorithms;program testing","novelty search approach;automatic test data generation;metaheuristic search techniques;search based structural testing;genetic algorithms;GA;objective function;data values;novelty search algorithm;NS algorithm;data generation problem","","8","","11","","3 Aug 2015","","","IEEE","IEEE Conferences"
"Testing Cyber-Physical Systems via Evolutionary Algorithms and Machine Learning","S. Nejati",University of Luxembourg,"2019 IEEE/ACM 12th International Workshop on Search-Based Software Testing (SBST)","26 Aug 2019","2019","","","1","1","Cyber-Physical Systems (CPS) are systems or systems of systems made up of collaborating computational elements that control physical entities. CPS are developed in diverse domains ranging from automotive and aerospace to medical systems. This keynote argues that search-based techniques are a suitable match for testing CPS as they can handle complex continuous behaviors, scale to large test input spaces and are applicable to black-box systems such as physics-based simulators used in CPS development. In addition, the keynote demonstrates how search-based techniques can be flexibly combined with machine learning to improve search effectiveness and extend test results with explanatory information.","","978-1-7281-2233-5","10.1109/SBST.2019.00008","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812192","cyber-physical systems;meta-heuristic search;machine learning;search-based testing","Testing;Machine learning;Evolutionary computation;Computational modeling;Tools;Cyber-physical systems;Heuristic algorithms","cyber-physical systems;evolutionary computation;learning (artificial intelligence);program testing;search problems","medical systems;search-based techniques;test input spaces;black-box systems;physics-based simulators;CPS development;machine learning;Cyber-Physical Systems;control physical entities;search effectiveness;collaborating computational element","","6","","12","","26 Aug 2019","","","IEEE","IEEE Conferences"
"Cloud API Testing","J. Wang; X. Bai; H. Ma; L. Li; Z. Ji","Dept. of Comput. Sci. & Technol., Tsinghua Univ., Beijing, China; Dept. of Comput. Sci. & Technol., Tsinghua Univ., Beijing, China; Dept. of Comput. Sci. & Technol., Tsinghua Univ., Beijing, China; Dept. of Comput. Sci. & Technol., Tsinghua Univ., Beijing, China; Dept. of Comput. Sci. & Technol., Tsinghua Univ., Beijing, China","2017 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","17 Apr 2017","2017","","","385","386","Following the Service-Oriented Architecture, Cloud services are exposed as Web APIs (Application Program Interface), which serve as the contracts between the service providers and service consumers. With increasing massive and broad applications of Cloud-based development, a large number of diversified APIs are emerging. Due to their wide impacts, any flaw in the cloud APIs may lead to serious consequences. API testing is thus necessary to ensure the availability, reliability, and stability of cloud services. The research proposed an approach to automating API testing following the model-driven architecture, so that services can be continuously fetched, analyzed and validated. A prototype system ATcloud was constructed to illustrate the process of API understanding, test scenario modeling using directed graph annotated with transfer probabilities between operations, cloud-based test resources management, distributed workload simulation, and performance monitoring.","","978-1-5090-6676-6","10.1109/ICSTW.2017.71","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7899088","API testing;test automation;cloud computing","Cloud computing;Testing;Data models;Conferences;Contracts;Reliability;Prototypes","application program interfaces;cloud computing;directed graphs;Internet;program testing;service-oriented architecture","cloud API testing;service-oriented architecture;Poster;Web API;cloud services;application program interface;cloud-based development;model-driven architecture;ATcloud;directed graph;cloud-based test resources management;distributed workload simulation;performance monitoring","","2","","3","","17 Apr 2017","","","IEEE","IEEE Conferences"
"Modeling App Behavior from Multiple Artifacts","E. Kowalczyk","Dept. of Comput. Sci., Univ. of Maryland, College Park, MD, USA","2016 IEEE International Conference on Software Testing, Verification and Validation (ICST)","21 Jul 2016","2016","","","385","386","Understanding the behavior of a mobile application is typically obtained from static or dynamic artifacts including an app's market page. However, each of these artifacts have limitations which make the resulting models of behavior incomplete. In response, this work asks can a technique which combines a larger, more diverse set of artifacts extracted from an app's executable, runtime behavior and market page construct more accurate models of app behavior? And if so, which artifacts and features are most valuable when doing so?","","978-1-5090-1827-7","10.1109/ICST.2016.52","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7515493","","Unified modeling language;Software;Runtime;Data mining;Documentation;Google;Androids","Internet;mobile computing","mobile application behavior;dynamic artifacts;static artifacts;application market page;runtime behavior;multiple artifacts","","2","","17","","21 Jul 2016","","","IEEE","IEEE Conferences"
"Looking for Patterns in Code Bad Smells Relations","B. Walter; P. Martenka","Inst. of Comput. Sci., Poznan Univ. of Technol., Poznan, Poland; Inst. of Comput. Sci., Poznan Univ. of Technol., Poznan, Poland","2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops","14 Jul 2011","2011","","","465","466","Code smells are the named design anomalies that indicate to a need for refactoring. Due to their diverse and ambiguous nature, their identification in code requires complex methods. In the paper we formulate a hypothesis that some smells make associations that are repeatable and can be treated as patterns. We present also early results of investigation of two Large Class-related patterns.","","978-0-7695-4345-1","10.1109/ICSTW.2011.89","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5954448","code smell;refactoring patterns","Measurement;Software;Publishing;Software reliability;Taxonomy;Software engineering;Programming","software maintenance","code bad smell relation;software refactoring;code pattern","","1","","10","","14 Jul 2011","","","IEEE","IEEE Conferences"
"Debugger-driven Embedded Fuzzing","M. Eisele","Robert Bosch GmbH,Renningen,Germany","2022 IEEE Conference on Software Testing, Verification and Validation (ICST)","8 Jun 2022","2022","","","483","485","Embedded Systems - the hidden computers in our lives - are deployed in the billionths and are already in the focus of attackers. They pose security risks when not tested and maintained thoroughly. In recent years, fuzzing has become a promising technique for automated security testing of programs, which can generate tons of test inputs for a program. Fuzzing is hardly applied to embedded systems, because of their high diversity and closed character. During my research I want tackle that gap in fuzzing embedded systems - short: &#x201C;Embedded Fuzzing&#x201D;. My goal is to obtain insights of the embedded system during execution, by using common debugging interfaces and hardware breakpoints to enable guided fuzzing in a generic and widely applicable way. Debugging interfaces and hardware breakpoints are available for most common microcontrollers, generating a potential industry impact. Preliminary results show that the approach covers basic blocks faster than blackbox fuzzing. Additionally, it is source code agnostic and leaves the embedded firmware unaltered.","2159-4848","978-1-6654-6679-0","10.1109/ICST53961.2022.00062","Saarland University; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9787842","embedded systems;security testing","Industries;Computers;Embedded systems;Microcontrollers;Conferences;Debugging;Fuzzing","embedded systems;program debugging;program testing;security of data;source code (software);user interfaces","security risks;test inputs;embedded system;hardware breakpoints;debugger-driven embedded fuzzing;debugging interfaces;source code","","","","22","IEEE","8 Jun 2022","","","IEEE","IEEE Conferences"
"ToCaMS – Workshop on Testing of Configurable and Multi-variant Systems","J. Bradbury; P. Kruse; M. Saadatmand; H. Schlingloff","Ontario Tech University; Expleo Germany GmbH; RISE SICS,Sweden; Ontario Tech University,Germany","2020 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","4 Aug 2020","2020","","","xxvii","xxvii","Due to increasing market diversification and customer demand, more and more software-based products and services are customizable or are designed in the form of many different variants. This brings about new challenges for the software quality assurance processes: How shall the variability be modelled in order to make sure that all features are being tested? Is it better to test selected variants on a concrete level, or can the generic software and baseline be tested abstractly? Can knowledge-based AI techniques be used to identify and prioritize test cases? How can the quality of a generic test suite be assessed? What are appropriate coverage criteria for configurable modules? If it is impossible to test all possible variants, which products and test cases should be selected for test execution? Can security-testing methods be leveraged to an abstract level?","","978-1-7281-1075-2","10.1109/ICSTW50294.2020.00017","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9155613","","","","","","","","","","4 Aug 2020","","","IEEE","IEEE Conferences"
"Kernel Density Adaptive Random Testing","M. Patrick; Y. Jia","University of Cambridge; CREST, University College London","2015 IEEE Eighth International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","14 May 2015","2015","","","1","10","Mutation analysis is used to assess the effectiveness of a test data generation technique at finding faults. Once a mutant is killed, decisions must be made whether to diversify or intensify the subsequent test inputs. Diversification employs a wide range of test inputs with the aim of increasing the chances of killing new mutants. By contrast, intensification selects test inputs which are similar to those previously shown to be successful, taking advantage of overlaps in the conditions under which mutants can be killed. This paper explores the trade-off between diversification and intensification by augmenting Adaptive Random Testing (ART) to estimate the Kernel Density (KD-ART) of input values which are found to kill mutants. The results suggest that intensification is typically more effective at finding faults than diversification. KD-ART (intensify) achieves 7.24% higher mutation score on average than KD-ART (diversify). Moreover, KD-ART is computationally less expensive than ART. The new technique requires an average 5.98% of the time taken before.","","978-1-4799-1885-0","10.1109/ICSTW.2015.7107451","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7107451","","Subspace constraints;Testing;Kernel;Estimation;Switches;Measurement;Bandwidth","program testing","kernel density adaptive random testing;mutation analysis;test data generation technique;diversification;intensification;KD-ART","","1","","41","","14 May 2015","","","IEEE","IEEE Conferences"
"Likelihood function-based modulation classification in bandwidth-constrained sensor networks","J. L. Xu; W. Su; M. Zhou","Department of Electrical and Computer Engineering, New Jersey Institute of Technology, Newark, NJ 07102, USA; US Army RDECOM, Communications-Electronics RD&E Center, Fort Monmouth, NJ, 07703, USA; Department of Electrical and Computer Engineering, New Jersey Institute of Technology, Newark, NJ 07102, USA","2010 International Conference on Networking, Sensing and Control (ICNSC)","6 May 2010","2010","","","530","533","Automatic modulation classification with a single receiver has been intensively studied for two decades. Enhancing the successful classification probability is a bottleneck in this research field especially with weak signals in a non-cooperative communication environment. A sensor network with distributed classification techniques is expected to achieve technology breakthrough in providing spatial diversity and increasing the classification reliability. In this paper, we developed a distributed likelihood function-based classification method and extend the automatic modulation classification to sensor or radio networks. The classification methods performed in the sensors and primary node associated with theoretical discussion and numerical results are presented.","","978-1-4244-6453-1","10.1109/ICNSC.2010.5461606","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5461606","Modulation classification;modulation recognition;likelihood ratio test;sensor networks;cognitive radio;software-defined radio;distributed classification;wireless communication","Telecommunication network reliability;Cognitive radio;Intensity modulation;Bayesian methods;Digital modulation;Random variables;Amplitude estimation;Radio network;Software testing;Wireless sensor networks","maximum likelihood estimation;modulation;signal classification;wireless sensor networks","bandwidth-constrained sensor networks;modulation classification;classification probability;noncooperative communication environment;distributed classification;distributed likelihood function;spatial diversity;classification reliability","","9","","15","","6 May 2010","","","IEEE","IEEE Conferences"
"Learning the semantic similarity of reusable software components","D. Merkl; A. M. Tjoa; G. Kappel","Dept. of Inf. Eng., Wien Univ., Austria; Dept. of Inf. Eng., Wien Univ., Austria; NA","Proceedings of 1994 3rd International Conference on Software Reuse","6 Aug 2002","1994","","","33","41","Properly structured software libraries are crucial for the success of software reuse. Specifically, the structure of the software library ought to reflect the functional similarity of the stored software components in order to facilitate the retrieval process. We propose the application of artificial neural network technology to achieve such a structured library. In more detail, we utilize an artificial neural network adhering to the unsupervised learning paradigm. The distinctive feature of this very model is to make the semantic relationship between the stored software components geographically explicit. Thus, the actual user of the software library gets a notion of the semantic relationship between the components in terms of their geographical closeness.<<ETX>></ETX>","","0-8186-6632-3","10.1109/ICSR.1994.365813","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=365813","","Software reusability;Software libraries;Artificial neural networks;Application software;Unsupervised learning;Software quality;Computer science;Productivity;Software testing;Organizing","unsupervised learning;neural nets;software reusability;information retrieval;subroutines","semantic similarity;reusable software components;structured software libraries;software reuse;functional similarity;retrieval process;artificial neural network;structured library;unsupervised learning;semantic relationship","","9","","21","","6 Aug 2002","","","IEEE","IEEE Conferences"
"An Evaluation of Similarity Coefficients for Software Fault Localization","R. Abreu; P. Zoeteweij; A. J. c. Van Gemund",Delft University of Technology; Delft University of Technology; Delft University of Technology,"2006 12th Pacific Rim International Symposium on Dependable Computing (PRDC'06)","26 Dec 2006","2006","","","39","46","Automated diagnosis of software faults can improve the efficiency of the debugging process, and is therefore an important technique for the development of dependable software. In this paper we study different similarity coefficients that are applied in the context of a program spectral approach to software fault localization (single programming mistakes). The coefficients studied are taken from the systems diagnosis/automated debugging tools Pinpoint, Tarantula, and AMPLE, and from the molecular biology domain (the Ochiai coefficient). We evaluate these coefficients on the Siemens Suite of benchmark faults, and assess their effectiveness in terms of the position of the actual fault in the probability ranking of fault candidates produced by the diagnosis technique. Our experiments indicate that the Ochiai coefficient consistently outperforms the coefficients currently used by the tools mentioned. In terms of the amount of code that needs to be inspected, this coefficient improves 5% on average over the next best technique, and up to 30% in specific cases","","0-7695-2724-8","10.1109/PRDC.2006.18","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4041886","","Fault diagnosis;Software debugging;Software reliability;Computer bugs;Embedded system;Software testing;System testing;Particle measurements;Mathematics;Computer science","fault diagnosis;probability;program debugging;program diagnostics;software fault tolerance","similarity coefficients;software fault localization;automated software fault diagnosis;dependable software;program spectral approach;automated debugging tools;Pinpoint;Tarantula;AMPLE;molecular biology;Ochiai coefficient;Siemens Suite;benchmark faults;probability ranking","","222","8","20","","26 Dec 2006","","","IEEE","IEEE Conferences"
"Hierarchical similarity measurement model of program execution","A. Reungsinkonkarn","Department of Computer Information System, Assumption University, Bangkok Thailand 10240","2013 IEEE 4th International Conference on Software Engineering and Service Science","30 Sep 2013","2013","","","255","261","The concept of similarity measurement is widely used in a number of research areas such as data mining, software testing and debugging, and software security. Several researches have been conducted to continuously improve and explore for a better and new measurement of similarity. The similarity measurement mostly deals with data, items, or features of a program. However, there is no similarity measurement for output of program execution which can be various data types including primitive, abstract and heterogeneous data types such as numeric, character, list, tree, table (relation) and object. Lack of these measurements can reduce the effectiveness of software testing techniques or the quality of vulnerability detection methods to a certain degree. This paper proposes hierarchical similarity measurement model for measuring program execution. The measurement is categorized and arranged into successive levels according to its data type, and its calculation for a higher level data type is performed based on lower level data types. Some operations performed on our similarity measurement are briefly introduced. In addition, we present a similarity graph that can be used in an optimization process.","2327-0594","978-1-4673-5000-6","10.1109/ICSESS.2013.6615300","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6615300","Similarity measurement;Data mining;Optimization;Evolution computation;Software engineering","Remuneration;Bismuth;Arrays;Weaving","graph theory;optimisation;program diagnostics","hierarchical similarity measurement model;program execution;data mining;software testing;software debugging;software security;vulnerability detection methods;similarity graph;optimization process","","2","","9","","30 Sep 2013","","","IEEE","IEEE Conferences"
"Cloud Model based classifier","Liu Yu; Chen Gui-Sheng","State Key Lab of Software Development Environment, Beihang University, Beijing, China; China Institute of Electronics Engineering, Beijing, China","2009 International Conference on Test and Measurement","17 Feb 2010","2009","1","","427","430","Cloud Model is a well-known model of the uncertainty transition between a linguistic term of a qualitative concept and its numerical representation. Samples to be classified generally contain many features. Different features have different importance, which are often classified by weights. For the same category, feature vectors were mapped into clouds. With different numerical characters of the clouds, we could get the cloud similarities and feature weights. The testing samples' contribution to a certain class was measured by the certainty degree of Cloud Model. We proposed a new classification algorithm based on Could Model. Experiments show that such an approach could achieve a better or at least a comparable classification accuracy with other algorithms.","2157-5606","978-1-4244-4699-5","10.1109/ICTM.2009.5412899","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5412899","classification;feature weight learning;similarity;Cloud Model","Clouds;Electronic equipment testing;Classification algorithms;Entropy;Learning;Weight measurement;Classification tree analysis;Decision trees;Software testing;Software measurement","feature extraction;learning (artificial intelligence);pattern classification;uncertainty handling","cloud model;uncertainty transition model;qualitative concept;numerical representation;feature vectors;feature weight learning","","","","10","","17 Feb 2010","","","IEEE","IEEE Conferences"
"Reusing testing of reusable software components","C. C. Michael","Reliable Software Technol. Corp., USA","Proceedings of COMPASS '97: 12th Annual Conference on Computer Assurance","6 Aug 2002","1997","","","97","104","A software component that is reused in diverse settings can experience diverse operational environments. Unfortunately, a change in the operating environment can also invalidate past experience about the component's quality of performance. Indeed, most statistical methods for estimating software quality assume that the operating environment remains the same. Specifically, the probability density governing the selection of program inputs is assumed to remain constant. However, intuition suggests that such a stringent requirement is unnecessary. If a component has been executed very many times in one environment without experiencing a failure, one would expect it to be relatively failure-free in other similar environments. This paper seeks to quantify that intuition. The question asked is, ""how much can be said about a component's probability of failure in one environment after observing its operation in other environments?"" Specifically, we develop bounds on the component's probability of failure in the new environment based on its past behavior.","","0-7803-3979-7","10.1109/CMPASS.1997.613254","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=613254","","Software testing;Software reusability;Software measurement;Statistical analysis;Software quality;Density measurement;Probability density function","software reusability;program testing;software quality;software performance evaluation;statistical analysis;probability;software fault tolerance","reusable software component testing;diverse operational environments;software quality;software performance;statistical methods;probability density;program inputs;software failure;probability of failure","","3","1","7","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Correspondent computing for software implementation fault tolerance","P. . -N. Lee; J. Blankenship","Dept. of Comput. Sci., Houston Univ., University Park, TX, USA; Dept. of Comput. Sci., Houston Univ., University Park, TX, USA","Proceedings of the 1990 Symposium on Applied Computing","6 Aug 2002","1990","","","12","19","Correspondent computing, which achieves diversity through correspondent operations and uses a decision algorithm which is based on correspondence checking rather than majority voting or assertion checking, is proposed. The significance of this is that multiple diverse software versions are produced from a single algorithm and the assertions used in the correspondence test are more exact and easier to formulate. The ability of the correspondent computing method to generate correspondent versions systematically is further enhanced by the introduction of 'partial' reciprocal operations. Their role in creating reciprocal correspondent program modules tolerant to software implementation faults is explored in an actual program which implements a well-known triangle algorithm.<<ETX>></ETX>","","0-8186-2031-5","10.1109/SOAC.1990.82133","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=82133","","Fault tolerance;Fault tolerant systems;Voting;Software algorithms;Programming profession;Software testing;Software systems;Application software;Computer science;Space vehicles","fault tolerant computing;software engineering","software implementation fault tolerance;correspondent operations;decision algorithm;correspondence checking;multiple diverse software versions;correspondence test;correspondent computing method;reciprocal operations;reciprocal correspondent program modules;well-known triangle algorithm","","","","8","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Implementation and Evaluation of Cooperative Communication Schemes in Software-Defined Radio Testbed","J. Zhang; J. Jia; Q. Zhang; E. M. K. Lo","Dept. of Comput. Sci. & Eng., Hong Kong Univ. of Sci. & Technol., Hong Kong, China; Dept. of Comput. Sci. & Eng., Hong Kong Univ. of Sci. & Technol., Hong Kong, China; Dept. of Comput. Sci. & Eng., Hong Kong Univ. of Sci. & Technol., Hong Kong, China; Dept. of Comput. Sci. & Eng., Hong Kong Univ. of Sci. & Technol., Hong Kong, China","2010 Proceedings IEEE INFOCOM","6 May 2010","2010","","","1","9","Cooperative communication is a promising technique for future wireless networks, which significantly improves link capacity and reliability by leveraging broadcast nature of wireless medium and exploiting cooperative diversity. However, most of existing works investigate its performance theoretically or by simulation. It has been widely accepted that simulations often fail to faithfully capture many real-world radio signal propagation effects, which can be overcome through developing physical wireless network testbeds. In this work, we build a cooperative testbed based on GNU Radio and Universal Software Radio Peripheral (USRP) platform, which is a promising open-source software-defined radio system. Both single-relay cooperation and multi-relay cooperation can be supported in our testbed. Some key techniques are provided to solve the main challenges during the testbed development: e.g., maximum ratio combine in single-relay transmission and synchronized transmission among multiple relays. Extensive experiments are carried out in the testbed to evaluate performance of various cooperative communication schemes. The results show that cooperative transmission achieves significant performance enhancement in terms of link reliability and end-to-end throughput.","0743-166X","978-1-4244-5838-7","10.1109/INFCOM.2010.5461915","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5461915","","Software testing;Diversity reception;Relays;Wireless networks;MIMO;Software radio;Throughput;Analytical models;Physical layer;Field programmable gate arrays","software radio;telecommunication network reliability","cooperative communication;software defined radio testbed;GNU radio;universal software radio peripheral;cooperative transmission;link reliability;end-to-end throughput","","46","","20","","6 May 2010","","","IEEE","IEEE Conferences"
"Variability Management in Software Product Line Engineering","A. Metzger; K. Pohl","University of Duisburg-Essen, Germany; University of Duisburg-Essen, Germany; Lero, University of Limerick, Ireland","29th International Conference on Software Engineering (ICSE'07 Companion)","4 Jun 2007","2007","","","186","187","Software product line engineering (SPLE [2], [6]) has proven to be the paradigm for developing a diversity of similar software applications and software-intensive systems at low costs, in short time, and with high quality. Numerous reports document the significant achievements of introducing software product lines in industry [6].","","0-7695-2892-9","10.1109/ICSECOMPANION.2007.83","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4222738","","Engineering management;Application software;Testing;Design engineering;Software engineering;Software quality;Documentation;Software systems;Systems engineering and theory;Costs","","","","23","1","7","","4 Jun 2007","","","IEEE","IEEE Conferences"
"Keynote 1: Self-Replay Augmented Record and Replay for Android","",,"2021 IEEE/ACIS 19th International Conference on Computer and Information Science (ICIS)","23 Aug 2021","2021","","","1","1","Summary form only given. The complete presentation was not made available for publication as part of the conference proceedings. Record-and-replay tools are indispensable for quality assurance of mobile applications. In this talk, we present a record-and- replay tool targeting a wide adoption. Specifically, a dynamic instrumentation technique is used to accommodate rich sources of inputs in the application layer satisfying various constraints requested from industry. A self-replay mechanism is proposed to record more information of user inputs for accurate replaying without degrading user experience. In addition, an adaptive replay method is designed to enable replaying events on different devices with diverse screen sizes and OS versions. Through an evaluation on 53 highly popular industrial Android applications and 265 common usage scenarios, we demonstrate the effectiveness in recording and replaying rich sources of inputs on the same or different devices.","","978-1-6654-1893-5","10.1109/ICIS51600.2021.9516848","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9516848","","Conferences;User experience;Software testing;Software reliability;Software engineering;Reliability engineering;Recording","Android (operating system);mobile computing;smart phones;software quality;user experience","mobile applications;application layer;adaptive replay method;Android;self-replay augmented record and replay tools;dynamic instrumentation technique;quality assurance;user experience","","","","","IEEE","23 Aug 2021","","","IEEE","IEEE Conferences"
"The application of an automated software tool for modeling test processes","J. A. Rajhel","Support Syst. Assoc. Inc., USA","Proceedings of AUTOTESTCON '94","6 Aug 2002","1994","","","307","310","To obtain a consensus model of a complex system utilizing a diverse group of people requires a standard automated modeling tool. Without this type of modeling tool various models must be interpreted to be incorporated into a single model. Misinterpretation of the different views is inevitable causing models to be incorrect. Use of an automated tool such as IDEFO will eliminate integration problems because of its ability to express the point of the model in a standard graphic way.<<ETX>></ETX>","","0-7803-1910-9","10.1109/AUTEST.1994.381604","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=381604","","Application software;Software tools;Automatic testing;Software testing;Computer aided manufacturing;Graphics;Personnel;Design automation;CADCAM;Modeling","software tools;automatic test software;software reusability;software engineering","automated software tool;complex system;standard automated modeling tool;IDEFO model;integration problems;integrated definition zero;ATAG;DoD","","1","","4","","6 Aug 2002","","","IEEE","IEEE Conferences"
"An object model for embedded system development","D. Elegy; R. Gilbert","Battelle Memorial Inst., Richland, WA, USA; Battelle Memorial Inst., Richland, WA, USA","Proceedings of NORTHCON'93 Electrical and Electronics Convention","6 Aug 2002","1993","","","234","238","The successful development and delivery of an embedded system requires the collaboration of many diverse talents from the areas of marketing, project management and electrical, mechanical and software engineering. The management of these projects is complicated by the need to integrate and coordinate the development methodologies from these various disciplines. The paper considers how the application of object oriented techniques to the product development cycle provides a simplified framework for describing, developing and managing the product from concept to delivery.","","0-7803-9972-2","10.1109/NORTHC.1993.505060","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=505060","","Embedded system;Product development;System testing;Object oriented modeling;Project management;Fabrication;Software testing;Collaborative software;Software engineering;Energy consumption","product development;software development management;object-oriented programming;real-time systems;project management","object model;embedded system development;marketing;project management;software engineering;mechanical engineering;electrical engineering;software development methodologies;object oriented programming;product development cycle","","","","","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Standard processes developed to insure the quality of software through system test","S. J. Gartner; D. C. Droupa","AT&T Network Syst., Lisle, IL, USA; AT&T Network Syst., Lisle, IL, USA","IEEE Global Telecommunications Conference and Exhibition. Communications for the Information Age","6 Aug 2002","1988","","","451","455 vol.1","Describes system testing processes that were standardized for 19 diverse systems during the implementation of a quality improvement plan. Standardization of system test processes improved the process quality and, in turn, the product quality of released software systems. The standard processes developed include: a file management system used to ensure the integrity of the system test; complete general and specific test plans; standard release of systems to the user; and complete documentation for both processes and products. The authors describe how the processes are used.<<ETX>></ETX>","","","10.1109/GLOCOM.1988.25881","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=25881","","Software standards;Standards development;Software quality;Software systems;Software testing;System testing;Documentation;Standardization;Performance evaluation;Disaster management","DP management;file organisation;program testing;quality control;software reliability;standardisation","standard processes;standardisation;systems release;system test;quality improvement plan;process quality;product quality;software systems;file management system;documentation","","","","","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Re-host factors and a method to maintain the integrity of a test","L. Kirkland","WesTest Engineering, 810 Shepard Lane, Farmington, Utah 84025, 801-451-9191 ext 124, USA","2009 IEEE AUTOTESTCON","6 Nov 2009","2009","","","24","28","Re-hosting test program sets (TPS) is a diverse science. Methods of re-host are determined by many multifaceted factors. Some of these factors are: circuit complexity, customer requirements, documentation, optimal circuit coverage, schematics and data availability, existence of and obtainable test specs, legacy TPS history (no-fault-found and could-not duplicate problems or a high quality reliable TPS), quality of unit under test (UUT) data, technology of the TPS (digital, analog, hybrid, etc.), legacy ATEs, software (SW) development environment, SW tools and translators, interface test adapters (ITA), contractual requirements; mating connectors, test connectors and fixtures and usability and accessibility of existing legacy TPS code. This paper will cover various TPS re-hosting philosophies. Also, the paper will discuss the details of using the soft front panel method to duplicate a non-simulated digital legacy TPS.","1558-4550","978-1-4244-4980-4","10.1109/AUTEST.2009.5314098","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5314098","","Circuit testing;Software testing;Connectors;Complexity theory;Documentation;Availability;History;Software quality;Software tools;Fixtures","circuit testing;electronic engineering computing","test program sets;re-host factors;TPS re-hosting philosophies;soft front panel method;digital legacy TPS","","","","2","","6 Nov 2009","","","IEEE","IEEE Conferences"
"Test software at Texas Instruments: what SEI level is appropriate?","J. Payne; S. Griffith","Defense Syst. & Electron. Group, Texas Instrum. Inc., Lewisville, TX, USA; Defense Syst. & Electron. Group, Texas Instrum. Inc., Lewisville, TX, USA","Conference Record AUTOTESTCON '95. 'Systems Readiness: Test Technology for the 21st Century'","6 Aug 2002","1995","","","196","203","In 1989, Texas Instruments (TI) as a corporation embarked on an aggressive mission to improve the quality of its internally developed software. As a part of this ongoing effort, the Test Engineering Department of the Defense Systems and Electronics Group (DSEG) evaluated existing test software development practices and procedures. Using the Software Engineering Institute's (SEI) Capability Maturity Model (CMM) to measure software process quality, DSEG Test Engineering Department was internally appraised at SEI Level 2 and is currently working towards Level 3. There were unique challenges and difficulties relative to this achievement due to the wide diversity of test types, development standards, languages and platforms associated with test software. This paper presents the approach, schedule, lessons learned and some of the benefits which resulted from the efforts of the DSEG Test Engineering software quality thrust.","","0-7803-2621-0","10.1109/AUTEST.1995.522673","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=522673","","Software testing;Instruments;Electronic equipment testing;Software quality;System testing;Programming;Software engineering;Capability maturity model;Coordinate measuring machines;Current measurement","automatic test software;software quality;configuration management;software standards","test software;Texas Instruments software;software process quality;software development practices;Software Engineering Institute;Capability Maturity Model;Level 2;Level 3","","","","6","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Modular test architectures for the aerospace industry","C. Nair",NA,"Proceedings, IEEE AUTOTESTCON","10 Dec 2002","2002","","","241","247","This paper lays the ground work for a common test platform architecture being adopted by a number of organizations in the aerospace industry. Test engineers realize that integration is not a one time event. This paper discusses an architecture based on a modular hardware and software platform that ensures design freedom and the ability to upgrade test systems without rearchitecting the entire test system. Additionally engineers in diverse applications such as structural test, turbine/engine test, avionics, environmental screening, and hydraulic actuator test can now use common elements of design and implementation hence saving their organizations money and development time.","1080-7725","0-7803-7441-X","10.1109/AUTEST.2002.1047895","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1047895","","Aerospace testing;Aerospace industry;Computer architecture;Software testing;System testing;Hardware;Design engineering;Systems engineering and theory;Application software;Hydraulic turbines","automatic test equipment;aerospace testing;field buses","modular test architectures;aerospace industry;common test platform architecture;modular hardware platform;modular software platform;test system upgrade ability;PC based platform;PXI instrumentation platform;VXI instrumentation platform","","2","","","","10 Dec 2002","","","IEEE","IEEE Conferences"
"Accelerating functional simulation for processor based designs","R. Klein; T. Piekarz","Mentor Graphics Corp., Wilsonville, OR, USA; Mentor Graphics Corp., Wilsonville, OR, USA","Fifth International Workshop on System-on-Chip for Real-Time Applications (IWSOC'05)","14 Nov 2005","2005","","","323","328","Design verification is taking an increasing proportion of the design cycle of system-on-chip (SoC) designs. Designers spend up to 70% of their time developing and running tests to verify the functionality of their systems based in 2004 IC/ASIC Functional Verification Study (2005). Running regression suites against the design can take up to several years of CPU time to complete. In this paper we show how existing software code bases can be used to reduce the time to develop and execute verification tests. These techniques can be applied to both unit and system level verification. As shown in various hardware/software co-verification tools as stated in R. Klein (1996) and M. Stanbro (1998), the overall load on a simulation can be reduced by eliminating code and data references from the set of bus cycles generated by the processor model. These same techniques can be applied by hardware designers and verification engineers to use firmware, hardware diagnostics, and other software as a basis for creating functional verification tests. This software is often available from prior versions of the design or other groups on the design team. Simulation run-times can be reduced by partitioning the processor's memory space between the logic simulation and the processor model.","","0-7695-2403-6","10.1109/IWSOC.2005.34","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1530965","","Acceleration;Process design;Hardware;Software testing;System-on-a-chip;Integrated circuit testing;System testing;Application specific integrated circuits;Software tools;Design engineering","system-on-chip;formal verification;logic simulation;integrated circuit modelling;hardware-software codesign","functional simulation;processor based designs;design verification;system-on-chip designs;regression suites;software code;hardware/software co-verification tools;processor model;firmware;hardware diagnostics;functional verification tests;logic simulation","","6","","12","","14 Nov 2005","","","IEEE","IEEE Conferences"
"Dependency-aware Form Understanding","S. Zhang; Y. Li; W. Yan; Y. Guo; X. Chen","Peking University,MOE Key Lab of HCST,Dept of Computer Science,Beijing,China; Microsoft Research,Beijing,China; Beijing University of Posts and Telecommunications,Beijing,China; Peking University,MOE Key Lab of HCST,Dept of Computer Science,Beijing,China; Peking University,MOE Key Lab of HCST,Dept of Computer Science,Beijing,China","2021 IEEE 32nd International Symposium on Software Reliability Engineering (ISSRE)","11 Feb 2022","2021","","","139","149","Form understanding is an important task in many fields such as software testing, AI assistants, and improving accessibility. One key goal of understanding a complex set of forms is to identify the dependencies between form elements. However, it remains a challenge to capture the dependencies accurately due to the diversity of UI design patterns and the variety in development experiences. In this paper, we propose a deep-learning-based approach called DependEX, which integrates convolutional neural networks (CNNs) and transformers to help understand dependencies within forms. DependEX extracts semantic features from UI images using CNN-based models, captures contextual patterns using a multilayer transformer encoder module, and models dependencies between form elements using two embedding layers. We evaluate DependEX with a large-scale dataset from mobile Web applications. Experimental results show that our proposed model achieves over 92&#x0025; accuracy in identifying dependencies between UI elements, which significantly outperforms other competitive methods, especially for heuristic-based methods. We also conduct case studies on automatic form filling and test case generation from natural language (NL) instructions, which demonstrates the applicability of our approach.","2332-6549","978-1-6654-2587-2","10.1109/ISSRE52982.2021.00026","National Key Research and Development Program(grant numbers:2017YFB1001904); National Natural Science Foundation of China(grant numbers:61772042); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9700239","Form understanding;dependencies;deep learning;CNN;automatic form filling","Software testing;Semantics;Natural languages;Transformers;Feature extraction;Nonhomogeneous media;Filling","convolutional neural nets;deep learning (artificial intelligence);mobile computing;program testing","multilayer transformer encoder module;contextual patterns;CNN-based models;UI images;transformers;deep-learning-based approach;UI design patterns;complex set;accessibility;AI assistants;software testing;dependency-aware form understanding;test case generation;automatic form;heuristic-based methods;UI elements;DependEX;form elements;models dependencies","","","","38","IEEE","11 Feb 2022","","","IEEE","IEEE Conferences"
"Visualizing similarity between program executions","D. Leon; A. Podgurski; W. Dickinson","Corporacion NGS, Guayana, Venezuela; NA; NA","16th IEEE International Symposium on Software Reliability Engineering (ISSRE'05)","5 Dec 2005","2005","","","11 pp.","321","Multidimensional scaling (MDS) is a technique for visualizing multidimensional data points as a 2D scatter plot. It can be applied to execution profiles of software to reveal how similar executions are to one another. This is useful for certain software engineering applications, which require accurate representation of small dissimilarities and nearest neighbor relationships. However, the high-dimensionality of profiles can cause MDS techniques to represent small dissimilarities poorly. We evaluate several variants of MDS on large sets of profiles, to see which techniques produce the most accurate displays. These include four previously proposed techniques -classical scaling followed by iterative majorization, energy minimization, ordinal AIDS, and cluster differences scaling - and two techniques of our invention - hierarchical MDS and sparse region scaling. The results suggest that each technique except ordinal MDS can significantly improve the representation of small dissimilarities between program executions and that hierarchical MDS and sparse region scaling perform best overall","2332-6549","0-7695-2482-6","10.1109/ISSRE.2005.45","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1544745","","Multidimensional systems;Displays;Software testing;Euclidean distance;Data visualization;Scattering;Application software;Software tools;Maintenance;Software engineering","program diagnostics;program visualisation","program execution similarity visualization;software execution profiles;software engineering;iterative majorization;energy minimization;cluster difference scaling;hierarchical multidimensional scaling;sparse region scaling","","7","","16","","5 Dec 2005","","","IEEE","IEEE Conferences"
"Generating Tests for the Discovery of Security Flaws in Product Variants","F. Araújo; I. Medeiros; N. Neves","Universidade de Lisboa,LASIGE, Faculdade de Ciências,Portugal; Universidade de Lisboa,LASIGE, Faculdade de Ciências,Portugal; Universidade de Lisboa,LASIGE, Faculdade de Ciências,Portugal","2020 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","4 Aug 2020","2020","","","133","142","Industrial products, like vehicles and trains, integrate embedded systems implementing diverse and complicated functionalities. Such functionalities are programmable by software and contain a multitude of parameters necessary for their configuration, which have been increasing due to the market diversification and customer demand. In addition, industrial products are often built by aggregating different software parts (components), constituting thus product variants. Product variants with such variability need to be tested adequately, in particular if one is concerned with security vulnerabilities. While efficient automated testing approaches already exist, such as fuzzing, no tool is able to use results from previous testing campaigns to increase the efficiency of security testing the next product variant that shares certain functionalities. This paper presents an approach that can ignore already covered functionalities by previous tests and give more importance to blocks of code that have yet to be checked. The benefit is to avoid repeating unnecessary work, hence increasing the speed and the coverage in the new variant. The approach was implemented in a tool based on the AFL fuzzer and was validated with a set of programs of different versions. The experimental results show that the tool can perform better than AFL in our testing scenario.","","978-1-7281-1075-2","10.1109/ICSTW50294.2020.00033","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9155944","Fuzzing;Vulnerability detection;Coverage testing;Software Variant testing;Software security","Software;Fuzzing;Computer bugs;Security;Tools","embedded systems;production engineering computing;program testing;security of data","security flaws;testing scenario;previous tests;security testing;previous testing campaigns;efficient automated testing approaches;different software parts;complicated functionalities;diverse functionalities;industrial products;product variant","","","","27","","4 Aug 2020","","","IEEE","IEEE Conferences"
"Ate software, whence - whither","R. T. Oishi","RLG Associates, Inc.","International Automatic Testing Conference AUTOTESTCON '78.","10 Dec 2002","1978","","","210","214","Standardization efforts within ATE software have been aimed pri marily at the languages used to prepare test programs. In the future the diversity of computer con figurations available to ATE will increase tremendously. To take full advantage of this diversity in a coherent manner will require some standardization of operating system features. The primary goal of such standardization should be the operator to computer interface. Given such standardization a wide range of possibilities become available without the disadvantages that diverse operator interfaces impose.","","","10.1109/AUTEST.1978.764367","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=764367","","Standardization;Operating systems;System testing;Programming profession;Costs;Control systems;System software;Manufacturing;Software testing;Computer interfaces","","","","","","","","10 Dec 2002","","","IEEE","IEEE Conferences"
"Mobile Compatibility Testing Using Multi-objective Genetic Algorithm","J. Cheng; Y. Zhu; T. Zhang; C. Zhu; W. Zhou","Sch. of Comput., Northwest Polytech. Univ., Xi'an, China; Sch. of Comput., Northwest Polytech. Univ., Xi'an, China; Sch. of Software & Microelectron., Northwest Polytech. Univ., Xi'an, China; Sch. of Software & Microelectron., Northwest Polytech. Univ., Xi'an, China; Sch. of Software & Microelectron., Northwest Polytech. Univ., Xi'an, China","2015 IEEE Symposium on Service-Oriented System Engineering","25 Jun 2015","2015","","","302","307","Mobile compatibility testing has been identified as one urgent and challenging issue. Mobile apps are expected to work on thousand kinds of mobile devices with diverse device features and mobile platforms. So mobile compatibility testing is complex and costly, it is impossible to test mobile apps on all mobile devices and in all environments with limited test resources. Then the question is how to select test devices in cost-effective mobile app compatibility testing. This paper proposes a novel test device selection approach using multi-objective genetic algorithm. Using the proposed approach, the minimum number of mobile devices is selected, and the multiple test coverage requirements are met simultaneously. Furthermore, the case study results have successfully demonstrated that the proposed approach is effective for mobile compatibility testing.","","978-1-4799-8356-8","10.1109/SOSE.2015.36","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7133545","software testing;mobile testing;compatibility testing;clustering algorithm;test coverage","Mobile communication;Testing;Mobile handsets;Biological cells;Genetic algorithms;Sociology;Statistics","genetic algorithms;mobile computing;program testing","cost-effective mobile app compatibility testing;multiobjective genetic algorithm;mobile devices;diverse device features;mobile platforms;limited test resources;test device selection approach;multiple test coverage requirements","","2","","29","","25 Jun 2015","","","IEEE","IEEE Conferences"
"A Novel Mask-Coding Representation for Set Cover Problems with Applications in Test Suite Minimisation","S. Yoo","Centre for Res. on Search, King's Coll. London, London, UK","2nd International Symposium on Search Based Software Engineering","11 Nov 2010","2010","","","19","28","Multi-Objective Set Cover problem forms the basis of many optimisation problems in software testing because the concept of code coverage is based on the set theory. This paper presents Mask-Coding, a novel representation of solutions for set cover optimisation problems that explores the problem space rather than the solution space. The new representation is empirically evaluated with set cover problems formulated from real code coverage data. The results show that Mask-Coding representation can improve both the convergence and diversity of the Pareto-efficient solution set of the multi-objective set cover optimisation.","","978-1-4244-8341-9","10.1109/SSBSE.2010.12","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5635169","set-cover representation;search-based software engineering;test suite minimisation","Optimization;Space exploration;Search problems;Convergence;Greedy algorithms;Redundancy;Software testing","minimisation;program testing;set theory","mask-coding representation;test suite minimisation;multiobjective set cover problem;optimisation problems;software testing;code coverage;set theory;Pareto-efficient solution set","","15","","24","","11 Nov 2010","","","IEEE","IEEE Conferences"
"MAF: Method-Anchored Test Fragmentation for Test Code Plagiarism Detection","W. Sun; X. Wang; H. Wu; D. Duan; Z. Sun; Z. Chen","State Key Laboratory for Novel Software Technology, Nanjing University; State Key Laboratory for Novel Software Technology, Nanjing University; State Key Laboratory for Novel Software Technology, Nanjing University; State Key Laboratory for Novel Software Technology, Nanjing University; State Key Laboratory for Novel Software Technology, Nanjing University; State Key Laboratory for Novel Software Technology, Nanjing University","2019 IEEE/ACM 41st International Conference on Software Engineering: Software Engineering Education and Training (ICSE-SEET)","15 Aug 2019","2019","","","110","120","Software engineering education becomes popular due to the rapid development of the software industry. In order to reduce learning costs and improve learning efficiency, some online practice platforms have emerged. This paper proposes a novel test code plagiarism detection technology, namely MAF, by introducing bidirectional static slicing to anchor methods under test and extract fragments of test codes. Combined with similarity measures, MAF can achieve effective plagiarism detection by avoiding massive unrelated noisy test codes. The experiment is conducted on the dataset of Mooctest, which so far has supported hundreds of test activities around the world in the past 3 years. The experimental results show that MAF can effectively improve the performance (precision, recall and F1-measure) of similarity measures for test code plagiarism detection. We believe that MAF can further expand and promote software testing education, and it can also be extended to use in test recommendation, test reuse and other engineering applications.","","978-1-7281-1000-4","10.1109/ICSE-SEET.2019.00020","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8802113","Similarity measure, Plagiarism detection, Unit testing, Online training","","computer aided instruction;computer science education;educational courses;program testing;software engineering;source code (software)","MAF;method-anchored test fragmentation;software engineering education;software industry;test code plagiarism detection technology;software testing education;test recommendation;test reuse;Mooctest","","2","","43","","15 Aug 2019","","","IEEE","IEEE Conferences"
"Assessing Diagnostic Techniques for Fault Tolerance in Software","G. Gallardo; J. May; J. C. Gallardo",Bristol Univ.; Bristol Univ.; Bristol Univ.,"2007 Annual Reliability and Maintainability Symposium","12 Mar 2007","2007","","","232","237","One of the main concerns in software safety critical applications is to ensure sufficient reliability if one cannot prove the absence of faults. Fault tolerance (FT) provides a plausible method for improving reliability claims in the presence of systematic failures in software. It is plausible that some software FT techniques offer increased protection than others. However, the extent of claims that can be made for different FT software architectures remains unclear. We investigate an approach to FT that integrates data diversity (DD) assertions and traditional assertions (TA). We also present the principles of a method to assess the effectiveness of the approach. The aim of this approach is to make it possible to evolve more powerful FT and thereby improve reliability. This is a step towards the aim of understanding the effectiveness of FT safety-critical applications and thus making it easier to use FT in safety arguments","0149-144X","0-7803-9766-5","10.1109/RAMS.2007.328122","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4126355","","Fault tolerance;Software safety;Redundancy;Fault tolerant systems;Software testing;Fault diagnosis;Microprocessors;Software systems;Application software;Computer architecture","program testing;software fault tolerance","diagnostic techniques;software fault tolerance;software safety critical applications;software systematic failures;data diversity;traditional assertions","","","","17","","12 Mar 2007","","","IEEE","IEEE Conferences"
"Detecting C++ Compiler Front-End Bugs via Grammar Mutation and Differential Testing","H. Tu; H. Jiang; Z. Zhou; Y. Tang; Z. Ren; L. Qiao; L. Jiang","School of Software, Dalian University of Technology, Dalian 188065 China, and also with the School of Computing and Information Systems, Singapore Management University Singapore 116024.; School of Software, Dalian University of Technology, Dalian 116024 China, also with and Key Laboratory for Ubiquitous Network and Service Software of Liaoning Province China, and also with the DUT Artificial Intelligence, Dalian 116024 China.; School of Software, Dalian University of Technology, Dalian 116024 China, also with and Key Laboratory for Ubiquitous Network and Service Software of Liaoning Province China, and also with the DUT Artificial Intelligence, Dalian 116024 China.; School of Software, Dalian University of Technology, Dalian 116024 China, also with and Key Laboratory for Ubiquitous Network and Service Software of Liaoning Province China, and also with the DUT Artificial Intelligence, Dalian 116024 China.; School of Software, Dalian University of Technology, Dalian 116024 China, also with and Key Laboratory for Ubiquitous Network and Service Software of Liaoning Province China, and also with the DUT Artificial Intelligence, Dalian 116024 China.; Beijing Institute of Control Engineering, Beijing 100190 China.; School of Computing and Information Systems, Singapore Management University Singapore 188065.","IEEE Transactions on Reliability","","2022","PP","99","1","15","C++ is a widely used programming language and the C++ front-end is a critical part of a C++ compiler. Although many techniques have been proposed to test compilers, few studies are devoted to detecting bugs in C++ compiler. In this study, we take the first step to detect bugs in C++ compiler front-ends. To do so, two main challenges need to be addressed, namely, the acquisition of test programs that are more likely to trigger bugs in compiler front-ends and the bug identification from complicated compiler outputs. In this article, we propose a novel framework named Ccoft to detect bugs in C++ compiler front-ends. To address the first challenge, Ccoft implements a practical program generator. The generator first transforms C++ grammars into a flexible structured format and then utilizes an equal-chance selection (ECS) strategy to conduct structure-aware grammar mutation to generate diverse C++ programs. Next, Ccoft employs a set of differential testing strategies to identify various kinds of bugs in C++ compiler front-ends by comparing complex outputs emitted by C++ compilers, thus tackling the second challenge. Empirical evaluation results over two mainstream compilers (i.e., GCC and Clang) show that Ccoft greatly improves two state-of-the-art approaches (i.e., Dharma and Grammarinator) by 135% and 111% in terms of the numbers of detected bugs, respectively. By running Ccoft for three months, we have successfully reported 136 bugs for two C++ compilers, of which 78 (57 confirmed, assigned, or fixed) for GCC and 58 (10 confirmed or fixed) for Clang.","1558-1721","","10.1109/TR.2022.3171220","National Natural Science Foundation of China(grant numbers:61902181 62032004); CCF-SANGFOR(grant numbers:2022003); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9777893","Automated testing;compiler defect;compiler testing;front-end;reliability;software testing","Computer bugs;C++ languages;Program processors;Grammar;Testing;Software;Syntactics","","","","","","","IEEE","18 May 2022","","","IEEE","IEEE Early Access Articles"
"Feature-Based Similarity Retrieval in Content-Based Image Retrieval","J. Xu; B. Xu; S. Men","Sch. of Comput. Sci. & Eng., Southeast Univ., Nanjing, China; Shanghai Key Lab. of Comput. Software Testing & Evaluating, Shanghai, China; Sch. of Eng., Hong Kong Univ. of Sci. & Technol., Hong Kong, China","2010 Seventh Web Information Systems and Applications Conference","23 Sep 2010","2010","","","215","219","Content-based image retrieval (CBIR), providing query by image examples other than key words, is a hot topic in recent years. Querying by words mainly depends on the performance of crawler, whereas query by example is more unpredictable, since feature extraction is still challenging due to the rich content of the image. This paper focuses on the issue of similarity retrieval in high-dimensional space, a problem of performing nearest neighbor queries efficiently and effectively over large high-dimensional databases. Although some arguments have advocated that nearest-neighbor queries do not even make sense for high-dimensional data, we review the existing techniques of working in vector space of high dimension, and provide our unique view towards the issue of time complexity and precision during similarity retrieval in CBIR.","","978-1-4244-8440-9","10.1109/WISA.2010.46","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5581364","similarity retrieval;approximate nearest neighbor search;high dimension;mutual information","Feature extraction;Nearest neighbor searches;Measurement;Image retrieval;Complexity theory;Approximation methods;Kernel","content-based retrieval;feature extraction;image retrieval","feature-based similarity retrieval;content-based image retrieval;crawler performance;feature extraction;image content;nearest-neighbor queries;high-dimensional databases;vector space","","3","","11","","23 Sep 2010","","","IEEE","IEEE Conferences"
"Automated Tests for Mobile Games: An Experience Report","G. Lovreto; A. T. Endo; P. Nardi; V. H. S. Durelli","Dept. of Comput., Fed. Univ. of Technol. - Parana, Cornelio Procopio, Brazil; Dept. of Comput., Fed. Univ. of Technol. - Parana, Cornelio Procopio, Brazil; Dept. of Comput., Fed. Univ. of Technol. - Parana, Cornelio Procopio, Brazil; Dept. of Comput. Sci., Fed. Univ. of Sao Joao del Rei, Sao Joao del Rei, Brazil","2018 17th Brazilian Symposium on Computer Games and Digital Entertainment (SBGames)","7 Feb 2019","2018","","","48","488","As mobile gaming is an ever-growing, competitive and profitable market, there has been an increasing demand for better quality in video game software. While manual testing is still a common practice among mobile game developers, some repetitive and error-prone tasks could benefit from test automation. For instance, test scripts that perform sanity checks of the proper functioning of a mobile game would be desirable in an ecosystem with constant hotfixes and updates, as well as a diverse set of configurations (e.g., device hardware, screensizes, and platforms). In this context, this paper reports an experience on developing automated test scripts for mobile games. To this end, we randomly selected 16 mobile games, from different genres, among the popular ones from the Google Play Store. For each game, test scripts were developed using the Appium testing framework and the OpenCV library. Based on our results, we provide an in-depth discussion on the challenges and lessons learned.","2159-6662","978-1-5386-9605-7","10.1109/SBGAMES.2018.00015","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8636923","Mobile Apps;Software Testing;Mobile Games;Video Game Software;Test Cases","Games;Testing;Land mobile radio;Python;Manuals;Task analysis","computer games;evolutionary computation;human computer interaction;interactive systems;mobile computing","computer games;mobile computing;interactive systems;evolutionary computation;human computer interaction;smart phones;virtual reality;computer simulation;ergonomics;handicapped aids","","2","","23","","7 Feb 2019","","","IEEE","IEEE Conferences"
"Are Our Students Prepared for Testing Based Software Development?","V. Bhattacherjee; M. S. Neogi; R. Mahanti","Deptt. of CS & E, Birla Inst. of Technol., Ranchi; Deptt. of lM, Xavier Inst. of Social Service, Ranchi; Tata Consultancy Services, Kolkata","2009 22nd Conference on Software Engineering Education and Training","10 Apr 2009","2009","","","210","211","The pervasive impact of software in systems design as well as its changing character presents immense challenges for the education of software engineers. In the twenty first century, software engineers face the challenges of rapid change and uncertainty along with dependability and diversity. This paper presents the results of a study conducted to assess the pair programmers' as well as individual programmers' ability and eagerness to begin with early testing while writing programs or developing semester projects.","2377-570X","978-1-4244-3431-2","10.1109/CSEET.2009.57","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4812699","","Software testing;Programming profession;Software engineering;Laboratories;Educational technology;Software systems;Educational programs;Systems engineering education;Design engineering;Uncertainty","computer aided instruction;computer science education;programming;software engineering","testing based software development;pair programming","","2","","11","","10 Apr 2009","","","IEEE","IEEE Conferences"
"Position Statement: Evolving Software Models for Global Organizations","U. Basu","Tata Consultancy Services, Shanghai, China","2009 Third IEEE International Conference on Secure Software Integration and Reliability Improvement","10 Nov 2009","2009","","","320","320","In an increasingly global world, organizations are opening up to working across diverse geographies and providing goods and / or services across boundaries. This need to globalize stems from increased stakeholders demands on RoI, increased competition and an ever shrinking pie of the market share for organizations not able to adapt. Revenues and costs remain the two main driving factors. This need to globalize brings with it a multitude of operational challenges, including the need for a global IT program and a need for global software delivery. IT programs are increasingly architected at global levels, with specific local flavors to deal with a mix of operating environments and operational frameworks. Global software systems like this are characterized by their flexibility, fast speed of deployment, scalability and ability to adapt to local needs.","","978-0-7695-3758-0","10.1109/SSIRI.2009.69","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5325358","","Collaborative software;Geography;Costs;Software systems;Scalability;Programming;Chaotic communication;Software testing;Bridges;Communication system control","","","","","","","","10 Nov 2009","","","IEEE","IEEE Conferences"
"Successful use of rate monotonic theory on a formidable real time system","L. Doyle; J. Elzey",ITT Aerospace/Commun. Div.; ITT Aerospace/Commun. Div.,"Proceedings of 11th IEEE Workshop on Real-Time Operating Systems and Software","6 Aug 2002","1994","","","74","78","The navigation payload software for the next block of Global Positioning System satellites recently completed testing. The computer program for the onboard computer is sufficiently complex to expose almost every issue that has been put forward in rate monotonic theory. The success of this effort demonstrates the utility of the theory in this type of application. The system designed required the processor to perform a highly diverse set of hard deadline real-time functions. This design would have been difficult or impossible prior to the development of rate monotonic theory. The use of utilization bounds has important advantages from a software engineering point of view. The problems of insuring schedulability over the course of development and verifying the schedulability of the finished system are discussed.<<ETX>></ETX>","","0-8186-5710-3","10.1109/RTOSS.1994.292557","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=292557","","Satellite navigation systems;Payloads;Global Positioning System;Software testing;System testing;Application software;Process design;Real time systems;Software engineering;Processor scheduling","real-time systems;software engineering;satellite relay systems;radionavigation;program testing;computer testing;scheduling;aerospace computing","rate monotonic theory;formidable real time system;navigation payload software;Global Positioning System satellites;computer program;onboard computer;utilization bounds;software engineering;schedulability;embedded space vehicle application","","2","","11","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Reliability improvement of Web-based software applications","L. Davila-Nicanor; P. Mejia-Alvarez","Seccion de Computacion, CINVESTAV-IPN, Zacatenco, Mexico; Seccion de Computacion, CINVESTAV-IPN, Zacatenco, Mexico","Fourth International Conference onQuality Software, 2004. QSIC 2004. Proceedings.","22 Nov 2004","2004","","","180","188","In diverse industrial and academic environments, the quality of the software has been evaluated (validated) using different analytic studies. It is a common practice on these environments to use statistical models for the assurance, control and evaluation of the quality of a software product or process. A number of industries in the safety-critical sector are forced nowadays to use such processes by industry-specific standards (e.g., the DO-178B standard for airborne software systems). The contribution of the present work is focused on the development of a methodology for the evaluation and analysis of the reliability of Web-based software applications. We tested our methodology in a Web-based software system and used statistical modeling theory for the analysis and evaluation of the reliability. The behavior of the system under ideal conditions was evaluated and compared against the operation of the system executing under real conditions. The personal software process (PSP) was introduced in our methodology for improving the quality of the process and the product. The evaluation + improvement (Ei) process is performed in our methodology to evaluate and improve the quality of the software system. The results obtained demonstrated the effectiveness and applicability of our methodology.","","0-7695-2207-6","10.1109/QSIC.2004.1357959","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1357959","","Application software;Computer industry;Software quality;Software systems;Electrical equipment industry;Software standards;Software testing;System testing;Reliability theory;Performance evaluation","software reliability;Internet;software quality;software performance evaluation;software process improvement;statistical analysis","reliability improvement;Web-based software applications;software quality assurance;software quality control;software quality evaluation;Web-based software reliability;statistical modeling theory;reliability analysis;reliability evaluation;personal software process;software system quality;safety-critical sector;industry-specific standards","","1","","17","","22 Nov 2004","","","IEEE","IEEE Conferences"
"Role-based wiki for reuse of Off-the-Shelf Components","Jingyue Li; C. Ayala; R. Conradi","Norwegian University of Science and Technology (NTNU), Norway; Norwegian University of Science and Technology (NTNU), Norway; Norwegian University of Science and Technology (NTNU), Norway","2009 ICSE Workshop on Wikis for Software Engineering","10 Jun 2009","2009","","","78","81","IT companies are confronted with a huge, growing Off-the-Shelf (OTS) marketplace containing incredibly large amount of diverse, partial, ephemeral, sometimes tacit and not always trustable information about OTS components. Our empirical studies illustrate that different users, such as OTS evaluator, OTS integrator, system tester, and system maintainer, need different information and knowledge about OTS components when facing different scenarios. Although a few companies are using mini-wikis internally to manage and share OTS related knowledge, knowledge sharing across companies is rare. Searching existing web portals or sites of OTS components is time consuming and often does not bring systematic knowledge. This position paper proposes role-based wikis to organize OTS components related knowledge in a systematic way. One motivation of constructing such a wiki is to provide necessary knowledge for different users to help them reduce risks. Another motivation is to provide a global centralized platform, so that OTS users can systematically share their knowledge across organizations.","","978-1-4244-3742-9","10.1109/WIKIS4SE.2009.5069999","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5069999","","Portals;Open source software;Software maintenance;Collaboration;System testing;Knowledge management;Internet;Scattering;Programming;Software testing","object-oriented programming;portals;Web sites","role-based wiki;off-the-shelf components reuse;knowledge sharing;Web portals;Web sites;global centralized platform","","","","17","","10 Jun 2009","","","IEEE","IEEE Conferences"
"Designing Built-In Test for Microprocessors","S. Smoot",Baltimore,"Annual Reliability and Maintainability Symposium, 1984. Proceedings.","10 Dec 2002","1984","","","412","415","This paper provides the BIT (Built-In-Test) designer with a generalized test strategy for testing microprocessors (Mp). The basic microprocessor BIT tests are defined including methods of modifying these tests to a specific microprocessor. The test hardware and software, which supports the individual tests, are described along with an example of its implementation. Some design options and tradeoffs are made available to allow flexibility for diversified application. An example of this strategy using INTEL's 8086 microprocessor is provided.","","","10.1109/RAMS.1984.764327","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=764327","","Built-in self-test;Microprocessors;Hardware;Central Processing Unit;Read only memory;Circuit testing;Performance evaluation;System testing;Microprogramming;Software testing","","BIT(Built-In-Test), design for testability, data, digital computer, interrupt network, unique signatures","","","2","3","","10 Dec 2002","","","IEEE","IEEE Conferences"
"A methodology for operational profile refinement","S. Elbaum; S. Narla","Dept. of Comput. Sci. & Eng., Nebraska Univ., Lincoln, NE, USA; NA","Annual Reliability and Maintainability Symposium. 2001 Proceedings. International Symposium on Product Quality and Integrity (Cat. No.01CH37179)","7 Aug 2002","2001","","","142","149","Numerous reliability models and testing practices are based on operational profiles. Typically, a single operational profile is used to represent the usage of a system with the assumption that a homogeneous customer base executes the system. However, if the customer base is heterogeneous, estimates computed on a single operational profile may be inaccurate. A single operational profile does not reflect the diverse customer patterns and it only ""averages"" the usage of the system, obscuring the real information about the operations probabilities. Decisions made on these estimates are likely to be biased and of limited usefulness. This paper presents a refinement methodology for the generation of more accurate operational profiles that truly represent the diverse customer usage patterns. Clustering analysis supports the refinement methodology for identifying groups of customers with similar characteristics. Empirical stopping rules and validation procedures complete the refining methodology. A complete example of the methodology is presented on a large application. The example evidences the different perspective and accuracy that can be obtained through this refining methodology.","0149-144X","0-7803-6615-8","10.1109/RAMS.2001.902457","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=902457","","Software reliability;Reliability engineering;Software testing;Application software;Software systems;Communication industry;Performance evaluation;Resource management;System testing;Terminology","reliability;failure analysis;testing;probability;pattern clustering","operational profile refinement methodology;reliability models;testing practices;customer patterns;operations probabilities;clustering analysis;empirical stopping rules;validation procedures","","4","","10","","7 Aug 2002","","","IEEE","IEEE Conferences"
"Communicating with Your Customers Determining Their Needs","E. C. Dzupinka; M. D. Langenbahn; M. E. Randall; C. M. Sliva",International Business Machines; NA; NA; NA,"Proceedings of the 1987 IEEE Southern Tier Technical Conference, 1987.","10 Dec 2002","1987","","","244","252","One of the more difficult aspects of providing a product to a customer is determining what the customer really needs. Frequently, the customer is not sure exactly what they need. They just have a problem and they are looking to you to provide the solution. The difficulty in determining product requirements is compounded by the fact that Test Design Automation (TDA) products need to be useful to a wide range of customers with diverse needs. That is the situation in which we found ourselves. TDA has the responsibility of supplying the IBM Corporation with its needed Test Generation and Fault Simulation capabilities. These products are software solutions designed to run on a wide range of general purpose system 370 computers under both VM and MVS operating systems. Our customer mix is a widely diverse set of product development groups; from the designers of the 3090 series in Poughkeepsie to a typewriter design group in Uxington, Kentucky. Not only is the product mix diverse, but also the geographic locations of the development groups. We serve product development labs worldwide. First, we had to be able to identify our ""representative"" customer. Once this was done we would need to open up more direct lines of communication with these customers. The method we used to improve upon these problems is the subject for this paper. It will cover the cross-section of the group which went about solving the problems; the methods chosen to attack the problems; implementation; and the mechanisms put into place to continue the work after the group's dissolution.","","","10.1109/STIER.1987.716400","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=716400","","Automatic testing;Design automation;Product design;Software testing;Documentation;Programming profession;Ducts;Software design;Virtual manufacturing;Operating systems","","","","","","4","","10 Dec 2002","","","IEEE","IEEE Conferences"
"A speech recognition system using a neural network model for vocal shaping","C. Love; W. Kinsner","Dept. of Electr. & Comput. Eng., Manitoba Univ., Winnipeg, Man., Canada; Dept. of Electr. & Comput. Eng., Manitoba Univ., Winnipeg, Man., Canada","[Proceedings] WESCANEX '91","6 Aug 2002","1991","","","216","220","An automatic, isolated, limited vocabulary, multilevel speech recognition system is presented. The system uses a standard backpropagation neural network as the recognizer and linear predictive coding coefficients as the recognition feature. The recognition of an utterance involves the identity (class) and version (quality level). Multilevel classification involves using up to five discrete nonlinear levels that correspond to human assessment. The system software was developed using both Microsoft C and Think C. The result of the multilevel test using a vowel subset achieved 61.8% recognition, and it achieved an average classification of good. The consonant test achieved recognition of 46.5% and 48% for the vowels /a/ and /e/, respectively. The system is intended to be used as a vocal shaping tool by autistic individuals, thus requiring a multilevel recognition scheme.<<ETX>></ETX>","","0-87942-594-6","10.1109/WESCAN.1991.160549","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=160549","","Speech recognition;Neural networks;Vocabulary;Backpropagation;Linear predictive coding;Humans;System software;Software testing;System testing;Autism","filtering and prediction theory;neural nets;speech recognition","neural network model;vocal shaping;limited vocabulary;multilevel speech recognition;backpropagation neural network;linear predictive coding;recognition feature;quality level;discrete nonlinear levels;human assessment;Microsoft C;Think C;vowel subset;consonant test;autistic individuals","","1","","12","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Automated Repair of Internationalization Presentation Failures in Web Pages Using Style Similarity Clustering and Search-Based Techniques","S. Mahajan; A. Alameer; P. McMinn; W. G. J. Halfond","Univ. of Southern California, Los Angeles, CA, USA; Univ. of Southern California, Los Angeles, CA, USA; Univ. of Sheffield, Sheffield, UK; Univ. of Southern California, Los Angeles, CA, USA","2018 IEEE 11th International Conference on Software Testing, Verification and Validation (ICST)","28 May 2018","2018","","","215","226","Internationalization enables companies to reach a global audience by adapting their websites to locale specific language and content. However, such translations can often introduce Internationalization Presentation Failures (IPFs) - distortions in the intended appearance of a website. It is challenging for developers to design websites that can inherently adapt to varying lengths of text from different languages. Debugging and repairing IPFs is complicated by the large number of HTML elements and CSS properties that define a web page's appearance. Tool support is also limited as existing techniques can only detect IPFs, with the repair remaining a labor intensive manual task. To address this problem, we propose a search-based technique for automatically repairing IPFs in web applications. Our empirical evaluation showed that our approach was able to successfully resolve 98% of the reported IPFs for 23 real-world web pages. In a user study, participants rated the visual quality of our fixes significantly higher than the unfixed versions.","","978-1-5386-5012-7","10.1109/ICST.2018.00030","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8367050","Internationalization Presentation Failures;automated search based repair;web apps;search based software engineering","Web pages;Maintenance engineering;Cascading style sheets;Layout;Visualization;Debugging;Companies","hypermedia markup languages;pattern clustering;Web sites","style similarity clustering;global audience;locale specific language;labor intensive manual task;internationalization presentation failures;search-based techniques;Website developers;repairing IPFs;debugging IPFs;HTML elements;CSS properties;Web pages appearance","","13","","45","","28 May 2018","","","IEEE","IEEE Conferences"
"STICCER: Fast and Effective Database Test Suite Reduction Through Merging of Similar Test Cases","A. Alsharif; G. M. Kapfhammer; P. McMinn",University of Sheffield; Allegheny College; University of Sheffield,"2020 IEEE 13th International Conference on Software Testing, Validation and Verification (ICST)","5 Aug 2020","2020","","","220","230","Since relational databases support many software applications, industry professionals recommend testing both database queries and the underlying database schema that contains complex integrity constraints. These constraints, which include primary and foreign keys, NOT NULL, and arbitrary CHECK constraints, are important because they protect the consistency and coherency of data in the relational database. Since testing integrity constraints is potentially an arduous task, human testers can use new tools to automatically generate test suites that effectively find schema faults. However, these tool-generated test suites often contain many lengthy tests that may both increase the time overhead of regression testing and limit the ability of human testers to understand them. Aiming to reduce the size of automatically generated test suites for database schemas, this paper introduces STICCER, a technique that finds overlaps between test cases, merging database interactions from similar tests and removing others. By systematically discarding and merging redundant tests, STICCER creates a reduced test suite that is guaranteed to have the same coverage as the original one. Using thirty-four relational database schemas, we experimentally compared STICCER to two greedy test suite reduction techniques and a random method. The results show that, compared to the greedy and random methods, STICCER is the most effective at reducing the number of test cases and database interactions while maintaining test effectiveness as measured by the mutation score.","2159-4848","978-1-7281-5778-8","10.1109/ICST46399.2020.00031","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9159082","","Relational databases;Testing;Merging;Software;Industries;Generators","data integrity;database management systems;greedy algorithms;program testing;query processing;redundancy;relational databases","STICCER;effective database test suite reduction;similar test cases;relational database;database queries;underlying database schema;complex integrity constraints;primary keys;foreign keys;arbitrary CHECK constraints;human testers;schema faults;tool-generated test suites;lengthy tests;regression testing;automatically generated test suites;database schemas;merging database interactions;similar tests;merging redundant tests;reduced test suite;greedy test suite reduction techniques;test effectiveness","","2","","55","","5 Aug 2020","","","IEEE","IEEE Conferences"
"Taming a Fuzzer Using Delta Debugging Trails","Y. Pei; A. Christi; X. Fern; A. Groce; W. Wong","Sch. of Electr. Eng. & Comput. Sci., Oregon State Univ., Corvallis, OR, USA; Sch. of Electr. Eng. & Comput. Sci., Oregon State Univ., Corvallis, OR, USA; Sch. of Electr. Eng. & Comput. Sci., Oregon State Univ., Corvallis, OR, USA; Sch. of Electr. Eng. & Comput. Sci., Oregon State Univ., Corvallis, OR, USA; Sch. of Electr. Eng. & Comput. Sci., Oregon State Univ., Corvallis, OR, USA","2014 IEEE International Conference on Data Mining Workshop","29 Jan 2015","2014","","","840","843","Fuzzers, or random testing tools, are powerful tools for finding bugs. A major problem with using fuzzersis that they often trigger many bugs that are already known. The fuzzer taming problem addresses this issue by ordering bug-triggering random test cases generated by a fuzzer such that test cases exposing diverse bugs are found early in the ranking. Previous work on fuzzer taming first reduces each test case into a minimal failure-inducing test case using delta debugging, then finds the ordering by applying the Furthest Point First algorithm over the reduced test cases. During the delta debugging process, a sequence of failing test cases is generated (the ""delta debugging trail""). We hypothesize that these additional failing test cases also contain relevant information about the bug and could be useful for fuzzertaming. In this paper, we propose to use these additional failing test cases generated during delta debugging to help tame fuzzers. Our experiments show that this allows for more diverse bugs to be found early in the furthest point first ranking.","2375-9259","978-1-4799-4274-9","10.1109/ICDMW.2014.58","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7022682","Software Testing;Automated Testing;Fuzzing;Fuzzer Taming;Test-Case Reduction","Computer bugs;Debugging;Testing;Engines;Software;Feature extraction;Conferences","program debugging;program testing;software tools","fuzzer taming;delta debugging trails;random testing tools;bug-triggering random test cases;minimal failure-inducing test case;furthest point first ranking algorithm","","","","12","","29 Jan 2015","","","IEEE","IEEE Conferences"
"Prioritizing Manual Test Cases in Traditional and Rapid Release Environments","H. Hemmati; Z. Fang; M. V. Mantyla","Dept. of Comput. Sci., Univ. of Manitoba, Winnipeg, MB, Canada; Sch. of Software Eng., Tongji Univ., Shanghai, China; Univ. of Oulu, Oulu, Finland","2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST)","7 May 2015","2015","","","1","10","Test case prioritization is one of the most practically useful activities in testing, specially for large scale systems. The goal is ranking the existing test cases in a way that they detect faults as soon as possible, so that any partial execution of the test suite detects maximum number of defects for the given budget. Test prioritization becomes even more important when the test execution is time consuming, e.g., manual system tests vs. automated unit tests. Most existing test case prioritization techniques are based on code coverage, which requires access to source code. However, manual testing is mainly done in a black- box manner (manual testers do not have access to the source code). Therefore, in this paper, we first examine the existing test case prioritization techniques and modify them to be applicable on manual black-box system testing. We specifically study a coverage- based, a diversity-based, and a risk driven approach for test case prioritization. Our empirical study on four older releases of Mozilla Firefox shows that none of the techniques are strongly dominating the others in all releases. However, when we study nine more recent releases of Firefox, where the development has been moved from a traditional to a more agile and rapid release environment, we see a very signifiant difference (on average 65% effectiveness improvement) between the risk-driven approach and its alternatives. Our conclusion, based on one case study of 13 releases of an industrial system, is that test suites in rapid release environments, potentially, can be very effectively prioritized for execution, based on their historical riskiness; whereas the same conclusions do not hold in the traditional software development environments.","2159-4848","978-1-4799-7125-1","10.1109/ICST.2015.7102602","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7102602","","Testing;Manuals;Software;Context;Natural languages;Fault detection;Companies","online front-ends;program testing;software fault tolerance;source code (software)","manual test case prioritization;rapid release environments;large scale systems;fault detection;test execution;code coverage;source code;manual black-box system testing;coverage-based approach;diversity-based approach;risk driven approach;Mozilla Firefox;historical riskiness","","16","","34","","7 May 2015","","","IEEE","IEEE Conferences"
"System Testing of Timing Requirements Based on Use Cases and Timed Automata","C. Wang; F. Pastore; L. Briand","SNT, Univ. of Luxembourg, Luxembourg City, Luxembourg; SNT, Univ. of Luxembourg, Luxembourg City, Luxembourg; SNT, Univ. of Luxembourg, Luxembourg City, Luxembourg","2017 IEEE International Conference on Software Testing, Verification and Validation (ICST)","18 May 2017","2017","","","299","309","In the context of use-case centric development and requirements-driven testing, this paper addresses the problem of automatically deriving system test cases to verify timing requirements. Inspired by engineering practice in an automotive software development context, we rely on an analyzable form of use case specifications and augment such functional descriptions with timed automata, capturing timing requirements, following a methodology aiming at minimizing modeling overhead. We automate the generation of executable test cases using a test strategy based on maximizing test suite diversity and building over the UPPAAL model checker. Initial empirical results based on an industrial case study provide evidence of the effectiveness of the approach.","","978-1-5090-6031-3","10.1109/ICST.2017.34","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7927984","Timing Requirements;System Testing;Use cases;Timed Automata","Automata;Software;Timing;Unified modeling language;Testing;Context;Clocks","automata theory;formal specification;program testing;program verification","system testing;timing requirements;timed automata;use-case centric development;requirements-driven testing;automotive software development;use case specifications;test suite diversity;UPPAAL model checker","","8","","33","","18 May 2017","","","IEEE","IEEE Conferences"
"Plagiarism detection based on blinded logical test automation results and detection of textual similarity between source codes","D. Santos de Campos; D. James Ferreira","Federal University of Goiás (UFG),Institute of Informatics (INF),Goiânia,GO,Brazil; Federal University of Goiás (UFG),Institute of Informatics (INF),Goiânia,GO,Brazil","2020 IEEE Frontiers in Education Conference (FIE)","4 Dec 2020","2020","","","1","9","This Research to Practice Full Paper presents in this paper. Finding logical errors is the most difficult skill for students from all sorts of disciplines that involve computer programming. Unfortunately, because of this difficulty, some students resort to plagiarism. Plagiarism corrupts the evaluation process. Several tools are used in different researches for this purpose. Recent research has defined a taxonomy of the most relevant types of plagiarism that can be found in source codes. The Hybrid Framework was made to map the student plagiarisms using NLP tecnhics and software test automation techniques for automatic exercise correction with tools available for this purpose. This framework has been tested in the laboratory with promising results.","2377-634X","978-1-7281-8961-1","10.1109/FIE44824.2020.9274098","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9274098","Plagiarism;Code similarity;Tools to Assess Learning;Natural Language Processing;Automatic Exercise Correction;TPACK","Plagiarism;Tools;Programming;Taxonomy;Programming profession;Software;Natural language processing","computer science education;natural language processing;program testing;programming;source code (software);text analysis","source codes;student plagiarisms;plagiarism detection;textual similarity detection;logical errors;computer programming;blinded logical test automation;software test automation;NLP;hybrid framework","","2","","29","","4 Dec 2020","","","IEEE","IEEE Conferences"
"A Novel Method for XML Scheme Matching","Z. Jiuzhen; Z. Shidong; Y. Zhongmin","Sch. of Comput. Sci. & Technol., Shandong Univ., Jinan, China; Sch. of Comput. Sci. & Technol., Shandong Univ., Jinan, China; Sch. of Comput. Sci. & Technol., Shandong Univ., Jinan, China","2009 International Forum on Information Technology and Applications","4 Sep 2009","2009","2","","332","335","XML Schema is becoming a critical technology for e-business applications and the emergence of web services. With its widespread adoption and its web accessibility, XML Schema matching is becoming imperative. This paper presents an approach to elements matching between two XML Schemas using similarity measure and constraint optimization. In our method, we first transform the schema matching problem into a tree matching problem by transforming schemas to be matched into labeled (including node label and edge label) trees. The similarity measure considers element categories and properties. In order to get an optimal matching, we compute the structural similarity value based on the neighbors of each element (ancestor, children, and sibling). We test our method experimentally on three groups of XML Schemas. The experiments show that the proposed method has a high degree of accuracy.","","978-0-7695-3600-2","10.1109/IFITA.2009.452","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5231190","schema matching;XML Schema;similarity measure","XML;Application software;Testing;Information technology;Optimal matching;Computer science;Web services;Constraint optimization;Optimization methods;Information retrieval","pattern matching;tree data structures;XML","XML scheme matching;XML schema;e-business application;Web services;elements matching;similarity measure;constraint optimization;tree matching problem;node label;edge label;optimal matching;structural similarity value","","","","8","","4 Sep 2009","","","IEEE","IEEE Conferences"
"Systematic Mapping of the Literature on Secure Software Development","H. Nina; J. A. Pow-Sang; M. Villavicencio","Maestría en Informática, Pontificia Universidad Católica del Perú, Lima, Peru; Maestría en Informática, Pontificia Universidad Católica del Perú, Lima, Peru; Facultad de Ingeniería en Electricidad y Computación, Escuela Superior Politécnica del Litoral, Guayaquil, Ecuador","IEEE Access","8 Mar 2021","2021","9","","36852","36867","The accelerated growth in exploiting vulnerabilities due to errors or failures in the software development process is a latent concern in the Software Industry. In this sense, this study aims to provide an overview of the Secure Software Development trends to help identify topics that have been extensively studied and those that still need to be. Therefore, in this paper, a systematic mapping review with PICo search strategies was conducted. A total of 867 papers were identified, of which only 528 papers were selected for this review. The main findings correspond to the Software Requirements Security, where the Elicitation and Misuse Cases reported more frequently. In Software Design Security, recurring themes are security in component-based software development, threat model, and security patterns. In the Software Construction Security, the most frequent topics are static code analysis and vulnerability detection. Finally, in Software Testing Security, the most frequent topics are vulnerability scanning and penetration testing. In conclusion, there is a diversity of methodologies, models, and tools with specific objectives in each secure software development stage.","2169-3536","","10.1109/ACCESS.2021.3062388","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9363884","Software development;security;requirements;design;construction;testing;vulnerability;systematic mapping review","Software;Security;Systematics;Market research;Software engineering;Databases;Licenses","DP industry;object-oriented programming;program diagnostics;program testing;security of data;software quality","accelerated growth;software development process;latent concern;Software Industry;Secure Software Development trends;systematic mapping review;PICo search strategies;Software Requirements Security;Software Design Security;component-based software development;security patterns;Software Construction Security;static code analysis;vulnerability detection;Software Testing Security;vulnerability scanning;penetration testing;secure software development stage","","3","","33","CCBY","26 Feb 2021","","","IEEE","IEEE Journals"
"Who Should Be Selected to Perform a Task in Crowdsourced Testing?","Q. Cui; J. Wang; G. Yang; M. Xie; Q. Wang; M. Li","Lab. for Internet Software Technol., Inst. of Software, Beijing, China; Lab. for Internet Software Technol., Inst. of Software, Beijing, China; Dept. of Comput. Sci., Texas State Univ., San Marcos, TX, USA; Lab. for Internet Software Technol., Inst. of Software, Beijing, China; Lab. for Internet Software Technol., Inst. of Software, Beijing, China; Lab. for Internet Software Technol., Inst. of Software, Beijing, China","2017 IEEE 41st Annual Computer Software and Applications Conference (COMPSAC)","11 Sep 2017","2017","1","","75","84","Crowdsourced testing is an emerging trend in software testing, which relies on crowd workers to accomplish test tasks. Due to the cost constraint, a test task usually involves a limited number of crowd workers. Furthermore, more workers does not necessarily result in detecting more bugs. Different workers, who may have different testing experience and expertise, may make much differences in the test outcomes. For example, some inappropriate workers may miss true bug, introduce false bugs or report duplicated bugs, which decreases the test quality. In current practice, a test task is usually dispatched in a random manner, and the quality of testing cannot be guaranteed. Therefore, it is important to select an appropriate subset of workers to perform a test task to ensure high bug detection rate. This paper introduces ExReDiv, a novel hybrid approach to select a set of workers for a test task. It consists of three key strategies: the experience strategy selects experienced workers, the relevance strategy selects workers with expertise relevant to the given test task, the diversity strategy selects diverse workers to avoid detecting duplicated bugs. We evaluate ExReDiv based on 42 test tasks from one of the largest crowdsourced testing platforms in China, and the experimental results show its effectiveness.","0730-3157","978-1-5386-0367-3","10.1109/COMPSAC.2017.265","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8029593","","Computer bugs;Testing;Software;Videos;History;Computer science;Market research","crowdsourcing;program debugging;program testing;software quality","crowdsourced testing;software testing;cost constraint;bug detection rate;ExReDiv;hybrid approach;test task;experience strategy;relevance strategy;diversity strategy;China","","12","","19","","11 Sep 2017","","","IEEE","IEEE Conferences"
"DeepRoad: GAN-Based Metamorphic Testing and Input Validation Framework for Autonomous Driving Systems","M. Zhang; Y. Zhang; L. Zhang; C. Liu; S. Khurshid","University of Texas at Austin,USA; Shenzhen Key Laboratory of Computational Intelligence, Southern University of Science and Technology,Department of Computer Science and Engineering,China; University of Texas at Dallas,USA; University of Texas at Dallas,USA; University of Texas at Austin,USA","2018 33rd IEEE/ACM International Conference on Automated Software Engineering (ASE)","17 Feb 2020","2018","","","132","142","While Deep Neural Networks (DNNs) have established the fundamentals of image-based autonomous driving systems, they may exhibit erroneous behaviors and cause fatal accidents. To address the safety issues in autonomous driving systems, a recent set of testing techniques have been designed to automatically generate artificial driving scenes to enrich test suite, e.g., generating new input images transformed from the original ones. However, these techniques are insufficient due to two limitations: first, many such synthetic images often lack diversity of driving scenes, and hence compromise the resulting efficacy and reliability. Second, for machine-learning-based systems, a mismatch between training and application domain can dramatically degrade system accuracy, such that it is necessary to validate inputs for improving system robustness. In this paper, we propose DeepRoad, an unsupervised DNN-based framework for automatically testing the consistency of DNN-based autonomous driving systems and online validation. First, DeepRoad automatically synthesizes large amounts of diverse driving scenes without using image transformation rules (e.g. scale, shear and rotation). In particular, DeepRoad is able to produce driving scenes with various weather conditions (including those with rather extreme conditions) by applying Generative Adversarial Networks (GANs) along with the corresponding real-world weather scenes. Second, DeepRoad utilizes metamorphic testing techniques to check the consistency of such systems using synthetic images. Third, DeepRoad validates input images for DNN-based systems by measuring the distance of the input and training images using their VGGNet features. We implement DeepRoad to test three well-recognized DNN-based autonomous driving systems in Udacity self-driving car challenge. The experimental results demonstrate that DeepRoad can detect thousands of inconsistent behaviors for these systems, and effectively validate input images to potentially enhance the system robustness as well.","2643-1572","978-1-4503-5937-5","10.1145/3238147.3238187","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9000040","Software testing;Test generation;Input validation;Deep Neural Networks","","feature extraction;learning (artificial intelligence);mobile robots;neural nets;program testing","system robustness;GAN-based metamorphic testing;input validation framework;image-based autonomous driving systems;artificial driving scenes;synthetic images;machine-learning-based systems;unsupervised DNN-based framework;DNN-based autonomous driving systems;diverse driving scenes;image transformation rules;metamorphic testing techniques;Udacity self-driving car challenge;deeproad;deep neural networks;generative adversarial networks","","99","1","45","","17 Feb 2020","","","IEEE","IEEE Conferences"
"Predictability measures for software reliability models","Y. K. Malaiya; N. Karunanithi; P. Verma","Dept. of Comput. Sci., Colorado State Univ., Ft. Collins, CO, USA; Dept. of Comput. Sci., Colorado State Univ., Ft. Collins, CO, USA; NA","Proceedings., Fourteenth Annual International Computer Software and Applications Conference","6 Aug 2002","1990","","","7","12","A two-component predictability measure is presented that characterizes the long-term predictability of a software reliability growth model. The first component, average predictability, measures how well a model predicts throughout the testing phase. The second component, average bias, is a measure of the general tendency to overestimate or underestimate the number of faults. Data sets for both large and small projects from diverse sources have been analyzed. The results seem to support the observation that the logarithmic model appears to have good predictability is most cases. However, at very low fault densities, the exponential model may be slightly better. The delayed S-shaped model which in some cases has been shown to have good fit, generally performed poorly.<<ETX>></ETX>","","0-8186-2054-4","10.1109/CMPSAC.1990.139306","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=139306","","Software measurement;Software reliability;Predictive models;Software testing;Computer science;Software packages;Guidelines;Phase measurement;Software performance;Software systems","software metrics;software reliability","software reliability models;two-component predictability measure;average predictability;average bias;logarithmic model;delayed S-shaped model","","14","","23","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Cloud era in mobile application testing","K. Kaur; A. Kaur","School of IT, Apeejay Institute of Management Technical Campus, Jalandhar, India; I.K.G Punjab Technical University, Kapurthala, India","2016 3rd International Conference on Computing for Sustainable Global Development (INDIACom)","31 Oct 2016","2016","","","1057","1060","Mobile technology usage is exploding across the world. There are lakhs of mobile applications available which run on various mobile platforms such as Android, RIM, windows Mobile, Apple iOS and all. With this incredible growth of mobile applications, evidently developers are expected to deliver high quality, on time and within budget applications. Mobile application testing is considered as a challenging task because of various reasons such as ever-changing mobile devices, limited computational power, limited storage, limited energy, diversity of devices etc. There are various mobile application testing approaches such as testing on real devices, simulators, emulators and testing on cloud. As with advent of cloud computing technology the entire IT enterprises are providing services on cloud. Cloud testing is a software testing using cloud computing offering various benefits as compared to traditional testing strategies. The focus of this paper is to provide baselines for testing the mobile app on cloud which is currently an emerging field in testing. This paper discusses cloud computing, trend of testing on cloud along with various advantages and challenges confronted in testing of mobile applications on cloud.","","978-9-3805-4421-2","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7724423","Cloud computing;Cloud services;Cloud testing Challenges;Cloud;Mobile Applications","Decision support systems","cloud computing;mobile computing;program testing","cloud era;mobile application testing;mobile technology usage;mobile platforms;cloud computing technology;IT enterprises;cloud testing;software testing;mobile app testing","","","","6","","31 Oct 2016","","","IEEE","IEEE Conferences"
"Testing software components using boundary value analysis","Muthu Ramachandran","Sch. of Comput., Leeds Metropolitan Univ., UK","2003 Proceedings 29th Euromicro Conference","15 Sep 2003","2003","","","94","98","Most consumer electronics products today contain complex embedded software. We believe a component-oriented approach is an ideal way to handle the diversity of software complexity. Our earlier work on reusable components has addressed the development of the Koala component model has been developed (as an outcome of the ESPRIT project ARES) to address reuse with concept of late binding. This has been carried out as a part of the research project on 'testing software components'. Our approach to testing components was based on the principles of testing from object models. Therefore we have decomposed a COM-like component into OO models so that various test techniques can be automated. Also we are able to generate a volume of key test cases to study boundary value testing and analysis on component interfaces, which is the key to achieve testability of a reusable software component.","1089-6503","0-7695-1996-2","10.1109/EURMIC.2003.1231572","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1231572","","Software reusability;Object oriented programming;Software metrics;Software testing","software reusability;distributed object management;object-oriented programming;software metrics;program testing","software components testing;boundary value analysis;consumer electronic product;complex embedded software;component-oriented approach;software complexity;reusable software component;Koala component model;COM-like component;object-oriented model","","10","","4","","15 Sep 2003","","","IEEE","IEEE Conferences"
"Path selection in the structural testing: proposition, implementation and application of strategies","L. M. Peres; S. R. Vergilio; M. Jino; J. C. Maldonado",NA; NA; NA; NA,"SCCC 2001. 21st International Conference of the Chilean Computer Science Society","6 Aug 2002","2001","","","240","246","Structural testing criteria help the tester in the generation and evaluation of a test case set T. They are predicates to be satisfied to consider the testing activity ended and generally require the execution of a set P of paths, capable of exercising certain elements in the program under testing. Determining P is an important and hard task, and its automation is strongly desirable for easing the criteria application. This task can influence on the efficacy and on the testing effort and costs. This work explores the use of diverse programs characteristics to propose strategies for selection of testing paths. The work also describes a module that implements a framework for representation and automation of those strategies. Using this module, a testing procedure is presented and a strategy, that uses the number of predicates to select paths, is evaluated. The obtained results give some information about the main advantage of this strategy: to easy the automatic test data generation by reducing the number of selected infeasible paths.","1522-4902","0-7695-1396-4","10.1109/SCCC.2001.972653","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=972653","","Automatic testing;Software testing;Flow graphs;Automation;Costs;Software metrics;Software engineering;Software quality;Input variables","program testing;software metrics","path selection;structural testing;test case set evaluation;test case set generation;automation","","5","","22","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Utilizing a service-oriented architecture to perform closed-loop diagnostics in network centric support environments","A. L. Alwardt; A. R. Nielson","The Boeing Company, P.O. Box 516 M/C S221-2110, St. Louis, MO 63156-0516 , USA; The Boeing Company, P.O. Box 516 M/C S221-2110, St. Louis, MO 63156-0516 , USA","2007 IEEE Autotestcon","5 Nov 2007","2007","","","332","339","Service-Oriented Architecture (SOA) is one of the latest technology enablers that supports closed-loop diagnostics in Network Centric Support Environments (NCSEs). SOA provides patterns for the architecture, design, implementation, deployment, and management of loosely coupled software services that support the requirements of business processes and software users regardless of the underlying platform or implementation. The focus of this paper will be to examine providing a SOA via Web services. More specifically, this paper will discuss an architecture for developing Web services that perform closed-loop diagnostics in military NCSEs. The military information technology infrastructure is comprised of many diverse systems that together provide to key personnel the processed information necessary to support our war-fighters. When new or upgraded systems are deployed, it is far too costly to rewrite all legacy applications. A more cost effective method is to take a System-of-Systems approach to provide a non-intrusive solution that blends well with existing support processes and leverages existing applications and their data stores. A SOA readily supports implementing a System-of-Systems solution to provide closed-loop diagnostics in NCSEs in which various components reside at multiple levels and within multiple domains. When utilizing a SOA to implement closed-loop diagnostics in NCSEs, there are several key ingredients in developing a suitable architecture. These ingredients include leveraging the architecture defined in the Institute of Electrical and Electronics Engineers (IEEE) STD 1232 -Artificial Intelligence Exchange and Service Tie to All Test Environments (AI-ESTATE) specification, leveraging standard data format specifications such as the IEEE STD P1636.1 Draft Trial-Use Standard for Software Interface for Maintenance Information Collection and Analysis (SIMICA): Exchanging Test Results and Session Information via the Extensible Markup Language (XML) specification, leveraging the XML transaction communication framework, ensuring information assurance compliance, and ensuring 24/7 system availability.","1558-4550","978-1-4244-1238-9","10.1109/AUTEST.2007.4374238","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4374238","","Service oriented architecture;Computer architecture;Electronic equipment testing;XML;Web services;Software testing;System testing;Communication standards;Software standards;Software maintenance","artificial intelligence;business process re-engineering;closed loop systems;IEEE standards;Web services;XML","service oriented architecture;closed-loop diagnostics;network centric support environments;software services;business process;software users;Web services;military information technology infrastructure;IEEE STD 1232;artificial intelligence exchange;service tie;IEEE STD P1636.1;draft trial-use standard;software interface;maintenance information collection;extensible markup language;XML specification;transaction communication framework;system-of-systems solution","","3","","10","","5 Nov 2007","","","IEEE","IEEE Conferences"
"Automated optimum test case generation using web navigation graphs","A. Shahzad; S. Raza; M. N. Azam; K. Bilal; Inam-ul-Haq; S. Shamail","Department of Computer Science, LUMS, DHA, Lahore; Department of Computer Science, LUMS, DHA, Lahore; Department of Computer Science, LUMS, DHA, Lahore; Department of Computer Science, LUMS, DHA, Lahore; Department of Computer Science, LUMS, DHA, Lahore; Department of Computer Science, LUMS, DHA, Lahore","2009 International Conference on Emerging Technologies","11 Dec 2009","2009","","","427","432","Increased diversity and complexity of software systems derived the need for test automation. Test Automation is the use of software for automatic execution of tests, comparison of results with expected outcome, setting up preconditions for test and test reporting functions. Model based testing is a test automation approach that generates and maintains more useful and flexible tests from explicit descriptions of the application. Graph theory techniques have been an important part of model based testing and several graph theory techniques have been proposed in the literature. We used a famous graph theory technique called maximum network flows for generating minimum number of test cases covering all features of a system. We used a web based case study to describe the working of the proposed optimum path finding algorithm. We found certain constraints on web navigation graph in order to completely reflect the system in the form of a graph. The resulting web navigation graph is given as input to the algorithm that we implemented, that returns the optimal test cases for the web application system. We then graphically showed the optimality and feature coverage of the algorithm with respect to the case study.","","978-1-4244-5630-7","10.1109/ICET.2009.5353134","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5353134","","Automatic testing;Navigation;Software testing;System testing;Graph theory;Automation;Application software;Software systems;Computer science;Programming","graph theory;Internet;program testing","optimum test case generation;Web navigation graphs;test automation;model based testing;graph theory techniques;maximum network flows","","","","16","","11 Dec 2009","","","IEEE","IEEE Conferences"
"Yet Another Performance Testing Framework","S. Chen; D. Moreland; S. Nepal; J. Zic","Networking Technol. Lab., Epping; Networking Technol. Lab., Epping; Networking Technol. Lab., Epping; Networking Technol. Lab., Epping","19th Australian Conference on Software Engineering (aswec 2008)","3 Apr 2008","2008","","","170","179","Performance testing is one of the vital activities spanning the whole life cycle of software engineering. While there are a considerable number of performance testing products and open source tools available, they are either too expensive and complicated for small projects, or too specific and simple for diverse performance tests. This paper presents a general-purpose testing framework for both simple and small, and complicated and large-scale performance testing. Our framework proposes an abstraction to facilitate performance testing by separating the application logic from the common performance testing functionalities. This leads to a set of general-purpose data models and components, which form the core of the framework. The framework has been prototyped on both .NET and Java platforms and was used for a number of performance-related projects.","2377-5408","978-0-7695-3100-7","10.1109/ASWEC.2008.4483205","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4483205","","Logic testing;Grinding machines;Java;Software testing;Automatic testing;Life testing;Australia;Software engineering;Data models;Prototypes","Java;program testing;software performance evaluation","performance testing framework;software engineering;performance testing product;general-purpose testing framework;general-purpose data model;.NET platform;Java platform","","7","","13","","3 Apr 2008","","","IEEE","IEEE Conferences"
"A flexible automatic test system for rotating-turbine machinery","L. F. Wang; K. C. Tan; X. D. Jiang; Y. B. Chen","Electr. & Comput. Eng. Dept., Nat. Univ. of Singapore, Singapore; Electr. & Comput. Eng. Dept., Nat. Univ. of Singapore, Singapore; Electr. & Comput. Eng. Dept., Nat. Univ. of Singapore, Singapore; Electr. & Comput. Eng. Dept., Nat. Univ. of Singapore, Singapore","IEEE Transactions on Automation Science and Engineering","17 Jan 2005","2005","2","1","1","18","The widespread applications of rotating machines, such as turbine machinery, in both industry and commercial life requires advanced technologies to efficiently and effectively test their operational status before they begin their practical productions in the plant. This paper discusses the development of a general flexible automatic test system (ATS) for turbine machinery. In order to meet the demanding test requirements for a large and diverse community of turbine machinery, the proposed automatic test system has a contemporary Windows interface, graphical interaction, and can be easily configured to include functions required by current and emerging test demands. The design and implementation of such a test system is approached from an object-oriented (OO) software engineering point of view for ease of operation, expansion, and maintenance. Practical implementation upon a real industrial plant shows the validity and effectiveness of the implemented ATS for improving the performance and quality of turbine machinery. The obtained test system delivers the performance to meet all rigorous test throughput requirements. Software design in the industrial automation arena becomes more challenging nowadays than ever, due to the increasingly complicated industrial processes and more demanding measurement tasks. This paper presents a flexible automatic test system (ATS) for rotating-turbine machinery based on the systematic object-oriented (OO) software engineering. In this OO method, the process of software development is divided into five major phases: requirement capture, analysis, design, programming, and testing. Requirement capture collects both functional and nonfunctional user requirements for developing the intended system. In the analysis phase, the objects in the problem domain are modeled, and the desired system operations are studied. In the design phase, the results obtained from the analysis phase are converted into a form that can be implemented using programming languages. In the design phase, the issues on how the structures are formed and how they collaborate with one another via interfaces are figured out. In the programming phase, the code for realizing the target system is developed. Finally, in the test phase, the system is tested against the specified requirements to ensure its correctness in both functionality and performance aspects. By adopting the OO software-development method, the flexible ATS for turbine machinery software is developed in an efficient manner. Meanwhile, other novel technologies such as configuration, database management, graphical user interface, Internet, multithreaded programming, and ActiveX Automation are all incorporated into the system development. The method discussed in the paper can be easily extended to the development of other software-intensive industrial automation systems.","1558-3783","","10.1109/TASE.2004.840075","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1381363","Automatic test system (ATS);condition monitoring;distributed system;object orientation;system integration;turbine machinery","Automatic testing;System testing;Turbines;Software testing;Computer industry;Software engineering;Automation;Rotating machines;Machinery production industries;Life testing","turbines;machinery;automatic test software;graphical user interfaces;object-oriented programming;mechanical engineering computing","flexible automatic test system;rotating turbine machinery;object oriented software engineering;Windows interface;industrial plant;condition monitoring;graphical user interface","","3","","31","","17 Jan 2005","","","IEEE","IEEE Journals"
"Georgia Tech Software Radio Laboratory","T. G. Pratt","Georgia Institute of Technology, Atlanta, Georgia 30332-0821, USA, thomas.pratt@gtri.gatech.edu","54th ARFTG Conference Digest","12 Mar 2007","2000","36","","1","4","The Georgia Tech Broadband Institute of the Georgia Institute of Technology is establishing a Software Radio Laboratory in the Georgia Center for Advanced Telecommunications Technology (GCATT). The laboratory, which is planned to be operational in early 2000, has been designed as a testbed for research, development, test, and evaluation of software radio concepts. The laboratory consists of waveform generators and communications signal sources, local area networking transceivers, radio frequency (RF) channel emulators with branch diversity and smart antenna emulation capabilities, and a multichannel programmable VME-based software radio platform. The software radio platform incorporates a programmable RF front-end, digital down-converters, and multiple Quad TI-C6x DSP boards to facilitate algorithm development for intermediate frequency (IF), baseband, and bitstream processing. The laboratory promises to have capability for addressing a broad spectrum of problems including the development and test of communications modulation techniques, access methods, traffic types, channel distortion effects, transmitter diversity, receiver signal processing algorithms, coding, power control, and many other diverse topics of research.","","978-1-6654-5036-2","10.1109/ARFTG.1999.327381","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4120060","","Software radio;Laboratories;Radio frequency;Software testing;Signal processing algorithms;Signal generators;RF signals;LAN emulation;Transceivers;Digital signal processing","","","","1","","3","","12 Mar 2007","","","IEEE","IEEE Conferences"
"A grid execution environment similarity metric","Wei Wang; Bin-Xing Fang","Dept. of Comput. Sci., Harbin Inst. of Technol., China; Dept. of Comput. Sci., Harbin Inst. of Technol., China","2005 International Conference on Machine Learning and Cybernetics","7 Nov 2005","2005","5","","3007","3012 Vol. 5","A program's behavior is always tightly related with the computing environment where it runs, especially for parallel programs running in grid. Debugging tries to locate the reason for incorrect program behavior by analyzing the states, which happen during a program's execution. In order to allow cyclic debugging, re-execution mechanisms are used most frequently. The dynamic characteristics of grid will hinder re-execution to work, because the behavior of a program will be various according to the current configuration of execution environment. By modeling grid environments with graphics, this paper proposes the metric to evaluate the similarity between grid applications execution environments. The GA based resource selection algorithm is presented to construct similar execution environments in grids. A serial of experiments shows that the similarity metrics is appropriate.","2160-1348","0-7803-9091-1","10.1109/ICMLC.2005.1527458","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1527458","Grid;parallel debugging;computing environment;resource management;similarity metric;genetic algorithm","Debugging;Grid computing;Machine learning algorithms;Concurrent computing;Graphics;Resource management;Software testing;Costs;Runtime;Distributed computing","grid computing;resource allocation;program debugging;program diagnostics;genetic algorithms","grid execution environment;similarity metric;computing environment;parallel programs;grid environments model;grid applications;resource selection algorithm;parallel debugging;resource management;genetic algorithm","","","","11","","7 Nov 2005","","","IEEE","IEEE Conferences"
"The Impact of Network Applications (Web, FTP and E-mail) and Network Profiles on the Self-Similar Parameter","M. R. Faustino; C. Goldemberg",NA; NA,"IEEE Latin America Transactions","19 Jun 2006","2005","3","4","54","59","Self-similarity is an important characteristic of modern network traffic, and an accurate traffic description must take this characteristic into account. This work analyzes traffic's self-similar behavior for the three most expressive application protocols used in IP networks (HTTP, FTP and SMTP) by varying the user profiles (in terms of the transferred file size and file inter-arrival times) and the network characteristics (with respect to the transfer delay and packages loss rate). The simulation results show that the intrinsic characteristics of application protocols, of the TCP transport protocol, and of user and network profiles affect the traffic self-similar characteristics in distinct ways. Experimental results also reveal that different quantities of contribution from different application protocols in the traffic load can also change traffic's self-similar characteristics.","1548-0992","","10.1109/TLA.2005.1642430","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1642430","FTP;http;Self-similarity;SMTP;TCP","Electronic mail;Programmable control;Hardware;DC motors;Irrigation;Choppers;IEC;Ethernet networks;Software testing;Impedance","","FTP;http;Self-similarity;SMTP;TCP","","","","19","IEEE","19 Jun 2006","","","IEEE","IEEE Journals"
"Efficient Online Testing for DNN-Enabled Systems using Surrogate-Assisted and Many-Objective Optimization","F. U. Haq; D. Shin; L. Briand","University of Luxembourg,Luxembourg; University of Luxembourg,Luxembourg; University of Luxembourg,Luxembourg","2022 IEEE/ACM 44th International Conference on Software Engineering (ICSE)","20 Jun 2022","2022","","","811","822","With the recent advances of Deep Neural Networks (DNNs) in real-world applications, such as Automated Driving Systems (ADS) for self-driving cars, ensuring the reliability and safety of such DNN-enabled Systems emerges as a fundamental topic in software testing. One of the essential testing phases of such DNN-enabled systems is online testing, where the system under test is embedded into a specific and often simulated application environment (e.g., a driving environment) and tested in a closed-loop mode in interaction with the environment. However, despite the importance of online testing for detecting safety violations, automatically generating new and diverse test data that lead to safety violations presents the following challenges: (1) there can be many safety requirements to be considered at the same time, (2) running a high-fidelity simulator is often very computationally-intensive, and (3) the space of all possible test data that may trigger safety violations is too large to be exhaustively explored. In this paper, we address the challenges by proposing a novel approach, called SAMOTA (Surrogate-Assisted Many-Objective Testing Approach), extending existing many-objective search algorithms for test suite generation to efficiently utilize surrogate models that mimic the simulator, but are much less expensive to run. Empirical evaluation results on Pylot, an advanced ADS composed of multiple DNNs, using CARLA, a high-fidelity driving simulator, show that SAMOTA is significantly more effective and efficient at detecting unknown safety requirement violations than state-of-the-art many-objective test suite generation algorithms and random search. In other words, SAMOTA appears to be a key enabler technology for online testing in practice.","1558-1225","978-1-4503-9221-1","10.1145/3510003.3510188","National Research Fund(grant numbers:BRIDGES2020/IS/14711346/FUNTASY); European Research Council(grant numbers:694277); National Research Foundation of Korea(grant numbers:2019R1A6A3A03033444); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9794023","DNN testing;online testing;many-objective search;surrogate-assisted optimization;self-driving cars","Software testing;Deep learning;Software algorithms;Neural networks;Safety;Software reliability;Optimization","","","","","","45","","20 Jun 2022","","","IEEE","IEEE Conferences"
"A Similarity Measure for OWL-S Annotated Web Services","Y. Ganjisaffar; H. Abolhassani; M. Neshati; M. Jamali","Sharif University of Technology, Iran; Sharif University of Technology, Iran; Institute for Studies in Theoretical Physics and Mathematics (IPM), Iran; Sharif University of Technology, Iran; Sharif University of Technology, Iran","2006 IEEE/WIC/ACM International Conference on Web Intelligence (WI 2006 Main Conference Proceedings)(WI'06)","15 Jan 2007","2006","","","621","624","Measuring semantic similarity of Web services has several benefits and most of the proposed service discovery algorithms are based on measuring the similarity of the requested service with each of the advertised services. In this paper, we propose a method for measuring the similarity of Web services which are annotated with OWL-S ontology. First, a semantic similarity measure for determining the similarity of OWL concepts is discussed and then based on this measure, the functional similarity of services is defined. Then it is showed that the precision of algorithms that only take into account the functional properties of services for measuring their similarity are low. Therefore the textual descriptions of Web services are also taken into account and the textual similarity of services is also calculated. Then it is showed how neural networks can be used for combining these two measures for a better compound measure. The proposed technique is applied to a sample test collection and experimental results are presented which demonstrate the effectiveness of the idea","","0-7695-2747-7","10.1109/WI.2006.26","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4061441","","Web services;OWL;Ontologies;Semantic Web;Physics;Mathematics;Neural networks;Software testing;Peer to peer computing;Software agents","knowledge representation languages;neural nets;ontologies (artificial intelligence);semantic Web;Web services","semantic similarity measure;OWL-S annotated Web services;service discovery algorithms;neural networks;OWL-S ontology","","22","","11","","15 Jan 2007","","","IEEE","IEEE Conferences"
"A Similarity Metric for the Inputs of OO Programs and Its Application in Adaptive Random Testing","J. Chen; F. Kuo; T. Y. Chen; D. Towey; C. Su; R. Huang","School of Computer Science and Communication Engineering, Jiangsu University, Zhenjiang, China; Department of Computer Science and Software Engineering, Swinburne University of Technology, Hawthorn, VIC, Australia; Department of Computer Science and Software Engineering, Swinburne University of Technology, Hawthorn, VIC, Australia; School of Computer Science, University of Nottingham Ningbo China, Ningbo, China; School of Computer Science and Communication Engineering, Jiangsu University, Zhenjiang, China; School of Computer Science and Communication Engineering, Jiangsu University, Zhenjiang, China","IEEE Transactions on Reliability","2 Jun 2017","2017","66","2","373","402","Random testing (RT) has been identified as one of the most popular testing techniques, due to its simplicity and ease of automation. Adaptive random testing (ART) has been proposed as an enhancement to RT, improving its fault-detection effectiveness by evenly spreading random test inputs across the input domain. To achieve the even spreading, ART makes use of distance measurements between consecutive inputs. However, due to the nature of object-oriented software (OOS), its distance measurement can be particularly challenging: Each input may involve multiple classes, and interaction of objects through method invocations. Two previous studies have reported on how to test OOS at a single-class level using ART. In this study, we propose a new similarity metric to enable multiclass level testing using ART. When generating test inputs (for multiple classes, a series of objects, and a sequence of method invocations), we use the similarity metric to calculate the distance between two series of objects, and between two sequences of method invocations. We integrate this metric with ART and apply it to a set of open-source OO programs, with the empirical results showing that our approach outperforms other RT and ART approaches in OOS testing.","1558-1721","","10.1109/TR.2016.2628759","National Natural Science Foundation of China(grant numbers:61202110,61502205); Postdoctoral Science Foundation of China(grant numbers:2015M571687,2015M581739); Australian Research Council(grant numbers:DP 120104773); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7790883","Adaptive random testing (ART);method invocation;object distance;object-oriented software (OOS) testing;test input distance","Subspace constraints;Measurement;Software;Power capacitors;Software testing;Computer science","object-oriented methods;program testing;public domain software","similarity metric;OO program inputs;adaptive random testing;ART;fault-detection effectiveness improvement;object-oriented software;distance measurement;single-class level;multiclass level testing;test input generation;multiple classes;method invocation sequence;open-source OO programs;OOS testing;object series","","19","","49","IEEE","19 Dec 2016","","","IEEE","IEEE Journals"
"A strategy of knowledge representation for uncertain problems: experiments and relations to similar concepts","T. Vamos; P. Koch; F. Katona","Comput. & Autom. Res. Inst., Hungarian Acad. of Sci., Budapest, Hungary; Comput. & Autom. Res. Inst., Hungarian Acad. of Sci., Budapest, Hungary; NA","IEEE Transactions on Systems, Man, and Cybernetics","6 Aug 2002","1995","25","10","1371","1383","Vamos (1995) outlined the general schemes of pattern representation of knowledge. Extensive experiments proved the feasibility of the methods, e.g., a twelve-year project in early brain developmental problems, a sociolegal project and a search for patterns in economy. All these are characterized by overwhelming soft-type knowledge. The paper presents an overview of these research efforts, discussing similarities to and differences from the pattern method.<<ETX>></ETX>","2168-2909","","10.1109/21.464444","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=464444","","Knowledge representation;Pediatrics;Humans;Software tools;Software testing;User interfaces;Knowledge acquisition;Bibliographies;Automation;Nervous system","knowledge representation;knowledge acquisition;man-machine systems","knowledge representation;uncertain problems;pattern representation;early brain developmental problems;sociolegal project;economy;soft-type knowledge;pattern method","","3","","85","IEEE","6 Aug 2002","","","IEEE","IEEE Journals"
"Selecting Products for High-strength T-wise Testing of Software Product Line by Multi-Objective Method","Y. Qian; C. Zhang; F. Wang","School of Computer Science and Technology, Anhui University, Hefei, China; School of Computer Science and Technology, Anhui University, Hefei, China; School of Computer Science and Technology, Anhui University, Hefei, China","2018 IEEE International Conference on Progress in Informatics and Computing (PIC)","6 May 2019","2018","","","370","378","Combinatorial interaction testing is a hot topic in software testing. This approach has been applied to model-based testing of Software Product Line (SPL). The strategy is to generate a set of product configurations to achieve high t-wise coverage for satisfying test objective. The number of valid combinations increases explosively with the increase of interaction strength. Therefore, how to choose the minimum number of product configuration to achieve maximum t-wise coverage is the complex problem in high-strength feature interaction. This paper introduces a multi-objective method to solve such problem. We use three objectives to decide product selection: t-wise coverage, number of products and similarity. Our method can generate a set of solutions quickly and the maximum t-wise coverage can be achieved with the smallest number of products.","","978-1-5386-7672-1","10.1109/PIC.2018.8706270","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8706270","software product line;testing;t-wise;similarity;multi-objective","","combinatorial mathematics;program testing;software product lines","product configuration;maximum t-wise coverage;high-strength feature interaction;multiobjective method;product selection;combinatorial interaction testing;software testing;high-strength t-wise testing;software product line;model-based testing","","","","28","","6 May 2019","","","IEEE","IEEE Conferences"
"BRIX: meeting the requirements for online second language learning","M. Sawatpanit; D. Suthers; S. Fleming","eSpherical Inc., Washington, DC, USA; NA; NA","37th Annual Hawaii International Conference on System Sciences, 2004. Proceedings of the","26 Feb 2004","2004","","","10 pp.","","This paper describes the design and evaluation of BRIX, an environment for online learning of second languages. A needs analysis identified specific requirements of online language learning. Commercial course management systems were determined to be inadequate with respect to these requirements. BRIX was developed to address the need for a generic language learning environment that fulfils language educators' requirements focusing on reading, writing, and listening activities and can easily be customized for different language courses. The design of BRIX is based on pedagogic approaches and theories of teaching and learning second languages and on the results of analytic and empirical evaluation of test versions of the software. In this paper, we describe the needs analysis and the design of BRIX, and present an evaluation that compares the use and usability of a Chinese course in BRIX to a previous handcrafted version of the same course.","","0-7695-2056-1","10.1109/HICSS.2004.1265047","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1265047","","Natural languages;Writing;Distance learning;Education;Internet;Programming profession;World Wide Web;Software testing;Usability;Diversity reception","educational courses;distance learning","BRIX;online learning;second language learning;course management;language learning environment;language courses;Chinese course","","3","","20","","26 Feb 2004","","","IEEE","IEEE Conferences"
"The Workflow Trace Archive: Open-Access Data From Public and Private Computing Infrastructures","L. Versluis; R. Mathá; S. Talluri; T. Hegeman; R. Prodan; E. Deelman; A. Iosup","Computer Science, Vrije Universiteit Amsterdam, HV Amsterdam, Netherlands; Institute of Computer Science, Universitat Innsbruck, Innsbruck, Tyrol, Austria; Computer Science, Vrije Universiteit Amsterdam, HV Amsterdam, Netherlands; Computer Science, Vrije Universiteit Amsterdam, HV Amsterdam, Netherlands; Institute of Software Technology, University of Klagenfurt, Klagenfurt am, Austria; Information Sciences Institute, University of Southern California, Los Angeles, CA, USA; Computer Science, Vrije Universiteit Amsterdam, HV Amsterdam, Netherlands","IEEE Transactions on Parallel and Distributed Systems","4 May 2020","2020","31","9","2170","2184","Realistic, relevant, and reproducible experiments often need input traces collected from real-world environments. In this work, we focus on traces of workflows-common in datacenters, clouds, and HPC infrastructures. We show that the state-of-the-art in using workflow-traces raises important issues: (1) the use of realistic traces is infrequent and (2) the use of realistic, open-access traces even more so. Alleviating these issues, we introduce the Workflow Trace Archive (WTA), an open-access archive of workflow traces from diverse computing infrastructures and tooling to parse, validate, and analyze traces. The WTA includes > 48 million workflows captured from > 10 computing infrastructures, representing a broad diversity of trace domains and characteristics. To emphasize the importance of trace diversity, we characterize the WTA contents and analyze in simulation the impact of trace diversity on experiment results. Our results indicate significant differences in characteristics, properties, and workflow structures between workload sources, domains, and fields.","1558-2183","","10.1109/TPDS.2020.2984821","Vidi MagnaData; European Union's Horizon 2020 Research and Innovation Programme(grant numbers:801091); National Science Foundation(grant numbers:1664162); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9066946","Workflow;open-source;open-access;traces;characterization;archive;survey;simulation","Cloud computing;Open source software;Testing;Labeling;Computational modeling;Task analysis;Tools","cloud computing;public domain software;resource allocation;workflow management software","datacenters;clouds infrastructures;workflow trace archive;workflow structures;trace diversity;trace domains;computing infrastructures;open-access traces;HPC infrastructures;open-access data","","7","","60","CCBY","14 Apr 2020","","","IEEE","IEEE Journals"
"Compatibility Testing Service for Mobile Applications","T. Zhang; J. Gao; J. Cheng; T. Uehara","Sch. of Software & Microelectron., Northwest Polytech. Univ., Xi'an, China; Dept. of Comput. Eng., San Jose State Univ., San Jose, CA, USA; Sch. of Software & Microelectron., Northwest Polytech. Univ., Xi'an, China; Software Innovation Labs., Fujitsu Aboratories Ltd., Japan","2015 IEEE Symposium on Service-Oriented System Engineering","25 Jun 2015","2015","","","179","186","As more and more mobile applications are developed, mobile app testing and quality assurance have become very important. Due to the diversity of mobile devices and platforms, compatibility testing for mobile apps has been identified as one urgent and challenging issue. There are two major reasons contributing to this issue. They are: a) the large number of mobile devices with diverse features and platforms which are upgraded frequently, b) a higher cost and complexity in mobile app compatibility testing. This paper proposes one optimized compatibility testing strategy using a statistical approach to reduce test costs, and improve engineer's operation efficiency. The paper provides a solution to generate an optimized compatibility test sequence for mobile apps using the K-Means statistical algorithm. A compatibility testing service has been proposed for mobile apps. Moreover, two case study results are reported to demonstrate its potential application and effectiveness.","","978-1-4799-8356-8","10.1109/SOSE.2015.35","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7133527","software testing;mobile testing;compatibility testing;clustering algorithm;test coverage","Mobile communication;Testing;Mobile handsets;Servers;Databases;Home appliances;Analytical models","mobile computing;statistical analysis","compatibility testing service;mobile app testing;quality assurance;mobile devices;mobile app compatibility testing;statistical approach;k-means statistical algorithm","","19","","24","","25 Jun 2015","","","IEEE","IEEE Conferences"
"An Adaptive Random Test Method based on Variable Probability Density Function with Particle Swarm Optimization","S. Wang; J. Chen; J. Xi; H. Chen; J. Chen","School of Computer Science &#x0026; Communication Engineering, Jiangsu University,Zhenjiang,China,212013; School of Computer Science &#x0026; Communication Engineering, Jiangsu University,Zhenjiang,China,212013; School of Computer Science &#x0026; Communication Engineering, Jiangsu University,Zhenjiang,China,212013; School of Computer Science &#x0026; Communication Engineering, Jiangsu University,Zhenjiang,China,212013; School of Computer Science &#x0026; Communication Engineering, Jiangsu University,Zhenjiang,China,212013","2021 IEEE 21st International Conference on Software Quality, Reliability and Security Companion (QRS-C)","1 Apr 2022","2021","","","1157","1158","Adaptive Random Testing (ART) is proposed to enhance the effectiveness of Random Testing (RT) based on the notation that evenly distributing test cases across the whole input domain. Adaptive Random Testing Through Test Profiles (ART-TP) has been considered as one of the most effective ART methods. Generally, the selection of probabilistic function matters significantly in terms of testing effectiveness. In this paper, to achieve better &#x201C;evenly distributed&#x201D;, we analyze the effect of concave-convex functions and design a new probabilistic function. Moreover, we take advantage of the particle swarm optimization (PSO) algorithm to advise test case generation and propose a new approach namely Probability Adaptive Random Testing by Particle Swarm Optimization (PART-PSO), so that the the diversity of test cases could be greatly enhanced, thus a better failure detection capability.","2693-9371","978-1-6654-7836-6","10.1109/QRS-C55045.2021.00172","National Key R&D Program of China(grant numbers:2020YFB1005500); National Natural Science Foundation of China (NSFC)(grant numbers:U1836116,62172194); China Postdoctoral Science Foundation(grant numbers:2021M691310); Postdoctoral Science Foundation of Jiangsu Province(grant numbers:2021K636C); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9742091","Software testing;Probability density function;Particle swarm optimization;Adaptive random testing","Conferences;Subspace constraints;Software quality;Probability density function;Probabilistic logic;Software reliability;Security","","","","","","7","IEEE","1 Apr 2022","","","IEEE","IEEE Conferences"
"A New Method for Constructing Decision Tree Based on Rough Set Theory","L. Huang; M. Huang; B. Guo; Z. Zhang","Jiangxi Normal Univ., Jiangxi; Jiangxi Normal Univ., Jiangxi; Jiangxi Normal Univ., Jiangxi; Jiangxi Normal Univ., Jiangxi","2007 IEEE International Conference on Granular Computing (GRC 2007)","17 Dec 2007","2007","","","241","241","One of the keys to constructing decision tree model is to choose standard for testing attribute, for the criteria of selecting test attributes influences the classification accuracy of the tree. There exists diversity choosing standards for testing attribute based on entropy, Bayesian, and so on. In this paper, the degree of dependency of decision attribute on condition attribute, based on rough set theory, is used as a heuristic for selecting the attribute that will best separate the samples into individual classes. The results of example and experiments show that compared with the entropy-based approach, our approach is a better way to select nodes for constructing decision tree.","","978-0-7695-3032-1","10.1109/GrC.2007.13","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4403102","","Decision trees;Set theory;Information systems;Classification tree analysis;Software testing;Feature extraction;Educational institutions;Software standards;Entropy;Bayesian methods","decision trees;optimisation;pattern classification;rough set theory","rough set theory;decision tree model;testing attribute;classification accuracy;heuristic","","7","","10","","17 Dec 2007","","","IEEE","IEEE Conferences"
"Software safety assessment and the Sizewell B applications","A. E. Betts; D. Welbourne","NNC Ltd., Knutsford, UK; NNC Ltd., Knutsford, UK","1992 International Conference on Electrical and Control Aspects of the Sizewell B PWR","6 Aug 2002","1992","","","204","207","The Sizewell B PWR has two diverse protection systems which initiate automatic reactor trip and engineered safety features (ESF) needed for any fault, by detecting if measured plant signals are outside defined limits. Both systems have four redundant channels with two-out-of-four voting for each action. The primary protection system (PPS) is a computer based system and protects the reactor for all design basis faults. The station also has a computer based integrated system for centralised operations (ISCO), which includes self-contained high integrity computer system (HICS) sections. The authors describe the processes of assessment carried out for Nuclear Electric (NE), of the software provided by Westinghouse, as suppliers of the PPS and HICS. NE conducted extensive reviews and analysis of the software, in the course of establishing the safety case.<<ETX>></ETX>","","0-85296-550-8","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=172006","","Fission reactor safety;Nuclear power generation;Software testing;Software reliability","fission reactor safety;nuclear power stations;power station computer control;program testing;software reliability","nuclear power stations;UK;power station computer control;software reliability;Sizewell B;PWR;engineered safety features;redundant channels;two-out-of-four voting;primary protection system;integrated system for centralised operations;high integrity computer system","","","","","","6 Aug 2002","","","IET","IET Conferences"
"Location of checkpoints in fault-tolerant software","F. Saglietti","Gesellschaft fuer Reaktorsicherheit mbH Forschungsgelande, Garching, Germany","Proceedings of the 5th Jerusalem Conference on Information Technology, 1990. 'Next Decade in Information Technology'","6 Aug 2002","1990","","","270","277","Information reduction throughout a program is studied, identifying its impact on the effectiveness of checkpoints. The discussion covers failure masking, function classes that reduce information, the impact of information reduction on failure dependence, information reduction for binary values, and location of checkpoints. The conclusions reported and the strategy suggested are intended to support decision-making during the development of fault-tolerant software by identifying which internal variables or intermediate results should be checked by means of diversity in order to optimize fault-tolerance achievement.<<ETX>></ETX>","","0-8186-2078-1","10.1109/JCIT.1990.128295","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=128295","","Fault tolerance;Software testing;Parallel programming;Decision making;Fault diagnosis;Software reliability;Reliability engineering;Sequential analysis;Information analysis;Probability","fault tolerant computing;program testing;redundancy;software engineering","fault-tolerant software;failure masking;function classes;failure dependence;information reduction;internal variables;intermediate results","","","","4","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Search-Based Testing of Ajax Web Applications","A. Marchetto; P. Tonella","Fondazione Bruno Kessler, IRST, Trento; Fondazione Bruno Kessler, IRST, Trento","2009 1st International Symposium on Search Based Software Engineering","29 May 2009","2009","","","3","12","Ajax is an emerging Web engineering technology that supports advanced interaction features that go beyond Webpage navigation. The Ajax technology is based on asynchronous communication with the Web server and direct manipulation of the GUI, taking advantage of reflection.Correspondingly, new classes of Web faults are associated with Ajax applications.In previous work, we investigated a state-based testing approach, based on semantically interacting events. The main drawback of this approach is that exhaustive generation of semantically interacting event sequences limits quite severely the maximum achievable length, while longer sequences would have higher fault exposing capability. In this paper, we investigate a search-based algorithm for the exploration of the huge space of long interaction sequences, in order to select those that are most promising, based on a measure of test case diversity.","","978-0-7695-3675-0","10.1109/SSBSE.2009.13","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5033174","Web Testing;Ajax Applications and Search-based Software Engineering","Software engineering;Application software;Automatic testing;Software testing;Web pages;Navigation;Internet;Asynchronous communication;Web server;Graphical user interfaces","graphical user interfaces;Internet;Java;program testing;XML","search-based testing;Web engineering technology;Webpage navigation;Ajax technology;asynchronous communication;Web server;GUI;asynchronous Javascript and XML;graphical user interface","","24","1","13","","29 May 2009","","","IEEE","IEEE Conferences"
"Towards Adaptive Beamforming in Indoor Wireless Networks: An Experimental Approach","S. Lakshmanan; K. Sundaresan; R. Kokku; A. Khojestepour; S. Rangarajan","Sch. of ECE, Georgia Inst. of Technol., Atlanta, GA; NA; NA; NA; NA","IEEE INFOCOM 2009","2 Jun 2009","2009","","","2621","2625","Several research works have argued that adaptive beamforming has the potential to realize the high spectral efficiency requirements of next-generation wireless standards, and is especially well-suited for multipath-rich environments such as indoors. Most works have been limited to theory; few works in literature address the practical benefits and realizability of adaptive beamforming. In this paper, we design and implement the first indoor WLAN beamforming system with multi-element array antennas and software radio platforms, that forms a testbed for exploration of practical benefits of beamforming, and evaluation of algorithms for efficient beamforming in diverse environments. In the process of building the system, we identify and address several challenges with practical beamforming that are often ignored in theoretical works. Most importantly, channel estimation for forming the best beam to a user is hindered by oscillator drifts on the transmitter and receiver side that introduce hard-to-isolate phase and frequency offsets from the estimated channel coefficients. We describe these issues and incorporate novel solutions in our system to address them without requiring hardware modifications. We use the system to demonstrate the realizable benefits of adaptive beamforming in a typical indoor office environment.","0743-166X","978-1-4244-3512-8","10.1109/INFCOM.2009.5062199","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5062199","","Array signal processing;Wireless networks;Frequency estimation;Algorithm design and analysis;Wireless LAN;Antenna arrays;Software radio;Software testing;System testing;Software algorithms","antenna arrays;indoor radio;software radio;wireless LAN","adaptive beamforming;indoor wireless networks;next-generation wireless standards;indoor WLAN beamforming system;multielement array antennas;software radio;channel estimation","","21","2","18","","2 Jun 2009","","","IEEE","IEEE Conferences"
"Reducing Field Failures in System Configurable Software: Cost-Based Prioritization","H. Srikanth; M. B. Cohen; X. Qu","Software Group, IBM, Westford, MA, USA; Dept. of Comp. Sci & Eng., Univ. of Nebraska-Lincoln, Lincoln, NE, USA; Dept. of Comp. Sci & Eng., Univ. of Nebraska-Lincoln, Lincoln, NE, USA","2009 20th International Symposium on Software Reliability Engineering","28 Dec 2009","2009","","","61","70","System testing of configurable software is an expensive and resource constrained process. Insufficient testing often leads to escaped faults in the field where failures impact customers and are costly to repair. Prior work has shown that it is possible to efficiently sample configurations for testing using combinatorial interaction testing, and to prioritize these configurations to increase the rate of early fault detection. The underlying assumption to date has been that there is no added complexity to configuring a system level environment over a user configurable one; i.e. the time required to setup and test each individual configuration is nominal. In this paper we examine prioritization of system configurable software driven not only by fault detection but also by the cost of configuration and setup time that moving between different configurations incurs. We present a case study on two releases of an enterprise software system using failures reported in the field. We examine the most effective prioritization technique and conclude that (1) using failure history of configurations can improve the early fault detection rate, but that (2) we must consider fault detection rate over time, not by the number of configurations tested. It is better to test related configurations which incur minimal setup time than to test fewer, more diverse configurations.","2332-6549","978-1-4244-5375-7","10.1109/ISSRE.2009.26","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5362084","configuration prioritization;regression testing;combinatorial interaction testing","Software systems;System testing;Costs;Fault detection;Software testing;Databases;Operating systems;Environmental economics;Programming;Application software","electronic commerce;program testing;software fault tolerance","system configurable software;cost-based prioritization;configurable software system testing;resource constrained process;combinatorial interaction testing;fault detection;system level environment;enterprise software system;prioritization technique","","20","1","20","","28 Dec 2009","","","IEEE","IEEE Conferences"
"Virtual environment for robots interfaces design and testing","E. Franti; D. Tufis; S. Goschin; M. Dascalu; P. L. Milea; G. Stefan; T. Balan; C. Slav; R. Demco","Nat. Inst. for Res. & Dev. in Microtechnol., Bucharest, Romania; NA; NA; NA; NA; NA; NA; NA; NA","CAS 2005 Proceedings. 2005 International Semiconductor Conference, 2005.","19 Dec 2005","2005","2","","463","466 vol. 2","This paper refers to the implementation of a virtual environment for the robot interfaces testing. This software environment is very useful because, comparing to the experiments with real robots, it allow the testing and evaluation of different types of interfaces and different working environments with diverse configurations. A very important facility of this interactive software environment is the fact that the designers of the robots sensors and interfaces are able to work in parallel to design test, optimize and realize different control devices for the robot.","2377-0678","0-7803-9214-0","10.1109/SMICND.2005.1558827","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1558827","","Virtual environment;Robot sensing systems;Artificial intelligence;Intelligent robots;Mobile robots;Electronic equipment testing;Software testing;Parallel robots;Robot control;Education","control engineering computing;mobile robots","robot interface design;robot interface testing;virtual environment;interactive software environment;robot sensor designers;control devices","","3","","5","","19 Dec 2005","","","IEEE","IEEE Conferences"
"Cecil: a sequencing constraint language for automatic static analysis generation","K. M. Olender; L. J. Osterweil","Dept. of Comput. Sci., Colorado Univ., Boulder, CO, USA; Dept. of Comput. Sci., Colorado Univ., Boulder, CO, USA","IEEE Transactions on Software Engineering","6 Aug 2002","1990","16","3","268","280","A flexible and general mechanism for specifying problems relating to the sequencing of events and mechanically translating them into dataflow analysis algorithms capable of solving those problems is presented. Dataflow analysis has been used for quite some time in compiler code optimization. Most static analyzers have been custom-built to search for fixed and often quite limited classes of dataflow conditions. It is shown that the range of sequences for which it is interesting and worthwhile to search in actually quite broad and diverse. A formalism for specifying this diversity of conditions is created. It is shown that these conditions can be modeled essentially as dataflow analysis problems for which effective solutions are known. It is also shown how these solutions can be exploited to serve as the basis for mechanical creation of analyzers for these conditions.<<ETX>></ETX>","1939-3520","","10.1109/32.48935","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=48935","","Software quality;Computer science;Data analysis;Software tools;Software testing;Security;Software engineering;Algorithm design and analysis;Optimizing compilers;Automata","automatic programming;parallel programming;program compilers;specification languages","Cecil;sequencing constraint language;automatic static analysis generation;general mechanism;dataflow analysis algorithms;compiler code optimization;custom-built;dataflow conditions;dataflow analysis problems","","64","2","34","","6 Aug 2002","","","IEEE","IEEE Journals"
"A universal random test generator for functional verification of microprocessors and system-on-chip","K. Uday Bhaskar; M. Prasanth; G. Chandramouli; V. Kamakoti","Dept. of Comput. Sci. & Eng., Indian Inst. of Technol., Madras, India; Dept. of Comput. Sci. & Eng., Indian Inst. of Technol., Madras, India; Dept. of Comput. Sci. & Eng., Indian Inst. of Technol., Madras, India; Dept. of Comput. Sci. & Eng., Indian Inst. of Technol., Madras, India","18th International Conference on VLSI Design held jointly with 4th International Conference on Embedded Systems Design","24 Jan 2005","2005","","","207","212","This paper presents a universal random test generator template for the design verification of microprocessors and system-on-chips (SOCs). The tool enables verification of the product in one continuous, integrated environment, from C model to behavioral RTL and gate to system-level integration, all in one self-contained chassis. Due to complexity of large designs, it has been a common practice to rely on the power of randomization, to bless us with the humanly not-conceivable corner cases that can arise in reality. There are lots of common features shared by random tools used for testing products with diverse functionalities. This paper proposes a template which captures the commonalities among the different random testing tools and enables the user to quickly design a random test generator by adding product-specific details and using most of the methods available in the template. This leads to high degree of code reuse, less debugging of the random tool and huge reduction in design-cycle time. In addition the template provides enough flexibility and interfaces to enable the execution of the generated tests on targets which may be a C model, RTL or the final chip. By this, one may test a software component, say a bootup code for the system-on-chip or microprocessor at all stages of its design, namely, the software prototype, the RTL at the pre-silicon level and finally the chip, at a post-silicon level. This satisfies the expectations out of a verification platform for a hardware-software codesign environment. The random test generator template was employed for testing a x86-compatible microprocessor both at RTL and post-silicon stage and a software model of a 802.11 MAC. The results are presented in the paper.","2380-6923","0-7695-2264-5","10.1109/ICVD.2005.37","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1383278","","System testing;Microprocessors;System-on-a-chip;Hardware;Software testing;Computer science;Design engineering;Automatic testing;Debugging;Software prototyping","automatic test pattern generation;microprocessor chips;system-on-chip;formal verification","universal random test generator;functional verification;microprocessors;system-on-chip;C model;behavioral RTL;system-level integration;design complexity;code reuse;debugging;random tool;design-cycle time reduction;software prototype;pre-silicon level;post-silicon level;verification platform;hardware-software codesign environment","","10","","12","","24 Jan 2005","","","IEEE","IEEE Conferences"
"Evolution of an active networks testbed","S. Berson; S. Dawson; R. Braden","Inf. Sci. Inst., Univ. of Southern California, Marina del Rey, CA, USA; NA; NA","Proceedings DARPA Active Networks Conference and Exposition","7 Aug 2002","2002","","","446","465","This paper explores the requirements for a network testbed designed specifically to support research in active networking. It also describes the design of the wide-area active networks testbed named the ABone. The ABone provides a virtual and real network infrastructure for active network experiments, using a diverse set of OS platforms. Its design embodies a tradeoff among the testbed goals of scalability, availability, security, heterogeneity, and modularity.","","0-7695-1564-9","10.1109/DANCE.2002.1003513","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1003513","","Computer architecture;System testing;Computer networks;Life testing;Computational modeling;Application software;Software testing;Protocols;Scalability;Linear particle accelerator","wide area networks;transport protocols;telecommunication security;security of data;network operating systems","active networks testbed;wide-area active networks;ABone;network infrastructure;scalability;availability;network security;network programmability;native IP connectivity;heterogeneity;modularity;network operating system","","9","","15","","7 Aug 2002","","","IEEE","IEEE Conferences"
"Acoustic testing dockside and at sea of the last American SASS","E. Gauthier; T. Peterson; A. Marino","RTD&E Div., Naval Command Control & Ocean Surveillance Center, San Diego, CA, USA; NA; NA","Oceans '97. MTS/IEEE Conference Proceedings","6 Aug 2002","1997","2","","1347","1352 vol.2","The US Navy Multibeam Bathymetric Sonar known as the Sonar Array Survey System, SASS, was installed and successfully operated by NAVOCEANO on the USNS Wyman since 1989. This paper describes unique testing dockside at Souda Bay Crete, and also at sea in the Mediterranean prior to its final SURVOPS the latter part of 1996. A special test frame, allowing acoustic evaluation dockside of individual hydrophones and projectors was designed, fabricated on board, and positioned by divers during the testing at various points along the array domes on the Wyman's hull. The purpose of the tests was to determine if any possible deterioration of the transducers had taken place over the years, because although the latest hardware and software designs were always incorporated into the SASS electronics, the transducers stayed the same. A calibrated NRL Test Transducer was used as both a hydrophone, and as a projector to measure the Transmitted Voltage Response (TVR), and the Sensitivity of the projector and hydrophones respectively, and the effect any excess attenuation caused by possible debris in the domes and growth on the windows may have had. The special test frame, constructed of plywood and 2/spl times/3's, was designed to straddle the projector dome and hold the NRL test transducer about 1 meter away from the projectors. The transducer was located at the end of a moveable arm which could be pinned in position at 0, 30, 45, and 60 degree angles from the projectors. Tests at sea were aimed at investigating the effect losing several hydrophone channels had on the wide swath coverage of SASS, and if improvements in coverage could be effected through installation of recently designed noise reduction software. The theory behind the software design is discussed, and the results of both the dockside and at sea testing is presented. Although there is currently no American SASS, the system is alive and well with the latest improvements aboard the UK's HMS Scott.","","0-7803-4108-2","10.1109/OCEANS.1997.624191","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=624191","","Acoustic testing;Sonar equipment;Software testing;Software design;Electronic equipment testing;Acoustic arrays;Acoustic transducers;Hardware;Attenuation measurement;Voltage measurement","geophysical techniques;geophysical equipment;oceanographic techniques;oceanographic equipment;seafloor phenomena;bathymetry;sonar arrays;sonar imaging;underwater sound","geophysiocal measurement technique;seafloor topography;bathymetry;sonar imaging;ocean;acoustic testing;last American SASS;US Navy Multibeam Bathymetric Sonar;Sonar Array Survey System;NAVOCEANO;SURVOPS;test frame;acoustic evaluation dockside;hydrophone;projector;equipment;instrument;acoustic transducer;Transmitted Voltage Response;swath coverage","","","","5","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Test case prioritization incorporating ordered sequence of program elements","K. Wu; C. Fang; Z. Chen; Z. Zhao","State Key Laboratory for Novel Software Technology, Nanjing University, 210093, China; State Key Laboratory for Novel Software Technology, Nanjing University, 210093, China; State Key Laboratory for Novel Software Technology, Nanjing University, 210093, China; State Key Laboratory for Novel Software Technology, Nanjing University, 210093, China","2012 7th International Workshop on Automation of Software Test (AST)","2 Jul 2012","2012","","","124","130","Test suites often grow very large over many releases, such that it is impractical to re-execute all test cases within limited resources. Test case prioritization, which rearranges test cases, is a key technique to improve regression testing. Code coverage information has been widely used in test case prioritization. However, other important information, such as the ordered sequence of program elements measured by execution frequencies, was ignored by previous studies. It raises a risk to lose detections of difficult-to-find bugs. Therefore, this paper improves the similarity-based test case prioritization using the ordered sequence of program elements measured by execution counts. The empirical results show that our new technique can increase the rate of fault detection more significantly than the coverage-based ART technique. Moreover, our technique can detect bugs in loops more quickly and be more cost-benefits than the traditional ones.","","978-1-4673-1822-8","10.1109/IWAST.2012.6228980","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6228980","Test case prioritization;similarity;ordered sequence;edit distance;farthest-first algorithm","Computer bugs;Subspace constraints","fault diagnosis;program testing;regression analysis","program elements;test suites;regression testing;code coverage information;similarity-based test case prioritization;ordered sequence;fault detection","","6","","26","","2 Jul 2012","","","IEEE","IEEE Conferences"
"Improving Test Execution Efficiency Through Clustering and Reordering of Independent Test Steps","B. Walter; M. Schilling; M. Piechotta; S. Rudolph","R&D MB Passenger Cars, Daimler AG, Boeblingen, Germany; R&D MB Passenger Cars, Daimler AG, Boeblingen, Germany; R&D MB Passenger Cars, Daimler AG, Boeblingen, Germany; ISD, Univ. of Stuttgart, Stuttgart, Germany","2018 IEEE 11th International Conference on Software Testing, Verification and Validation (ICST)","28 May 2018","2018","","","363","373","We observe an inefficient execution order of tests in the way that for a given set of test cases, a significant number of test steps occur in more than one test case. During test executions these duplicates increase the test load while providing none or limited additional test results. Removing such test steps interrupts the initial execution chain of steps inside a test case. To solve this issue, we propose a test case synthesis. After removing redundant steps, all (non-redundant) test steps are rearranged into a new set of test cases. This is achieved by using a clustering technique to group similar test steps into new test cases. A Path finding algorithm is used to find an optimized test step execution order for each test case. By applying this method in a case study at Mercedes-Benz Passenger Car Development, we observe a test load reduction of 15% due to removing redundant test steps and an additional reduction of at least 3% for rearranging test steps. This totals up to at least 18% overall test load reduction for the proposed method including removing redundant elements. We see this as strong indication for the usefulness of our approach.","","978-1-5386-5012-7","10.1109/ICST.2018.00043","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8367063","Redundant Tests;Test Case Optimization;Clustering;Hierarchical Single-Linkage;Geometric Similarity;Path Finding;Ant Colony System","Automobiles;Measurement;Data models;Data structures;Clustering algorithms;Ignition;Switches","pattern clustering;program testing","independent test steps;test case synthesis;group similar test steps;optimized test step execution order;test load reduction;redundant test steps;test execution efficiency;reordering;clustering technique;Path finding algorithm","","","","35","","28 May 2018","","","IEEE","IEEE Conferences"
"Test data generation framework for Automatic Programming Assessment","R. Romli; S. Sulaiman; K. Z. Zamli","School of Computing, College of Arts and Sciences, Universiti Utara Malaysia, 01000, UUM Sintok, Kedah, Malaysia; Faculty of Computing, Universiti Teknologi Malaysia, 81310 UTM Skudai, Johor, Malaysia; Faculty of Computer System and Engineering, Universiti Malaysia Pahang, Lebuhraya Tun Razak, 26300, Gambang, Kuantan, Malaysia","2014 8th. Malaysian Software Engineering Conference (MySEC)","18 Dec 2014","2014","","","84","89","Automatic Programming Assessment (APA) has recently become a significant method in assisting educators of programming courses to automatically mark and grade students' programming as its counterpart; the typical manual tasks are prone to errors and leading to inconsistency. By default, test data generation process plays an important role to perform a dynamic testing on students' programs. In software testing field, there have been diverse automated methods for test data generation. Unfortunately, APA seldom adopts these methods. Merely limited studies have attempted to integrate APA and test data generation to include more useful features and to provide a precise and thorough quality of program testing. Thus, we propose a framework of test data generation so-called FaSt-Gen to cover both the functional and structural testing of a program for APA. It aims to assist the lecturers of programming courses to furnish an adequate set of test data to assess students' programming solutions regardless of having the concrete expertise in the particular knowledge of test cases design. FaSt-Gen integrates the positive and negative testing criteria (or reliable and valid test adequacy criteria) to derive desired test data and test set schema. The findings from the conducted experiment depict that FaSt-Gen improves the reliability and validity test data adequacy in programming assessments.","","978-1-4799-5439-1","10.1109/MySec.2014.6985993","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6985993","Automatic Programming Assessment (APA);test data generation;functional testing;structural testing;positive testing;negative testing","Testing;Reliability;Programming profession;Standards;Dynamic programming;Educational institutions","computer aided instruction;computer science education;educational courses;functional programming;program testing","test data generation framework;automatic programming assessment;APA;programming course educators;automatic student programming marking;student programming grading;test data generation process;dynamic testing;software testing;program testing quality;FaSt-Gen;program functional testing;program structural testing;programming course lecturers;positive testing criteria;negative testing criteria","","4","","48","","18 Dec 2014","","","IEEE","IEEE Conferences"
"Identifying More Equivalent Mutants via Code Similarity","M. Kintis; N. Malevris","Dept. of Inf., Athens Univ. of Econ. & Bus., Athens, Greece; Dept. of Inf., Athens Univ. of Econ. & Bus., Athens, Greece","2013 20th Asia-Pacific Software Engineering Conference (APSEC)","28 Apr 2014","2013","1","","180","188","Equivalent mutants are one of the major costs of mutation testing. The undecidable nature of this problem makes a fully automated solution unattainable and necessitates the manual analysis of live mutants. This paper introduces the concept of mirrored mutants, ones that affect similar code fragments. It is argued that mirrored mutants exhibit analogous behavior with respect to their equivalence. Thus, if one of them is equivalent, then the other mirrored mutants should be too. An empirical study, conducted on real world programs, investigates this argument, focusing on both intra-method and inter-method mirrored mutants. The obtained results suggest that mirrored mutants indeed exhibit this kind of behavior and thus can be utilized to ameliorate the adverse effects of the equivalent mutant problem.","1530-1362","978-1-4799-2144-7","10.1109/APSEC.2013.34","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6805405","mutation testing;equivalent mutants;similar code fragments","Cloning;Testing;Syntactics;Software systems;Manuals;Java","program testing","equivalent mutant identification;code similarity;mutation testing;manual analysis;live mutants;code fragments;intramethod mirrored mutants;intermethod mirrored mutants;equivalent mutant problem;software testing","","12","","33","","28 Apr 2014","","","IEEE","IEEE Conferences"
"Scalable Approaches for Test Suite Reduction","E. Cruciani; B. Miranda; R. Verdecchia; A. Bertolino","Gran Sasso Science Institute; Federal University of Pernambuco: Recife, Pernambuco; Gran Sasso Science Institute & Vrije Universiteit Amsterdam; ISTI – Consiglio Nazionale delle Ricerche","2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE)","26 Aug 2019","2019","","","419","429","Test suite reduction approaches aim at decreasing software regression testing costs by selecting a representative subset from large-size test suites. Most existing techniques are too expensive for handling modern massive systems and moreover depend on artifacts, such as code coverage metrics or specification models, that are not commonly available at large scale. We present a family of novel very efficient approaches for similarity-based test suite reduction that apply algorithms borrowed from the big data domain together with smart heuristics for finding an evenly spread subset of test cases. The approaches are very general since they only use as input the test cases themselves (test source code or command line input). We evaluate four approaches in a version that selects a fixed budget B of test cases, and also in an adequate version that does the reduction guaranteeing some fixed coverage. The results show that the approaches yield a fault detection loss comparable to state-of-the-art techniques, while providing huge gains in terms of efficiency. When applied to a suite of more than 500K real world test cases, the most efficient of the four approaches could select B test cases (for varying B values) in less than 10 seconds.","1558-1225","978-1-7281-0869-8","10.1109/ICSE.2019.00055","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812048","Clustering;Random projection;Similarity-based testing;Software testing;Test suite reduction","Testing;Big Data;Software;Measurement;Fault detection;Scalability;Clustering algorithms","Big Data;program testing;set theory","similarity-based test suite reduction;evenly spread subset;test source code;B test cases;scalable approaches;test suite reduction approaches;large-size test suites;modern massive systems;code coverage metrics;big data domain;smart heuristics;command line input","","11","","36","","26 Aug 2019","","","IEEE","IEEE Conferences"
"Test Case Reuse Based on Ontology","L. Cai; W. Tong; Z. Liu; J. Zhang","Sch. of Comput. Eng. & Sci., Shanghai Univ., Shanghai, China; Sch. of Comput. Eng. & Sci., Shanghai Univ., Shanghai, China; Shanghai Key Lab. of Comput. Software Evaluating & Testing, Shanghai, China; Sch. of Comput. Eng. & Sci., Shanghai Univ., Shanghai, China","2009 15th IEEE Pacific Rim International Symposium on Dependable Computing","31 Dec 2009","2009","","","103","108","Test cases are one of the most important assets in the testing process. This paper presents the testing ontology based SWEBOK and software quality model. The management and retrieval of test cases will play a vital role in test cases reuse. The keyword-based, as well as facet-based retrieval cannot meet user's flexible query requirement because of lack of semantic information. SWEBOK provides a broad agreement on the content of the software engineering discipline. At last this paper discusses the management and retrieval of test cases based on the semantic similarity of two test concepts in two ontologies according to difference sets of superconcept, subconcept, extension, and intension.","","978-0-7695-3849-5","10.1109/PRDC.2009.25","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5368243","test cases;retrieval;ontology;reuse;similarity","Ontologies;Software testing;Information retrieval;Costs;Software quality;Software engineering;Performance evaluation;Research and development;Laboratories;Object oriented modeling","ontologies (artificial intelligence);program testing;software quality;software reusability","ontology;SWEBOK;software quality model;test cases reuse;facet-based retrieval;flexible query requirement;semantic information;software engineering discipline","","11","","17","","31 Dec 2009","","","IEEE","IEEE Conferences"
"Trojan characteristics analysis based on Stochastic Petri Nets","H. Gao; Y. Wang; L. Wang; L. Liu; J. Li; X. Cheng","The University of Science and Technology Beijing, 100083, China; The Institute of Computing Technology of Chinese Academy of Sciences, Beijing 100190, China; The Institute of Computing Technology of Chinese Academy of Sciences, Beijing 100190, China; The University of Science and Technology Beijing, 100083, China; The Institute of Computing Technology of Chinese Academy of Sciences, Beijing 100190, China; The Institute of Computing Technology of Chinese Academy of Sciences, Beijing 100190, China","Proceedings of 2011 IEEE International Conference on Intelligence and Security Informatics","18 Aug 2011","2011","","","213","215","Trojan's attack behavior has become increasingly common and diversifiable. How to judge Trojan-like features of the softwares which the users download has become the problem that the users concern about. In this paper, we first capture the software's behavior and related parameters from our virtual software test bed, then a modeling method using Stochastic Petri Nets is proposed, which supports quantitative analysis for the application software's behaviors. Based on the model, the similarity degree between application software and Trojan software is analyzed quantitatively. This analysis show that the model can be used to design an effective anti-Trojan system. The paper concludes with an example to illustrate the effectiveness of the model and analysis method.","","978-1-4577-0085-9","10.1109/ISI.2011.5984084","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5984084","Trojan horse;remote accesss;Stochastic Petri Nets;security behavior;attack model","Software;Analytical models;Trojan horses;Monitoring;Stochastic processes;Machine learning;Visualization","invasive software;Petri nets;program testing;software performance evaluation;stochastic processes","Trojan characteristics analysis;stochastic Petri nets;Trojan attack behavior;software behavior;virtual software test bed;modeling method;Trojan software;antiTrojan system","","3","","5","","18 Aug 2011","","","IEEE","IEEE Conferences"
"Finding test data with specific properties via metaheuristic search","R. Feldt; S. Poulding","Dept. of Computer Science and Engineering, Chalmers University of Technology, Sweden; Dept. of Computer Science, University of York, York, UK","2013 IEEE 24th International Symposium on Software Reliability Engineering (ISSRE)","2 Jan 2014","2013","","","350","359","For software testing to be effective the test data should cover a large and diverse range of the possible input domain. Boltzmann samplers were recently introduced as a systematic method to randomly generate data with a range of sizes from combinatorial classes, and there are a number of automated testing frameworks that serve a similar purpose. However, size is only one of many possible properties that data generated for software testing should exhibit. For the testing of realistic software systems we also need to trade off between multiple different properties or search for specific instances of data that combine several properties. In this paper we propose a general search-based framework for finding test data with specific properties. In particular, we use a metaheuristic, differential evolution, to search for stochastic models for the data generator. Evaluation of the framework demonstrates that it is more general and flexible than existing solutions based on random sampling.","2332-6549","978-1-4799-2366-3","10.1109/ISSRE.2013.6698888","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6698888","","Generators;Grammar;Testing;Adaptation models;Arrays;Data models","data structures;evolutionary computation;information retrieval;program testing","test data;metaheuristic search;software testing;Boltzmann samplers;combinatorial classes;automated testing frameworks;realistic software systems;general search-based framework;differential evolution;random sampling;data generator;data structures","","26","","19","","2 Jan 2014","","","IEEE","IEEE Conferences"
"Predicting Cutterhead Torque for TBM based on Different Characteristics and AGA-Optimized LSTM-MLP","S. Zhang; Q. Du; S. Zhao","Tongji University,Master of Software Engineering,Shanghai,China; Tongji University,Faculty of Software Engineering and Software Testing,Shanghai,China; Tongji University,Civil Engineering,Shanghai,China","2021 IEEE International Conference on Systems, Man, and Cybernetics (SMC)","6 Jan 2022","2021","","","1165","1171","Adaptive adjustment of excavation parameters makes a significant role in the process of tunneling by tunnel boring machine (TBM), which ensures the tunneling carried out safely and efficiently. Though substantial effort has been devoted to this area, there is still a lack of a comprehensive method for TBM data analysis. In this paper, we analyzed the TBM data from different perspectives. The data source is from the Songhua River Water Conveyance Project. In order to facilitate the processing and analysis of the data, we proposed the concepts of rising characteristic interval (RCI) and stable characteristic interval (SCI), which are the first 30 seconds of the rising stage and one sixth of the center part of the stable stage respectively. As a key parameter, the cutterhead torque (T), which reflects the interaction between the cutter and the soil, is selected as our prediction target. In order to forecast the value of T in the SCIs, the time series characteristic and the non time series (mean and variance) characteristic of the important excavation parameters in the RCIs are analyzed. A sequential combination of long short-term memory (LSTM) and multi-layer perceptrons (MLP), LSTM-MLP for short, is used to make a comprehensive analysis of the two characteristics. Notably, adaptive genetic algorithm (AGA) was employed to optimize the topology structure and the hyper parameters of our neural network, which ensures the convergence of the basic genetic algorithm and maintains the diversity of the population at the same time. The experimental results indicate that, LSTM-MLP performs better in comparison with LSTM network and backpropagation neural network (BPNN, a kind of MLP). Our work provides a reference for the control and optimization of TBM’s excavation parameters. To make our results fully reproducible, all the relevant source codes and the preprocessed dataset are publicly available at https://github.com/Dandelionslove/LSTM MLP for TBM.","2577-1655","978-1-6654-4207-7","10.1109/SMC52423.2021.9659274","Delta; National Natural Science Foundation of China; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9659274","","Torque;Network topology;Geology;Time series analysis;Neural networks;Tunneling;Excavation","backpropagation;boring machines;construction equipment;data analysis;genetic algorithms;multilayer perceptrons;neural nets;time series;tunnels","time series characteristic;important excavation parameters;short-term memory;adaptive genetic algorithm;hyper parameters;basic genetic algorithm;backpropagation neural network;optimization;TBM's excavation parameters;cutterhead torque;AGA-optimized LSTM-MLP;adaptive adjustment;tunnel boring machine;tunneling;substantial effort;TBM data analysis;data source;Songhua River Water Conveyance Project;stable characteristic interval;30 seconds;rising stage;center part;stable stage;prediction target;time 30.0 s","","","","25","IEEE","6 Jan 2022","","","IEEE","IEEE Conferences"
"Good Things Come In Threes: Improving Search-based Crash Reproduction With Helper Objectives","P. Derakhshanfar; X. Devroey; A. Zaidman; A. van Deursen; A. Panichella","Delft University of Technology,Delft,The Netherlands; Delft University of Technology,Delft,The Netherlands; Delft University of Technology,Delft,The Netherlands; Delft University of Technology,Delft,The Netherlands; Delft University of Technology,Delft,The Netherlands","2020 35th IEEE/ACM International Conference on Automated Software Engineering (ASE)","24 Dec 2020","2020","","","211","223","Writing a test case reproducing a reported software crash is a common practice to identify the root cause of an anomaly in the software under test. However, this task is usually labor-intensive and time-taking. Hence, evolutionary intelligence approaches have been successfully applied to assist developers during debugging by generating a test case reproducing reported crashes. These approaches use a single fitness function called Crash Distance to guide the search process toward reproducing a target crash. Despite the reported achievements, these approaches do not always successfully reproduce some crashes due to a lack of test diversity (premature convergence). In this study, we introduce a new approach, called MOHO, that addresses this issue via multi-objectivization. In particular, we introduce two new Helper-Objectives for crash reproduction, namely test length (to minimize) and method sequence diversity (to maximize), in addition to Crash Distance. We assessed MO-HO using five multi-objective evolutionary algorithms (NSGA-II, SPEA2, PESA-II, MOEA/D, FEMO) on 124 non-trivial crashes stemming from open-source projects. Our results indicate that SPEA2 is the best-performing multi-objective algorithm for MO-HO. We evaluated this best-performing algorithm for MO-HO against the state-of-the-art: single-objective approach (Single-Objective Search) and decomposition-based multi-objectivization approach (De-MO). Our results show that MO-HO reproduces five crashes that cannot be reproduced by the current state-of-the-art. Besides, MO-HO improves the effectiveness (+10% and +8% in reproduction ratio) and the efficiency in 34.6% and 36% of crashes (i.e., significantly lower running time) compared to Single-Objective Search and De-MO, respectively. For some crashes, the improvements are very large, being up to +93.3% for reproduction ratio and -92% for the required running time.","2643-1572","978-1-4503-6768-4","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9285999","crash reproduction;search-based software testing;multi-objective evolutionary algorithms","Evolutionary computation;Writing;Search problems;Computer crashes;Task analysis;Open source software;Software engineering","evolutionary computation;genetic algorithms;Pareto optimisation;program debugging;program testing","test length;helper-objectives;test diversity;target crash;search process;fitness function;evolutionary intelligence approaches;software crash;helper objectives;search-based crash reproduction;reproduction ratio;single-objective search;multiobjective algorithm;nontrivial crashes;SPEA2;multiobjective evolutionary algorithms;MO-HO;crash distance","","","","47","","24 Dec 2020","","","IEEE","IEEE Conferences"
"Efficient Modelling of Embedded Software Systems and their Formal Verification","V. Estivill-Castro; R. Hexel; D. A. Rosenblueth","Sch. of ICT, Griffith Univ., Nathan, NSW, Australia; Sch. of ICT, Griffith Univ., Nathan, NSW, Australia; IIMAS, UNAM, Mexico City, Mexico","2012 19th Asia-Pacific Software Engineering Conference","18 Feb 2013","2012","1","","428","433","We propose vectors of finite-state machines whose transitions are labeled by formulas of a common-sense logic as the modeling tool for embedded systems software. We have previously shown that this methodology is very efficient in producing succinct and clear models (e.g., in contrast to plain finite-state machines, Petri nets, or Behavior Trees). We show that we can capture requirements precisely and that we can simulate and validate the models. We can, therefore, directly apply Model-Driven Engineering and deploy the models into software for diverse platforms with full tractability of requirements. Moreover, the sequential semantics of our vector of finite-state machines enables model-checking, formally establishing the correctness of the model. Finally, our approach facilitates systematic Failure Modes and Effects Analysis (FMEA) for diverse target platforms. We demonstrate the effectiveness of our methodology with several examples widely discussed in the software engineering literature and compare this with other approaches, showing that we can prove more properties, and that some claims about verification in such approaches have been exaggerated or are incomplete.","1530-1362","978-1-4673-4930-7","10.1109/APSEC.2012.21","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6462690","Software testing;verification and validation;formal methods in software engineering;software requirements engineering;model-driven engineering","Unified modeling language;Software;Semantics;Computational modeling;Presses;Pumps;Atmospheric modeling","embedded systems;finite state machines;formal specification;formal verification","embedded software system;formal verification;finite state machines;common-sense logic;Petri nets;behavior tree;model-driven engineering;requirement tractability;model checking;model correctness;FMEA;failure mode and effect analysis;software engineering","","9","","15","","18 Feb 2013","","","IEEE","IEEE Conferences"
"Software measurement: a necessary scientific basis","N. Fenton","Centre for Software Reliability, City Univ., London, UK","IEEE Transactions on Software Engineering","6 Aug 2002","1994","20","3","199","206","Software measurement, like measurement in any other discipline, must adhere to the science of measurement if it is to gain widespread acceptance and validity. The observation of some very simple, but fundamental, principles of measurement can have an extremely beneficial effect on the subject. Measurement theory is used to highlight both weaknesses and strengths of software metrics work, including work on metrics validation. We identify a problem with the well-known Weyuker properties (E.J. Weyuker, 1988), but also show that a criticism of these properties by J.C. Cherniavsky and C.H. Smith (1991) is invalid. We show that the search for general software complexity measures is doomed to failure. However, the theory does help us to define and validate measures of specific complexity attributes. Above all, we are able to view software measurement in a very wide perspective, rationalising and relating its many diverse activities.<<ETX>></ETX>","1939-3520","","10.1109/32.268921","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=268921","","Software measurement;Software metrics;Humans;Gain measurement;Counting circuits;Software reliability;Software testing;Blood pressure;Cost function","software metrics;measurement theory;programming theory","software measurement;scientific basis;measurement theory;software metrics work;metrics validation;software complexity measures;complexity attributes","","280","2","47","","6 Aug 2002","","","IEEE","IEEE Journals"
"Automatically checking an implementation against its formal specification","S. Antoy; D. Hamlet","Dept. of Comput. Sci., Portland State Univ., OR, USA; NA","IEEE Transactions on Software Engineering","6 Aug 2002","2000","26","1","55","69","We propose checking the execution of an abstract data type's imperative implementation against its algebraic specification. An explicit mapping from implementation states to abstract values is added to the imperative code. The form of specification allows mechanical checking of desirable properties such as consistency and completeness, particularly when operations are added incrementally to the data type. During unit testing, the specification serves as a test oracle. Any variance between computed and specified values is automatically detected. When the module is made part of some application, the checking can he removed, or may remain in place for further validating the implementation. The specification, executed by rewriting, can be thought of as itself an implementation with maximum design diversity, and the validation as a form of multiversion-programming comparison.","1939-3520","","10.1109/32.825766","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=825766","","Formal specifications;Application software;Java;Mechanical factors;Software testing;Computer languages;Software engineering;Software maintenance;Equations;Software prototyping","algebraic specification;program verification;abstract data types;program testing;object-oriented programming","implementation checking;formal specification;abstract data type;imperative implementation;algebraic specification;imperative code;unit testing;rewriting;multiversion programming;object oriented program testing","","54","1","59","","6 Aug 2002","","","IEEE","IEEE Journals"
"The ART of Divide and Conquer: An Innovative Approach to Improving the Efficiency of Adaptive Random Testing","C. Chow; T. Y. Chen; T. H. Tse","Univ. of Hong Kong, Hong Kong, China; Swinburne Univ. of Technol., Hawthorn, VIC, Australia; Univ. of Hong Kong, Hong Kong, China","2013 13th International Conference on Quality Software","23 Sep 2013","2013","","","268","275","Test case selection is a prime process in the engineering of test harnesses. In particular, test case diversity is an important concept. In order to achieve an even spread of test cases across the input domain, Adaptive Random Testing (ART) was proposed such that the history of previously executed test cases are taken into consideration when selecting the next test case. This was achieved through various means such as best candidate selection, exclusion, partitioning, and diversity metrics. Empirical studies showed that ART algorithms make good use of the concept of even spreading and achieve 40 to 50% improvement in test effectiveness over random testing in revealing the first failure, which is close to the theoretical limit. However, the computational complexity of ART algorithms may be quadratic or higher, and hence efficiency is an issue when a large number of previously executed test cases are involved. This paper proposes an innovative divide-and-conquer approach to improve the efficiency of ART algorithms while maintaining their performance in effectiveness. Simulation studies have been conducted to gauge its efficiency against two most commonly used ART algorithms, namely, fixed size candidate set and restricted random testing. Initial experimental results show that the divide-and-conquer technique can provide much better efficiency while maintaining similar, or even better, effectiveness.","2332-662X","978-0-7695-5039-8","10.1109/QSIC.2013.19","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6605937","adaptive random testing;divide and conquer;efficiency;effectiveness;software testing;test harness","Subspace constraints;Power capacitors;Testing;Computational complexity;Algorithm design and analysis;Measurement;Partitioning algorithms","computational complexity;program testing","innovative approach;adaptive random testing;test case selection;computational complexity;ART algorithms;innovative divide-and-conquer approach;fixed size candidate set;restricted random testing","","12","","16","","23 Sep 2013","","","IEEE","IEEE Conferences"
"Enhancements in the Orphan Process for Wireless Personal Area Networks: Real Implementation Scenarios","A. Garcia-Sanchez; F. Garcia-Sanchez; J. Garcia-Haro","Dept. of Inf. Technol. & Commun., Tech. Univ. of Cartagena, Cartagena, Spain; Dept. of Inf. Technol. & Commun., Tech. Univ. of Cartagena, Cartagena, Spain; Dept. of Inf. Technol. & Commun., Tech. Univ. of Cartagena, Cartagena, Spain","2009 Fourth International Conference on Software Engineering Advances","30 Oct 2009","2009","","","371","377","Wireless personal area networks (WPAN) are wireless sensor networks (WSN) designed for allowing a low-cost, low-power and short-range wireless communication. The IEEE 802.15.4 is the WPAN standard which satisfies these features and facilitates diverse self-configuring operation processes for adapting to different environments and applications. One of these processes is responsible for resolving the loss of coverage of a device, namely an orphan device. It has associated a long procedure when the device has to return to the wireless network, incurring in a high delay and energy consumption. This behavior implies that the Orphan device does not perform its assigned tasks during this delay increasing simultaneously its power consumption. We have designed a new algorithm, called optimized orphan algorithm (OOA), which offers a significant better delay and energy consumption performance. The OOA algorithm is implemented on real devices and evaluated under different scenarios. In this paper, the results obtained are presented and discussed as well.","","978-1-4244-4779-4","10.1109/ICSEA.2009.60","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5298208","Wireless Sensor Networks;Orphan Process;Performance Evaluation","Wireless personal area networks;Software engineering;Programming;Education;Collaborative software;Computational modeling;Information technology;Software testing;Computer simulation;Computer aided software engineering","personal area networks;wireless sensor networks","wireless personal area networks;wireless sensor networks;wireless communication;IEEE 802.15.4;optimized orphan algorithm","","2","","10","","30 Oct 2009","","","IEEE","IEEE Conferences"
"The software strategy for SPA Plug and play spacecraft","K. B. Center; D. C. Fronterhouse; M. Martin","PnP Innovations, Inc., 2017 Yale Blvd. SE, Suite A, Albuquerque, NM 87106, USA; PnP Innovations, Inc., 2017 Yale Blvd. SE, Suite A, Albuquerque, NM 87106, USA; AFRL VSSE, Kirtland AFB, NM, USA","2010 IEEE Aerospace Conference","15 Apr 2010","2010","","","1","11","The space market could benefit immensely from satellites that not only start their service lives as soon as possible, but can perform their on-orbit roles with minimal intervention from ground operations. The development of flight software techniques that addresses both of these issues has been ongoing at the Air Force Research Laboratories (AFRL) Responsive Space Testbed (RST) for a number of years. The Space Plug&play Avionics (SPA) standards define the means by which software (and hardware) components installed on a networked spacecraft bus deliver their data interfaces and self-organize into a coherent, functional system. A collection of modular, pre-validated software applications are maintained in a ¿virtual store room¿ and are called upon to configure tailored mission capabilities based upon operational needs. Mission ¿Activity Agents¿ encapsulate the logic and sequences necessary to accomplish satellite operations autonomously. Their execution is coordinated using on-orbit planning resources and a priority-based scheduler. The PnPSat mission was the first formal application of these techniques. In the course of the program a spectrum of software tools were authored to support the rapid design, prototyping, and testing of flight software modules for SPA-based satellites. The AFRL Operationally Responsive Space (ORS) assembly depot is being populated with an assortment of hardware and software components sufficient to build a reasonably diverse array of tactical small satellites. The tools being used, and the philosophies employed in their application, are ready for exposure to the larger space community.","1095-323X","978-1-4244-3887-7","10.1109/AERO.2010.5446806","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5446806","","Plugs;Space vehicles;Aerospace electronics;Satellites;Application software;Software testing;Hardware;Software maintenance;Software tools;Laboratories","artificial satellites;avionics;planning (artificial intelligence);system buses;virtual storage","SPA plug and play spacecraft;space market;satellites;flight software techniques;air force research laboratories;responsive space testbed;space plug&play avionics;networked spacecraft bus;virtual store room;activity agents;on-orbit planning resources;priority based scheduler;PnPSat mission;operationally responsive space assembly depot","","","","10","","15 Apr 2010","","","IEEE","IEEE Conferences"
"ITeS - Transcending the Traditional Service Model","J. Ke",Institute for Information Industry,"2006 IEEE International Conference on e-Business Engineering (ICEBE'06)","19 Dec 2006","2006","","","2","2","Summary form only given. The renaissance gave birth to the knowledge revolution, and the industrial revolution introduced mankind to the wonders of technology. The advent of information technology in the 21st century has brought about yet another revolution, the information revolution. The recent onset of IT has brought about technological, economical, social, and cultural changes on an unprecedented scale. Among which, IT enabled e-commerce, revolutionizing the way we go about the traditional exchange of goods, and more importantly, IT infused new life into the service sector, enabling a new breed of service called IT-enabled service (ITeS). Simply put, ITeS is the integration of IT and specific domain knowledge to increase the innovative values of conventional services produced by industries. ITeS can be sub-divided into two categories. The first of which is the integration of IT functionalities into traditional services. Examples include real-time interpretation services made possible with VoIP services and remote healthcare monitoring services provided via the Internet. The second of which is the transformation of IT itself into a service. The textbook example is Google, which provides services ranging from email, search engine, advertisement, news, and media, all based on the premise of the Internet technology itself. Coupling its manufacturing prowess and experience in software development with a dynamic, diversified, and mature IT environment, Taiwan is the perfect test bed for ITeS. However, ITeS is not without its challenges. For instance, language barriers, potential infrastructure compatibilities, and finding Taiwan's niche in the global ITeS value chain are all issues that need to be addressed. The author touches on the rise of ITeS, how ITeS can revolutionize the service sector, the opportunities for Taiwan in this nascent domain, and the challenges it might face while trying to transform from a labor-intensive manufacturing-centric society to one that's knowledge-intensive service-centric","","0-7695-2645-4","10.1109/ICEBE.2006.66","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031623","","Web and internet services;Manufacturing;Information technology;Environmental economics;Cultural differences;Medical services;Remote monitoring;Search engines;Programming;Software testing","electronic commerce;information technology","information revolution;IT enabled e-commerce;IT enabled service;Taiwan;knowledge-intensive service-centric","","1","1","","","19 Dec 2006","","","IEEE","IEEE Conferences"
"The development and application of a testing system of reaction time based on mesopic vision","S. Tong; Z. Jiandong; L. Haoran","Dept. Mechanical Electronic and Control engineering, Beijing Jiaotong University, Beijing China; Dept. Mechanical Electronic and Control engineering, Beijing Jiaotong University, Beijing China; Dept. Mechanical Electronic and Control engineering, Beijing Jiaotong University, Beijing China","2011 International Conference on Mechatronic Science, Electric Engineering and Computer (MEC)","22 Sep 2011","2011","","","418","420","The paper indicates a self-developed testing system of reaction time based on the theory of mesopic vision. The system is supposed to simulate the actual effects of tunnel lighting with varies of light sources, which could be attributed to mesopic visual environment. By adopting lights of different brightness, projecting designated graphs on the screen and capturing reaction time with a button, the effect of lighting condition to the human body can be obtained. The system equips with software, in which diverse projects can be created and also all the parameters and data can be put into a chart for later research. By providing theories and sequential experiments, the paper introduces hardware and software composition of the developed system. It is proved by facts that this system could throw light in the field of mesopic vision.","","978-1-61284-722-1","10.1109/MEC.2011.6025490","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6025490","mesopic vision;reaction time;testing system","Lighting;Software;Testing;Roads;Control systems;Brightness;Humans","automatic testing;brightness;light sources;lighting;tunnels;vision","self-developed testing system;reaction time;mesopic vision;tunnel lighting;light sources;mesopic visual environment;brightness;designated graphs;hardware composition;software composition","","","","4","","22 Sep 2011","","","IEEE","IEEE Conferences"
"Filtering in Chinese document images based on templates and confidence measure","Chen Jiewei; Xu Weiran; Guo Jun","Sch. of Inf. Eng., Beijing Univ. of Posts & Telecommun., China; Sch. of Inf. Eng., Beijing Univ. of Posts & Telecommun., China; Sch. of Inf. Eng., Beijing Univ. of Posts & Telecommun., China","Proceedings 7th International Conference on Signal Processing, 2004. Proceedings. ICSP '04. 2004.","27 Jun 2005","2004","2","","1376","1379 vol.2","A fast approach to keyword spotting in Chinese document images based on multiple templates matching and confidence measure is presented. The system generates keyword lexicon of diverse fonts and two-stage feature vectors prior to the procedure of keyword searching. A two-stage retrieval scheme and Boyer-Moore Algorithm is proposed aiming at accelerating the retrieval process. A distance measure between the candidate character and the templates is used to identify and rank similar templates. The performance of new system has been significantly improved when compared to traditional OCR and image-based approach. Experimental results confirmed the robust of the proposed approach over a wide range of degradations.","","0-7803-8406-7","10.1109/ICOSP.2004.1441582","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1441582","","Information filtering;Optical character recognition software;Testing;Degradation;Image recognition;Image segmentation;Image retrieval;Information retrieval;Character recognition;Acceleration","image retrieval;feature extraction;information filtering;document image processing;natural languages;image matching;character recognition","Chinese document image filter;confidence measure;multiple template matching;keyword lexicon;two-stage feature vector;two-stage retrieval scheme;Boyer-Moore algorithm;candidate character;information filtering","","","","6","","27 Jun 2005","","","IEEE","IEEE Conferences"
"Importance-Driven Deep Learning System Testing","S. Gerasimou; H. F. Eniser; A. Sen; A. Cakan","University of York,York,UK; MPI-SWS,Kaiserslautern,Germany; Bogazici University,Istanbul,Turkey; Bogazici University,Istanbul,Turkey","2020 IEEE/ACM 42nd International Conference on Software Engineering: Companion Proceedings (ICSE-Companion)","1 Dec 2020","2020","","","322","323","Deep Learning (DL) systems are key enablers for engineering intelligent applications. Nevertheless, using DL systems in safety- and security-critical applications requires to provide testing evidence for their dependable operation. We introduce DeepImportance, a systematic testing methodology accompanied by an Importance-Driven (IDC) test adequacy criterion for DL systems. Applying IDC enables to establish a layer-wise functional understanding of the importance of DL system components and use this information to assess the semantic diversity of a test set. Our empirical evaluation on several DL systems and across multiple DL datasets demonstrates the usefulness and effectiveness of DeepImportance.","2574-1926","978-1-4503-7122-3","","Semiconductor Research Corporation; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9270311","Deep Neural Networks;Software Testing","Neurons;Testing;Deep learning;Neural networks;Decision making;Training;Systematics","learning (artificial intelligence);program testing;safety-critical software","Importance-driven deep learning system testing;engineering intelligent applications;DL systems;security-critical applications;systematic testing methodology;IDC;layer-wise functional understanding;DL system components;test set;importance-driven test adequacy criterion;DeepImportance;safety-critical applications","","","","6","","1 Dec 2020","","","IEEE","IEEE Conferences"
"Test-Driven Anonymization in Health Data: A Case Study on Assistive Reproduction","C. Augusto; M. A. Olivero; J. Morán; L. Morales; C. d. la Riva; J. Aroba; J. Tuya","University of Oviedo,Department of Computing,Gijón,Spain; ISTI-CNR- Pisa, Italy IWT2 - University of Seville,Sevilla,Spain; University of Oviedo,Department of Computing,Gijón,Spain; Web Engineering and Early Testing Research Group University of Seville,Sevilla,Spain; University of Oviedo,Department of Computing,Gijón,Spain; University of Huelva,Department of Information Technologies,Huelva,Spain; University of Oviedo,Department of Computing,Gijón,Spain","2020 IEEE International Conference On Artificial Intelligence Testing (AITest)","25 Aug 2020","2020","","","81","82","Artificial intelligence (AI) is a broad field whose prevalence in the health sector has increased during recent years. Clinical data are the basic staple that feeds intelligent healthcare applications, but due to its sensitive character, its sharing and usage by third parties require compliance with both confidentiality agreements and security measures. Data Anonymization emerges as a solution to both increasing the data privacy and reducing the risk against unintentional disclosure of sensitive information through data modifications. Although the anonymization improves privacy, the diverse modifications also harm the data functional suitability. These data modifications can affect applications that employ the anonymized data, especially those that are data-centric such as the AI tools. To obtain a trade-off between both qualities (privacy and functional suitability), we use the Test-Driven Anonymization (TDA) approach, which anonymizes incrementally the data to train the AI tools and validates with the real data until maximizing its quality. The approach is evaluated on a real-world dataset from the Spanish Institute for the Study of the Biology of Human Reproduction (INEBIR). The anonymized datasets are used to train AI tools and select the dataset that gets the best trade-off between privacy and functional quality requirements. The results show that TDA can be successfully applied to anonymize the clinical data of the INEBIR, allowing third parties to transfer without transgressing user privacy and develop useful AI Tools with the anonymized data.","","978-1-7281-6984-2","10.1109/AITEST49225.2020.00019","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9176766","Anonymization;Software Testing;Artificial intelligence;Health-Care Data;k-Anonymity","Artificial intelligence;Data privacy;Tools;Testing;Bagging;Data models","artificial intelligence;data privacy;health care;security of data","health data;assistive reproduction;artificial intelligence;broad field whose prevalence;health sector;clinical data;intelligent healthcare applications;sensitive character;data anonymization;data privacy;data modifications;data functional suitability;anonymized data;anonymized datasets;AI tools;test-driven anonymization","","","","6","","25 Aug 2020","","","IEEE","IEEE Conferences"
"Poster: Toward the Development of Richer Properties for Recommender Systems","D. Shriver","Univ. of Nebraska-Lincoln, Lincoln, NE, USA","2018 IEEE/ACM 40th International Conference on Software Engineering: Companion (ICSE-Companion)","30 Aug 2018","2018","","","173","174","The performance of recommender systems is commonly characterized by metrics such as precision and recall. However, these metrics can only provide a coarse characterization of the system, as they offer limited intuition and insights on potential system anomalies, and may fail to provide a developer with an understanding of the strengths and weaknesses of a recommendation algorithm. In this work, we start to describe a model of recommender systems that defines a space of properties. We begin exploring this space by defining templates that relate to the properties of coverage and diversity, and we demonstrate how instantiated characteristics offer complementary insights to precision and recall.","2574-1934","978-1-4503-5663-3","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8449486","software testing;recommender sytems","Recommender systems;Measurement;Collaboration;Filtering algorithms;Prediction algorithms;Space exploration","recommender systems","recommender systems;coarse characterization;potential system anomalies","","","","9","","30 Aug 2018","","","IEEE","IEEE Conferences"
"Adaptation of traditional usability testing methods for remote testing","J. Scholtz","Nat. Inst. of Stand. & Technol., USA","Proceedings of the 34th Annual Hawaii International Conference on System Sciences","7 Aug 2002","2001","","","8 pp.","","Traditional usability testing methods are difficult to use in producing Web sites and Web applications, mainly because of the decreased development times that companies demand for this type of software. Users of Web sites have diverse platforms, computer expertise and expectations. Companies want to use Web sites to sell merchandise and provide services to customers. Therefore, it is essential to make usability a high priority in the development of Web-based software. How can we resolve this seemingly contradictory situation? We believe that usability testing tools that are remote, rapid and automated would be helpful in providing more usability information in a shorter time and in a form that can be immediately useful to usability professionals. In this paper, we discuss the approach we have taken to designing such tools. We currently have several tools available for public use that are also discussed in this paper. Our next steps will be to conduct methodological studies to validate the use of these tools.","","0-7695-0981-9","10.1109/HICSS.2001.926546","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=926546","","Usability;Software testing;Application software;Programming;NIST;Merchandise;Automatic testing;Web sites;Books;Investments","program testing;human factors;information resources;distributed programming","usability testing methods;remote testing;Web sites;World Wide Web applications;software development times;hardware platforms;computer expertise;user expectations;merchandise;electronic commerce;customer services;Web-based software development;usability testing tools","","9","","9","","7 Aug 2002","","","IEEE","IEEE Conferences"
"An object-oriented testbed for the evaluation of checkpointing and recovery systems","B. Ramamurthy; S. J. Upadhyaya; R. K. Iyer","Dept. of Electr. & Comput. Eng., State Univ. of New York, Buffalo, NY, USA; NA; NA","Proceedings of IEEE 27th International Symposium on Fault Tolerant Computing","6 Aug 2002","1997","","","194","203","The paper presents the design and development of an object-oriented testbed for simulation and analysis of checkpointing and recovery schemes in distributed systems. An important contribution, of the testbed is a unified environment that provides a set of specialized components for easy and detailed simulation of checkpointing and recovery schemes. The testbed allows a designer to mix and match different components either to study the effectiveness of a particular scheme or to freely experiment with hybrid designs before the actual implementation. The testbed also facilitates the evaluation of interdependencies among the various parameters such as communication and application dynamics and their effect on the performance of checkpointing and recovery schemes. The implementation of the testbed as an extension of DEPEND which is an integrated design and fault-injection environment, provides for unique system-level dependability analysis under realistic fault conditions unlike existing simulation tools. The authors illustrate the versatility of the testbed by using four diverse applications, ranging from the comparison of performances of two checkpointing and recovery schemes to the study of the effect of checkpoint size.","0731-3071","0-8186-7831-3","10.1109/FTCS.1997.614092","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=614092","","System testing;Checkpointing;Object oriented modeling;Computational modeling;Analytical models;Distributed computing;Design engineering;Computer simulation;Software testing;Application software","system recovery;virtual machines;distributed processing;distributed processing;object-oriented programming;object-oriented methods;software performance evaluation;testing","object-oriented testbed;recovery system evaluation;checkpointing system evaluation;distributed systems;specialized components;simulation;hybrid designs;parameter interdependencies;application dynamics;communication dynamics;extended DEPEND;integrated design/fault-injection;system-level dependability analysis;realistic fault conditions;checkpoint size effect;performances","","9","","29","","6 Aug 2002","","","IEEE","IEEE Conferences"
"A Flexible Approach to WSN Deployment","L. D. Pedrosa; P. Melo; R. M. Rocha; R. Neves","Inst. de Telecomun., Tech. Univ. of Lisbon, Lisbon; NA; NA; NA","2008 Proceedings of 17th International Conference on Computer Communications and Networks","17 Nov 2008","2008","","","1","6","A flexible wireless sensor network platform for easier implementation of diverse applications has been developed and deployed at the Institute Superior Tecnico - Technical University of Lisbon (IST-TUL). This test-bed integrates multiple projects into a single common network, thus creating an expandable platform that facilitates the development of future applications. To achieve this flexibility, a dedicated software framework was developed that not only provides a centralized configuration panel that is accessible over the Internet, allowing the administrator to configure common network parameters, but also supports application programmability, enabling fine-grained control of in-network sensing, processing, and actuation. On top of this platform, three initial applications have been developed and are currently coexisting within the same network, thus demonstrating the new platform's capabilities. The paper discusses the main issues related with the test-bed architecture and the development of an environmental interaction application, with an illustrative purpose, along with the deployment challenges. Results of the experimental evaluation of the test-bed are also shown, focusing on the performance of the environmental interaction application's in-network processing system. A particularly relevant result is denoted by the minimum time the network needs to complete its processing tasks (approximately 200 ms in our test topology).","1095-2055","978-1-4244-2389-7","10.1109/ICCCN.2008.ECP.161","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4674320","","Wireless sensor networks;Application software;System testing;Temperature sensors;Vibration measurement;Telecommunications;Sensor systems and applications;IP networks;Intelligent sensors;Software testing","Internet;telecommunication computing;wireless sensor networks","flexible wireless sensor network platform;dedicated software framework;centralized configuration panel;Internet;application programmability;in-network sensing;test-bed architecture;environmental interaction application","","3","","14","","17 Nov 2008","","","IEEE","IEEE Conferences"
"Principles and methods of testing finite state machines-a survey","D. Lee; M. Yannakakis","AT&T Bell Labs., Murray Hill, NJ, USA; AT&T Bell Labs., Murray Hill, NJ, USA","Proceedings of the IEEE","6 Aug 2002","1996","84","8","1090","1123","With advanced computer technology, systems are getting larger to fulfill more complicated tasks: however, they are also becoming less reliable. Consequently, testing is an indispensable part of system design and implementation; yet it has proved to be a formidable task for complex systems. This motivates the study of testing finite stare machines to ensure the correct functioning of systems and to discover aspects of their behavior. A finite state machine contains a finite number of states and produces outputs on state transitions after receiving inputs. Finite state machines are widely used to model systems in diverse areas, including sequential circuits, certain types of programs, and, more recently, communication protocols. In a testing problem we have a machine about which we lack some information; we would like to deduce this information by providing a sequence of inputs to the machine and observing the outputs produced. Because of its practical importance and theoretical interest, the problem of testing finite state machines has been studied in different areas and at various times. The earliest published literature on this topic dates back to the 1950's. Activities in the 1960's mid early 1970's were motivated mainly by automata theory and sequential circuit testing. The area seemed to have mostly died down until a few years ago when the testing problem was resurrected and is now being studied anew due to its applications to conformance testing of communication protocols. While some old problems which had been open for decades were resolved recently, new concepts and more intriguing problems from new applications emerge. We review the fundamental problems in testing finite state machines and techniques for solving these problems, tracing progress in the area from its inception to the present and the stare of the art. In addition, we discuss extensions of finite state machines and some other topics related to testing.","1558-2256","","10.1109/5.533956","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=533956","","Circuit testing;Automata;System testing;Sequential circuits;Protocols;Software testing;Paper technology;Automatic testing;Sequential analysis;Fault detection","finite state machines;logic testing;sequential circuits;conformance testing;reviews;protocols;identification;sequences","finite state machines;conformance testing;communication protocols;sequential circuit testing;automata theory;FSM testing","","764","10","153","","6 Aug 2002","","","IEEE","IEEE Journals"
"Know You Neighbor: Fast Static Prediction of Test Flakiness","R. Verdecchia; E. Cruciani; B. Miranda; A. Bertolino","Department of Computer Science, Vrije Universiteit Amsterdam, Amsterdam, HV, The Netherlands; Computerwissenschaften, Universität Salzburg, Salzburg, Austria; Center of Informatics, Federal University of Pernambuco, Recife, Brazil; Istituto di Scienza e Tecnologie dell’Informazione “A. Faedo”, Consiglio Nazionale delle Ricerche, Pisa, Italy","IEEE Access","27 May 2021","2021","9","","76119","76134","Context: Flaky tests plague regression testing in Continuous Integration environments by slowing down change releases and wasting testing time and effort. Despite the growing interest in mitigating the burden of test flakiness, how to efficiently and effectively detect flaky tests is still an open problem. Objective: In this study, we present and evaluate FLAST, an approach designed to statically predict test flakiness. FLAST leverages vector-space modeling, similarity search, dimensionality reduction, and k-Nearest Neighbor classification in order to timely and efficiently detect test flakiness. Method: In order to gain insights into the efficiency and effectiveness of FLAST, we conduct an empirical evaluation of the approach by considering 13 real-world projects, for a total of 1,383 flaky and 26,702 non-flaky tests. We carry out a quantitative comparison of FLAST with the state-of-the-art methods to detect test flakiness, by considering a balanced dataset comprising 1,402 real-world flaky and as many non-flaky tests. Results: From the results we observe that the effectiveness of FLAST is comparable with the state-of-the-art, while providing considerable gains in terms of efficiency. In addition, the results demonstrate how by tuning the threshold of the approach FLAST can be made more conservative, so to reduce false positives, at the cost of missing more potentially flaky tests. Conclusion: The collected results demonstrate that FLAST provides a fast, low-cost and reliable approach that can be used to guide test rerunning, or to gate the inclusion of new potentially flaky tests.","2169-3536","","10.1109/ACCESS.2021.3082424","Facebook Research 2019 Testing and Verification Award; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9437181","Software testing;flaky tests;prediction;static analysis;similarity","Testing;Instruments;Vocabulary;Tools;Static analysis;Social networking (online);Probabilistic logic","pattern classification;program testing;regression analysis","test flakiness;nonflaky tests;potentially flaky tests;test rerunning;flaky tests plague regression testing;continuous integration environment;FLAST approach","","3","","53","CCBY","20 May 2021","","","IEEE","IEEE Journals"
"Inferring Relations Among Test Programs in Microservices Applications","E. De Angelis; G. De Angelis; A. Pellegrini; M. Proietti","IASI-CNR,Rome,Italy; IASI-CNR,Rome,Italy; IASI-CNR,Rome,Italy; IASI-CNR,Rome,Italy","2021 IEEE International Conference on Service-Oriented System Engineering (SOSE)","15 Oct 2021","2021","","","114","123","The emergence of the microservices-oriented architectural style calls for novel methodologies and technological frameworks that support the design, development, and main-tainance of applications structured according to this new style. In this paper, we consider the issue of designing suitable strategies for the governance and the automation of testing activities within the microservices paradigm. We focus on the problem of discovering relations between test programs that help avoiding to re-run all the available test suites each time one of its constituents evolves. We propose an analysis technique, based on symbolic execution of test programs, which is able to collect information about the invocations of local and remote APIs performed when running such programs. Symbolic execution enables the analysis of sets of executions corresponding to different input data, and hence it is also suitable for parametric test programs. The information extracted by symbolic execution is processed by a rule-based automated reasoning engine, which infers dependencies and similarities among test programs. In particular, test programs are considered similar if they involve the same microservice instance, or they connect to the same remote API, or they locally activate overlapping APIs, or they raise similar kinds of errors. We show the viability of our approach by presenting a case study within the context of a real-world microservice application that implements an open-source educational platform.","2642-6587","978-1-6654-3477-5","10.1109/SOSE52839.2021.00018","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9564098","software testing;microservices architecture;test program similarity;symbolic execution;automated reasoning","Automation;Service-oriented systems engineering;Conferences;Cognition;Data mining;Open source software;Engines","application program interfaces;computer aided instruction;inference mechanisms;Internet;knowledge based systems;program testing;software architecture","symbolic execution;parametric test programs;real-world microservice application;microservices applications;microservices-oriented architectural style;available test suites each time","","1","","41","","15 Oct 2021","","","IEEE","IEEE Conferences"
"Software Defect Evaluation Methods for Embedded Real-Time Control System Based on Transfer Learning","X. Han; M. Bian; Z. Wu","The fifth electronic research institute of MIIT,China Electronic Product Reliability and Environmental Testing Research Institute,Guangzhou,China,510610; The fifth electronic research institute of MIIT,China Electronic Product Reliability and Environmental Testing Research Institute,Guangzhou,China,510610; The fifth electronic research institute of MIIT,China Electronic Product Reliability and Environmental Testing Research Institute,Guangzhou,China,510610","2022 14th International Conference on Measuring Technology and Mechatronics Automation (ICMTMA)","7 Mar 2022","2022","","","247","255","In order to reduce the impact of environmental changes on software defect evaluation, an embedded real-time control system software defect evaluation method based on transfer learning is proposed. Firstly, the defect software measurement index is selected. On this basis, the relevant index features are divided into the same cluster by using the feature clustering technology. According to the distribution similarity of the features between the two items, the relevant features are found and the features with large distribution differences are removed. Select high-quality features from the source project to build the training data set, and select better evaluation data from the source project through weight adjustment to realize the accurate evaluation of software defects. The mapping results have clear objectives, and the error rate of the evaluation results of the design method is within 8.7, which has a good evaluation effect.","2157-1481","978-1-6654-9978-1","10.1109/ICMTMA54903.2022.00055","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9723949","transfer learning;embedded real-time control system;defect assessment;measurement index;clustering technology;distribution similarity","Training;Software testing;Correlation;Error analysis;Transfer learning;Training data;Software","control engineering computing;learning (artificial intelligence);pattern clustering;software maintenance","embedded real-time control system;transfer learning;environmental changes;real-time control system software defect evaluation method;defect software measurement index;index features;feature clustering technology","","","","20","IEEE","7 Mar 2022","","","IEEE","IEEE Conferences"
"Variability Aware Requirements Reuse Analysis","M. Abbas","Mälardalen University & RISE Research Institutes of Sweden,Västerås,Sweden","2020 IEEE/ACM 42nd International Conference on Software Engineering: Companion Proceedings (ICSE-Companion)","1 Dec 2020","2020","","","190","193","Problem: The goal of a software product line is to aid quick and quality delivery of software products, sharing common features. Effectively achieving the above-mentioned goals requires reuse analysis of the product line features. Existing requirements reuse analysis approaches are not focused on recommending product line features, that can be reused to realize new customer requirements. Hypothesis: Given that the customer requirements are linked to product line features' description satisfying them: then the customer requirements can be clustered based on patterns and similarities, preserving the historic reuse information. New customer requirements can be evaluated against existing customer requirements and reuse of product line features can be recommended. Contributions: We treated the problem of feature reuse analysis as a text classification problem at the requirements-level. We use Natural Language Processing and clustering to recommend reuse of features based on similarities and historic reuse information. The recommendations can be used to realize new customer requirements.","2574-1926","978-1-4503-7122-3","","ITEA; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9270333","software reuse;variability;product line;requirements;similarities","Feature extraction;Pipelines;Software;Testing;Software product lines;Recommender systems;Rail transportation","natural language processing;pattern classification;pattern clustering;software reusability;text analysis","variability aware requirements reuse;software product line;product line features;customer requirements;historic reuse information;feature reuse analysis;requirements-level;requirements reuse analysis","","","","18","","1 Dec 2020","","","IEEE","IEEE Conferences"
"Testing DNN-Based Path Planning Algorithms by Metamorphic Testing","S. Lv; B. Yin","Beihang University,School of Automation Science and Electrical Engineering,Beijing,China; Beihang University,School of Automation Science and Electrical Engineering,Beijing,China","2020 7th International Conference on Dependable Systems and Their Applications (DSA)","26 Jan 2021","2020","","","515","526","Deep Neural Networks (DNNs) are increasingly applied to solve path planning problems in recent years. However, unexpected or incorrect behaviors of DNNs greatly threaten the reliability of DNN-based path planning algorithms. Therefore, the reliability should be evaluated through the software testing process. The quality of the training dataset is of great importance to the pre-trained DNN models. The pretrained model may still lack generality by using a randomly generated and insufficient training dataset. And DNN-based system testing is faced with Oracle problems. Because Metamorphic Testing (MT) has been shown considerable effectiveness in alleviating the absence of oracle problems. To increase the reliability of DNN-based path planning algorithms, in this paper, we present a test technique specialized for DNN-based path planning algorithms based on metamorphic testing. We present a framework for systematically designing sixteen metamorphic relations (MRs) by combining input transformations and output relations. And experiments are carried out on an actually released business software system, which demonstrates that our method is effective. The results show that our approach can effectively improve the diversity of test data, the accuracy of the DNN model, and the reliability of the software.","","978-0-7381-2422-3","10.1109/DSA51864.2020.00088","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9331244","deep learning testing;DNN-based path planning algorithm;metamorphic testing;neuron coverage","Training;Software algorithms;Software systems;Path planning;Software reliability;Testing;Business","control engineering computing;convolutional neural nets;deep learning (artificial intelligence);path planning;program testing;software reliability","oracle problems;DNN-based path planning algorithms;metamorphic testing;DNN model;software testing process;pre-trained DNN models;randomly generated training dataset;DNN-based system testing;software reliability;metamorphic relation","","","","29","","26 Jan 2021","","","IEEE","IEEE Conferences"
"Sorting and Transforming Program Repair Ingredients via Deep Learning Code Similarities","M. White; M. Tufano; M. Martínez; M. Monperrus; D. Poshyvanyk","College of William and Mary, Williamsburg, Virginia, USA; College of William and Mary, Williamsburg, Virginia, USA; Université Polytechnique Hauts-de-France, Valenciennes, France; KTH Royal Institute of Technology, Stockholm, Sweden; College of William and Mary, Williamsburg, Virginia, USA","2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering (SANER)","18 Mar 2019","2019","","","479","490","In the field of automated program repair, the redundancy assumption claims large programs contain the seeds of their own repair. However, most redundancy-based program repair techniques do not reason about the repair ingredients- the code that is reused to craft a patch. We aim to reason about the repair ingredients by using code similarities to prioritize and transform statements in a codebase for patch generation. Our approach, DeepRepair, relies on deep learning to reason about code similarities. Code fragments at well-defined levels of granularity in a codebase can be sorted according to their similarity to suspicious elements (i.e., code elements that contain suspicious statements) and statements can be transformed by mapping out-of-scope identifiers to similar identifiers in scope. We examined these new search strategies for patch generation with respect to effectiveness from the viewpoint of a software maintainer. Our comparative experiments were executed on six open-source Java projects including 374 buggy program revisions and consisted of 19,949 trials spanning 2,616 days of computation time. Deep-Repair's search strategy using code similarities generally found compilable ingredients faster than the baseline, jGenProg, but this improvement neither yielded test-adequate patches in fewer attempts (on average) nor found significantly more patches (on average) than the baseline. Although the patch counts were not statistically different, there were notable differences between the nature of DeepRepair patches and jGenProg patches. The results show that our learning-based approach finds patches that cannot be found by existing redundancy-based repair techniques.","1534-5351","978-1-7281-0591-8","10.1109/SANER.2019.8668043","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8668043","software testing and debugging;program repair;deep learning;neural networks;code clones;language models","Maintenance engineering;Redundancy;Computer bugs;Deep learning;Transforms;Cloning;Sorting","Java;learning (artificial intelligence);neural nets;program debugging;public domain software;software maintenance","patch generation;code similarities;compilable ingredients;patch counts;DeepRepair patches;jGenProg patches;learning-based approach;deep learning code;automated program repair;redundancy-based program repair techniques;codebase;code fragments;code elements;suspicious statements;out-of-scope identifier mapping;program repair ingredients;redundancy-based repair techniques;Deep-Repair search strategy;buggy program revisions;deep learning;open-source Java projects","","33","","87","","18 Mar 2019","","","IEEE","IEEE Conferences"
"Facial Range Image Matching Using the ComplexWavelet Structural Similarity Metric","S. Gupta; M. P. Sampat; M. K. Markey; A. C. Bovik; Z. Wang",University of Texas at Austin; University of Texas at Austin; University of Texas at Austin; University of Texas at Austin; University of Texas at Arlington,"2007 IEEE Workshop on Applications of Computer Vision (WACV '07)","5 Mar 2007","2007","","","4","4","We propose a novel 3D face recognition algorithm based on facial range image matching using the complex wavelet structural similarity metric (CW-SSIM) metric. Compared with many existing 3D surface matching methods, CW-SSIM is computationally efficient and is robust to small geometrical distortions. Using a data set that contains 360 3D face models of 12 subjects, we tested the performance of the proposed method and compared it with existing 3D surface matching based face recognition algorithms. Verification and identification performance of each algorithm was evaluated by means of the receiver operating characteristic curve and the cumulative match characteristic curve. Among the algorithms tested, the proposed algorithm based on the CW-SSIM resulted in the best overall performance with an equal error rate of 9.13% and a rank 1 recognition rate of 98.6%, significantly better than all the other algorithms. Besides the introduction of a novel approach for 3D face recognition, this is also the first attempt to expand the application scope of complex wavelet domain similarity measure to range image matching in general","1550-5790","0-7695-2794-9","10.1109/WACV.2007.22","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4118733","","Image matching;Face recognition;Face detection;Humans;Robustness;Application software;Testing;Biometrics;Lighting;Computer vision","face recognition;image matching;wavelet transforms","facial range image matching;complex wavelet structural similarity metric;CW-SSIM metric;face recognition algorithm;3D surface matching method;geometrical distortion;receiver operating characteristic curve;cumulative match characteristic curve","","7","","20","","5 Mar 2007","","","IEEE","IEEE Conferences"
"Search-Based Test Input Generation for String Data Types Using the Results of Web Queries","P. McMinn; M. Shahbaz; M. Stevenson","Univ. of Sheffield, Sheffield, UK; Univ. of Sheffield, Sheffield, UK; Univ. of Sheffield, Sheffield, UK","2012 IEEE Fifth International Conference on Software Testing, Verification and Validation","17 May 2012","2012","","","141","150","Generating realistic, branch-covering string inputs is a challenging problem, due to the diverse and complex types of real-world data that are naturally encodable as strings, for example resource locators, dates of different localised formats, international banking codes, and national identity numbers. This paper presents an approach in which examples of inputs are sought from the Internet by reformulating program identifiers into web queries. The resultant URLs are downloaded, split into tokens, and used to augment and seed a search-based test data generation technique. The use of the Internet as part of test input generation has two key advantages. Firstly, web pages are a rich source of valid inputs for various types of string data that may be used to improve test coverage. Secondly, the web pages tend to contain realistic, human-readable values, which are invaluable when test cases need manual confirmation due to the lack of an automated oracle. An empirical evaluation of the approach is presented, involving string input validation code from 10 open source projects. Well-formed, valid string inputs were retrieved from the web for 96% of the different string types analysed. Using the approach, coverage was improved for 75% of the Java classes studied by an average increase of 14%.","2159-4848","978-0-7695-4670-4","10.1109/ICST.2012.94","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6200106","Automatic test data generation;search based testing;string inputs;web queries","Electronic mail;Testing;Web pages;Internet;Search problems;Java;Search engines","automatic test pattern generation;program testing;public domain software;query processing;Unified Modeling Language;Web services","string data type;Web query;branch covering string;Internet;program identifier;URL;search-based test data generation;Web page;test coverage;automated oracle;open source project;information retrieval;Java","","28","","33","","17 May 2012","","","IEEE","IEEE Conferences"
"Behind an Application Firewall, Are We Safe from SQL Injection Attacks?","D. Appelt; C. D. Nguyen; L. Briand","Interdiscipl. Centre for Security, Reliability & Trust (SnT Centre), Univ. of Luxembourg, Luxembourg, Luxembourg; Interdiscipl. Centre for Security, Reliability & Trust (SnT Centre), Univ. of Luxembourg, Luxembourg, Luxembourg; Interdiscipl. Centre for Security, Reliability & Trust (SnT Centre), Univ. of Luxembourg, Luxembourg, Luxembourg","2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST)","7 May 2015","2015","","","1","10","Web application firewalls are an indispensable layer to protect online systems from attacks. However, the fast pace at which new kinds of attacks appear and their sophistication require that firewalls be updated and tested regularly as otherwise they will be circumvented. In this paper, we focus our research on web application firewalls and SQL injection attacks. We present a machine learning-based testing approach to detect holes in firewalls that let SQL injection attacks bypass. At the beginning, the approach can automatically generate diverse attack payloads, which can be seeded into inputs of web- based applications, and then submit them to a system that is protected by a firewall. Incrementally learning from the tests that are blocked or passed by the firewall, our approach can then select tests that exhibit characteristics associated with bypassing the firewall and mutate them to efficiently generate new bypassing attacks. In the race against cyber attacks, time is vital. Being able to learn and anticipate more attacks that can circumvent a firewall in a timely manner is very important in order to quickly fix or fine-tune the firewall. We developed a tool that implements the approach and evaluated it on ModSecurity, a widely used application firewall. The results we obtained suggest a good performance and efficiency in detecting holes in the firewall that could let SQLi attacks go undetected.","2159-4848","978-1-4799-7125-1","10.1109/ICST.2015.7102581","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7102581","","Grammar;Testing;Security;Databases;Syntactics;Servers;Radio access networks","firewalls;Internet;learning (artificial intelligence);SQL","SQL injection attacks;SQLi attacks;Web application firewalls;online system protection;machine learning-based testing approach;bypassing attacks;cyber attacks;ModSecurity","","18","","20","","7 May 2015","","","IEEE","IEEE Conferences"
"Automatic Detection of Visibility Faults by Layout Changes in HTML5 Web Pages","Y. Ryou; S. Ryu","Sch. of Comput., KAIST, Daejeon, South Korea; Sch. of Comput., KAIST, Daejeon, South Korea","2018 IEEE 11th International Conference on Software Testing, Verification and Validation (ICST)","28 May 2018","2018","","","182","192","Modern HTML5 web pages (pages) often change various elements of their documents dynamically to provide rich functionality to users interactively. As users interact with a document via events, the combination of HTML, CSS, and JavaScript dynamically changes the document layout, which is the arrangement of the document elements visualized to the users. Web pages change their layouts not only to support user interaction but also to react to different screen sizes being used to run the pages. To support diverse devices with different screen sizes using a single web page document, developers use Responsive Web Design, which enables web page layouts to change when the sizes of the underlying devices change. While such dynamic features of web pages provide powerful experiences to users, they also make development of web pages more difficult. Even expert developers find it difficult to write HTML5 web pages correctly. In this paper, we first define the problem that functionalities of HTML5 web pages may become unusable due to layout changes, and propose a technique to detect the problem automatically. We show that our implementation detects such problems in real-world HTML5 web pages.","","978-1-5386-5012-7","10.1109/ICST.2018.00027","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8367047","visibility faults;automatic bug detection;HTML5 web pages;layout changes","Web pages;Layout;Browsers;Tools;Cascading style sheets;Visualization","human computer interaction;hypermedia markup languages;interactive systems;Internet;software fault tolerance;Web design","layout changes;user interaction;web page layouts;HTML5 web pages;automatic visibility faults detection;web page document;CSS;JavaScript;Responsive Web Design","","9","","67","","28 May 2018","","","IEEE","IEEE Conferences"
"Support for Finding Presentation Failures by Using Computer Vision Techniques","H. Tanno; Y. Adachi","NTT Labs., Tokyo, Japan; NTT Labs., Tokyo, Japan","2018 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","19 Jul 2018","2018","","","356","363","When testing applications that run on diverse client devices, operating systems, and browsers, it is necessary to check whether application screens display correctly in various environments and ensure that there is no presentation failure. Applications are typically composed of many screens, and there are many types and combinations of environments in which they may run. Accordingly, it is very labor intensive to visually confirm large numbers of such screens, and there is a strong possibility of missing presentation failures. Finding a way of efficiently confirming large numbers of application screen images is hence a challenge facing real-world testing and industry. Here, we propose a method to support discovery of presentation failures. It detects differences in screen elements, e.g., a disappearance of or change in the position of a button, by comparing the images of the correct screen and the target screen by utilizing computer vision techniques and displays those differences to the tester in an easy-to-understand way. As a result, the tester can quickly confirm the differences and find presentation failures efficiently. Our method uses only images of the application screen, therefore it does not depend on a specific implementation technology. Thus, it can be utilized for confirming the test results of various implementations (Web, android, iOS, etc.). In experiments with application screens in which presentation failures were intentionally embedded, we measured how much the proposed method increases failure discovery rate and determined whether it reduces the amount of labor.","","978-1-5386-6352-3","10.1109/ICSTW.2018.00073","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8411776","Test result verification;presentation failure;visual GUI testing;test oracle;image processing","Feature extraction;Testing;Tools;Browsers;Androids;Humanoid robots;Smart phones","computer vision;formal verification;mobile computing;program testing;software fault tolerance","presentation failure;application screen images;computer vision;applications testing;test result verification","","7","","14","","19 Jul 2018","","","IEEE","IEEE Conferences"
"Combinatorial Testing on Implementations of HTML5 Support","X. Deng; T. Wu; J. Yan; J. Zhang","Technol. Center of Software Eng., Inst. of Software, Beijing, China; State Key Lab. of Comput. Sci., Inst. of Software, Beijing, China; Technol. Center of Software Eng., Inst. of Software, Beijing, China; State Key Lab. of Comput. Sci., Inst. of Software, Beijing, China","2017 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","17 Apr 2017","2017","","","262","271","The fifth version of HTML standard, which is widely accepted in the diverse landscape of browser vendors and their continuously upgrading releases, requires web browsers to support playback of multimedia natively, instead of by third-party plugins. Works on testing browsers' implementations of the HTML5 support, however, are not efficient enough till now. Regarding a browser's processing on HTML5 element tags of web pages and attributes of multimedia files, this paper treats the browser as a parameterized black-box and employs the combinatorial testing technique to design web pages to test its system behavior. Experiments are conducted on two sets of browsers. The first set includes nine popular ones in both desktop and mobile for discovering the distribution of multimedia related errors, and the second set contains five versions of the same browser for revealing the evolution of such errors. The experimental results indicate that the proposed approach is promising as it can reveal errors in browsers by various vendors and in various versions, and that the upgrades of the browser will not necessarily fix the existing bugs, and even introduce new ones, due to inefficient testing.","","978-1-5090-6676-6","10.1109/ICSTW.2017.47","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7899064","","Browsers;Media;Containers;HTML;Testing;Multimedia communication;Web pages","hypermedia markup languages;Internet;multimedia computing;online front-ends;Web sites","combinatorial testing;HTML5 support;HTML standard;browser vendors;Web browsers;third-party plugins;Web pages;multimedia files;parameterized black-box;desktop","","3","","14","","17 Apr 2017","","","IEEE","IEEE Conferences"
"Automated Random Testing in Multiple Dispatch Languages","S. Poulding; R. Feldt","Software Eng. Res. Lab., Blekinge Inst. of Technol., Karlskrona, Sweden; Software Eng. Res. Lab., Blekinge Inst. of Technol., Karlskrona, Sweden","2017 IEEE International Conference on Software Testing, Verification and Validation (ICST)","18 May 2017","2017","","","333","344","In programming languages that use multiple dispatch, a single function can have multiple implementations, each of which may specialise the function's operation. Which one of these implementations to execute is determined by the data types of all the arguments to the function. Effective testing of functions that use multiple dispatch therefore requires diverse test inputs in terms of the data types of the input's arguments as well as their values. In this paper we describe an approach for generating test inputs where both the values and types are chosen probabilistically. The approach uses reflection to automatically determine how to create inputs with the desired types, and dynamically updates the probability distribution from which types are sampled in order to improve both the test efficiency and efficacy. We evaluate the technique on 247 methods across 9 built-in functions of Julia, a technical computing language that applies multiple dispatch at runtime. In the process, we identify three real faults in these widely-used functions.","","978-1-5090-6031-3","10.1109/ICST.2017.37","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7927987","","Concrete;Testing;Probabilistic logic;Probability distribution;Context;Software engineering;Electronic mail","program testing;programming languages","automated random testing;multiple dispatch languages;programming languages;probability distribution;Julia;technical computing language","","2","","11","","18 May 2017","","","IEEE","IEEE Conferences"
"Exhaustive Exploration of the Failure-Oblivious Computing Search Space","T. Durieux; Y. Hamadi; Z. Yu; B. Baudry; M. Monperrus","Univ. of Lille & Inria, Lille, France; Ecole Polytech., Palaiseau, France; Univ. of Lille & Inria, Lille, France; R. Inst. of Technol., Stockholm, Sweden; R. Inst. of Technol., Stockholm, Sweden","2018 IEEE 11th International Conference on Software Testing, Verification and Validation (ICST)","28 May 2018","2018","","","139","149","High-availability of software systems requires automated handling of crashes in presence of errors. Failure-oblivious computing is one technique that aims to achieve high availability. We note that failure-obliviousness has not been studied in depth yet, and there is very few study that helps understand why failure-oblivious techniques work. In order to make failure-oblivious computing to have an impact in practice, we need to deeply understand failure-oblivious behaviors in software. In this paper, we study, design and perform an experiment that analyzes the size and the diversity of the failure-oblivious behaviors. Our experiment consists of exhaustively computing the search space of 16 field failures of large-scale open-source Java software. The outcome of this experiment is a much better understanding of what really happens when failure-oblivious computing is used, and this opens new promising research directions.","","978-1-5386-5012-7","10.1109/ICST.2018.00023","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8367043","failure oblivious;repair search space;runtime repair","Computer crashes;Java;Software;Space exploration;Fault tolerance;Fault tolerant systems;Computational modeling","failure analysis;Java;program debugging;public domain software","failure-oblivious computing search space;high-availability;high availability;failure-obliviousness;failure-oblivious behaviors;software systems;failure-oblivious techniques;large-scale open-source Java software","","2","","24","","28 May 2018","","","IEEE","IEEE Conferences"
"POWER: Program Option-Aware Fuzzer for High Bug Detection Ability","A. Lee; I. Ariq; Y. Kim; M. Kim","School of Computing, KAIST; School of Computing, KAIST; Hanyang University,Department of Computer Science; School of Computing, KAIST VPlusLab Inc.","2022 IEEE Conference on Software Testing, Verification and Validation (ICST)","8 Jun 2022","2022","","","220","231","Most programs with command-line interface (CLI) have dozens of command-line options (e.g., -l, -F, -R for ls) to alternate the operation of the programs. Thus, depending on the option configurations (i.e., a list of options like -l -F and -F -R) applied during fuzzing, the test coverage and crash detection results can vary significantly. In this paper, we propose a novel fuzzing technique POWER that detects more crashes than the cutting-edge fuzzers by actively constructing and carefully selecting various program option configurations. The salient idea of POWER is to enforce diverse executions of a target program by selecting a set of the option configurations each of which is far &#x201C;different/distant&#x201D; from the others in the set. Another core idea of POWER is to apply different fuzzing strategies to different input domains (i.e., option configurations and input files) to increase testing effectiveness within limited time budget. The experiment results on the 30 real-world programs show that POWER detects significantly more crash bugs than the state-of-the-art fuzzing techniques.","2159-4848","978-1-6654-6679-0","10.1109/ICST53961.2022.00032","NRF(grant numbers:NRF-2020R1C1C1013996,NRF-2021R1A2C2009384,NRF-2021R1A5A1021944); IITP(grant numbers:2021-0-00905-001); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9787839","Automated test generation;fuzzing;program option configurations;dynamic function relevance;crash bug detection;dynamic analysis","Conferences;Computer bugs;Fuzzing","program debugging;program testing","program option-aware fuzzer;command-line interface;command-line options;test coverage;crash detection results;fuzzing technique;cutting-edge fuzzers;program option configurations;target program;real-world programs;crash bugs;POWER;high bug detection ability","","1","","59","IEEE","8 Jun 2022","","","IEEE","IEEE Conferences"
"AcoFuzz: Adaptive Energy Allocation for Greybox Fuzzing","Y. Wu; Q. Zhan; H. Qu; X. Zhao","Ocean University of China,Department of Computer Science and Technology,Qingdao,China; Ocean University of China,Department of Computer Science and Technology,Qingdao,China; Ocean University of China,Department of Computer Science and Technology,Qingdao,China; Ocean University of China,Department of Computer Science and Technology,Qingdao,China","2022 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","8 Jun 2022","2022","","","269","276","In recent years, coverage-based greybox fuzzing (CGF) has become one of the most important techniques to discover security bugs. The existing fuzzers score the seeds, and then allocate the energy to the seeds according to the scoring results, but most seeds obtain the same energy, and then repeatedly select the same seeds for fuzzing. These strategies have been proved to be inefficient. Our experimental observations show that various seeds have diverse efficiency, and the efficiency of test cases changes increase with execution time. In this paper, we propose a novel yet lightweight energy allocation strategy, called AcoFuzz, to improve fuzzing efficiency. AcoFuzz has one following distinct advantage: Dynamically allocate energy for seeds to cope with their efficiency variation. Extensive experiments based on real-world programs and the LAVA-M dataset have been conducted to evaluate the path discovery and vulnerability detection ability of AcoFuzz, which substantially outperforms 3 state-of-the-art fuzzers.","2159-4848","978-1-6654-9628-5","10.1109/ICSTW55395.2022.00054","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9787956","Greybox Fuzzing;Vulnerability Detection;Automated Testing","Conferences;Computer bugs;Collaboration;Fuzzing;Parallel processing;Dynamic scheduling;Main-secondary","fuzzy set theory;program debugging;program testing;security of data","adaptive energy allocation;coverage-based greybox fuzzing;scoring results;novel yet lightweight energy allocation strategy;fuzzing efficiency;AcoFuzz;Dynamically allocate energy","","","","23","IEEE","8 Jun 2022","","","IEEE","IEEE Conferences"
"Review Sharing via Deep Semi-Supervised Code Clone Detection","C. Guo; H. Yang; D. Huang; J. Zhang; N. Dong; J. Xu; J. Zhu","College of Computer Science, Nankai University, Tianjin, China; College of Computer Science, Nankai University, Tianjin, China; College of Computer Science, Nankai University, Tianjin, China; College of Artificial Intelligence, Nankai University, Tianjin, China; School of Computing, National University of Singapore, Singapore; College of Artificial Intelligence, Nankai University, Tianjin, China; College of Software, Nankai University, Tianjin, China","IEEE Access","7 Feb 2020","2020","8","","24948","24965","Code review as a typical type of user feedback has recently drawn increasing attentions for improving code quality. To carry out research on code review, sufficient review data is normally required. As a result, recent efforts commonly focus on analysis for projects with sufficient reviews (called “s-projects”), rather than projects with extremely few ones (called “f-projects”). Actually, through statistics on public platforms, the latter ones dominate open source software, in which novel approaches should be explored to improve their review-based code improvement. In this paper, we try to address the problem via building a review sharing channel where the informative review can be reasonably delivered from s-projects to the f-projects. To ensure the accuracy of shared reviews, we introduce a novel code clone detection model based on Convolutional Neural Network (CNN), and build suitable “s-projects, f-projects” pairs through the clone detection. Especially, to alleviate the dataset heterogeneity between the training and testing, an autoencoder-based semi-supervised learning strategy is employed. Furthermore, to improve the sharing experience, heuristic filtering tactics are applied to reduce the time cost. Meanwhile, the LDA (Latent Dirichlet Allocation)-based ranking algorithm is used for presenting diverse review themes. We have implemented the sharing channel as a prototype system RSharer+, which contains three representative modules: data preprocessing, code clone detection and review presentation. The collected datasets are first transformed into context-sensitive numerical vectors in the data proprecessing. Then in the clone detection, data vectors are trained and tested on the BigCloneBench and real code-review pairs. At last, the presentation module provides review classification and theme extraction for better sharing experience. Extensive comparative experiments on hundreds of real labelled code fragments demonstrate the precision of clone detection and the effectiveness of review sharing.","2169-3536","","10.1109/ACCESS.2020.2966532","Science and Technology Planning Project of Tianjin, China(grant numbers:17JCZDJC30700,17YFZCGX00610,18ZXZNGX00310); Natural Science Foundation of Tianjin City(grant numbers:19JCQNJC00300); Fundamental Research Funds for the Central Universities(grant numbers:63191402); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8959206","Code clone;software review;deep learning;semi-supervised CNN;review sharing","Cloning;Deep learning;Computational modeling;Syntactics;Computer bugs;Software;Testing","convolutional neural nets;learning (artificial intelligence);public domain software;software maintenance;software quality","RSharer+;sharing channel;latent Dirichlet allocation-based ranking algorithm;heuristic filtering tactics;f-projects;s-projects;CNN;convolutional neural network;user feedback;labelled code fragments;review classification;real code-review pairs;diverse review themes;LDA-based ranking algorithm;sharing experience;autoencoder-based semisupervised learning strategy;novel code clone detection model;shared reviews;informative review;review sharing channel;review-based code improvement;sufficient review data;code quality;code review;deep semisupervised code clone detection","","2","","73","CCBY","14 Jan 2020","","","IEEE","IEEE Journals"
"Dynamic Exerciser Template Weighting in x86 Processor Verification","A. Wahba; J. Hohnerlein; F. Rahman; L. Wang","Dept. of ECE, Univ. of California Santa Barbara, Santa Barbara, CA, USA; NA; NA; Dept. of ECE, Univ. of California Santa Barbara, Santa Barbara, CA, USA","2017 18th International Workshop on Microprocessor and SOC Test and Verification (MTV)","28 Jun 2018","2017","","","26","31","Modern digital designs are becoming increasingly complex, which makes their verification a harder process. In modern processors, Random ISA level verification is used to run many diverse stimulus programs to verify a wide variety of desired properties. Random verification uses Exercisers to randomly generate functional ISA level stimulus using predefined templates. The number of simulation slots that are assigned to each template is determined by their assigned weights which reflect the importance of the template, and is currently determined by expert engineers. In this paper, we present a tool to dynamically assign a proper weight to each template based on its ability to successfully generate stimulus programs and its potential of capturing defects in the current phase of the design. The tool is integrated to the verification of a state of the art x86 processor and it was able to hit four new and unique bugs, as well as achieving 40% reduction in the rate of failed to generate stimulus programs while maintaining pass rate and number of signatures hit unchanged.","2332-5674","978-1-5386-3351-9","10.1109/MTV.2017.19","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8396945","","Computer bugs;Tools;Measurement;Mathematical model;Software;Testing;Machine learning","microprocessor chips;program verification","modern digital designs;x86 processor verification;dynamic exerciser template weighting;simulation slots;predefined templates;functional ISA level stimulus;diverse stimulus programs;Random ISA level verification;modern processors","","1","","8","","28 Jun 2018","","","IEEE","IEEE Conferences"
"Implementing Continuous Integration towards rapid application development","F. A. Abdul; M. C. S. Fhang","Software Development Lab, Application Process, MIMOS Berhad, Kuala Lumpur, Malaysia; Corporate Quality, Process Quality, MIMOS Berhad, Kuala Lumpur, Malaysia","2012 International Conference on Innovation Management and Technology Research","12 Jul 2012","2012","","","118","123","If one is working in isolation, Continuous Integration may not be good for him or her. However, not many of us have the lavishness of working alone in software development. Most software development are done in a team, leveraging on diverse functional groups delivering different modules or subsystem. In an enterprise where development of software involves a collection of developers working on modules, integration management is absolutely a necessity; we need to find ways to work efficiently and effectively to make the long and heavy integration process to a simpler and joyful task. The value of an integrated, streamlined build process is something that any software engineers would immediately recognize, all this needs lead us to the philosophy of Continuous Integration. It is the intent of this paper to illustrate a journey and learning process in setting up a Continuous Integration for a software group.","","978-1-4673-0654-6","10.1109/ICIMTR.2012.6236372","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6236372","Continuous Integration;Software Configuration Management;Build Process","Servers;Software;Testing;Packaging;Programming;Automation;Libraries","software development management","continuous integration;rapid application development;software development;diverse functional groups;streamlined build process;software engineers;software group","","1","3","3","","12 Jul 2012","","","IEEE","IEEE Conferences"
"Comparing decision aids for technology transfers","T. H. Murray",NA,"International Conference on Information-Decision-Action Systems in Complex Organisations, 1992.","6 Aug 2002","1992","","","100","104","Proponents of various decision aid systems loudly proclaim the merits of 'their' system over all competition, especially 'brand X,' and justify their own process because it does a 'better job of decision making' than that done by competing products. In order to compare such decision aids independently, a systematic process was conceived, designed, constructed, tested and implemented. The purpose was to use automation to standardize a decision process among diverse adversaries in a dynamic, complex, technological environment. The process first step structured the factors needed to arrive at an equitable decision on technology transfer from domestic to foreign ownership, control, or influence. The factors were identified by participants in the decentralized decision process. Using group problem solving techniques, the most important factors were identified and ranked. Factor weights were determined with automated aids. Four decision processes were evaluated to determine their accuracy in arriving at a decision dealing with proposed technology transfers. The author deals with the process of identifying the factors and testing the decision aids.<<ETX>></ETX>","","0-85296-541-9","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=140394","","Decision support systems;Government data processing;Software testing;Technology transfer","decision support systems;government data processing;program testing;software selection;technology transfer","technology transfers;decision aid systems;decision making;competing products;systematic process;decision process;diverse adversaries;technological environment;equitable decision;foreign ownership;decentralized decision process;group problem solving techniques;automated aids","","1","","","","6 Aug 2002","","","IET","IET Conferences"
"Genetic Improvement of Software: A Comprehensive Survey","J. Petke; S. O. Haraldsson; M. Harman; W. B. Langdon; D. R. White; J. R. Woodward","University College London, London, U.K.; University of Stirling, Stirling, U.K.; University College London, London, U.K.; University College London, London, U.K.; University College London, London, U.K.; University of Stirling, Stirling, U.K.","IEEE Transactions on Evolutionary Computation","28 May 2018","2018","22","3","415","432","Genetic improvement (GI) uses automated search to find improved versions of existing software. We present a comprehensive survey of this nascent field of research with a focus on the core papers in the area published between 1995 and 2015. We identified core publications including empirical studies, 96% of which use evolutionary algorithms (genetic programming in particular). Although we can trace the foundations of GI back to the origins of computer science itself, our analysis reveals a significant upsurge in activity since 2012. GI has resulted in dramatic performance improvements for a diverse set of properties such as execution time, energy and memory consumption, as well as results for fixing and extending existing system functionality. Moreover, we present examples of research work that lies on the boundary between GI and other areas, such as program transformation, approximate computing, and software repair, with the intention of encouraging further exchange of ideas between researchers in these fields.","1941-0026","","10.1109/TEVC.2017.2693219","EPSRC Project(grant numbers:DAASE EP/J017515/1); EPSRC Project(grant numbers:GISMOE EP/I033688/1); DAASE Project(grant numbers:EP/J017515/1); FAIME Project(grant numbers:EP/N002849/1); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7911210","Genetic improvement (GI);survey","Genetic programming;Software;Software testing;History;Software engineering","genetic algorithms;software engineering;software maintenance","core publications;evolutionary algorithms;genetic programming;GI;computer science;dramatic performance improvements;software repair;system functionality;Software genetic improvement","","82","","219","CCBY","25 Apr 2017","","","IEEE","IEEE Journals"
"An efficient algorithm for real-time network reconfiguration in large scale unbalanced distribution systems","Jin-Cheng Wang; Hsiao-Dong Chiang; G. R. Darling","Sch. of Electr. Eng., Cornell Univ., Ithaca, NY, USA; Sch. of Electr. Eng., Cornell Univ., Ithaca, NY, USA; NA","IEEE Transactions on Power Systems","6 Aug 2002","1996","11","1","511","517","Real-time applications demand fast computation, this paper proposes an efficient algorithm for real-time network reconfiguration on large unbalanced distribution networks. A novel formulation of the network reconfiguration to achieve loss minimization and load balancing is given. To reduce computational requirements for the solution algorithm, well justified power flow and loss reduction formulas in terms of the on/off status of network switches are proposed for efficient system updating. The algorithm relies only on a few full power flow studies based on system states attained by explicit expressions using backward-forward sweeps for efficient computation of the system's states at the critical system operating points. The solution algorithm runs in an amount of time linearly proportional to the number of the switches and the number of sectionalizing switches in the system. The solution algorithm has been implemented into a software package and tested on unbalanced distribution systems including a system with 292-buses, 76-laterals, 7 transformers, 45 switches and 255 line sections under diverse system conditions.","1558-0679","","10.1109/59.486141","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=486141","","Switches;Computer networks;Computer applications;Distributed computing;Load management;Load flow;Load flow analysis;Software algorithms;Software packages;Software testing","distribution networks;power system control;real-time systems;transmission network calculations;losses;load flow;power system analysis computing","real-time network reconfiguration;large scale unbalanced distribution systems;algorithm;loss minimization;load balancing;power flow;loss reduction formulas;on/off status;network switches;backward-forward sweeps;critical system operating points;software package;nonlinear integer programming","","70","","14","IEEE","6 Aug 2002","","","IEEE","IEEE Journals"
"An exploration of software faults and failure behaviour in a large population of programs","M. J. P. van der Meulen; P. G. Bishop; R. Villa","Centre for Software Reliability, City Univ., London, UK; Centre for Software Reliability, City Univ., London, UK; NA","15th International Symposium on Software Reliability Engineering","24 Jan 2005","2004","","","101","112","A large part of software engineering research suffers from a major problem-there are insufficient data to test software hypotheses, or to estimate parameters in models. To obtain statistically significant results, a large set of programs is needed, each set comprising many programs built to the same specification. We have gained access to such a large body of programs (written in C, C++, Java or Pascal) and in this paper we present the results of an exploratory analysis of around 29,000 C programs written to a common specification. The objectives of this study were to characterise the types of fault that are present in these programs; to characterise how programs are debugged during development; and to assess the effectiveness of diverse programming. The findings are discussed, together with the potential limitations on the realism of the findings.","1071-9458","0-7695-2215-7","10.1109/ISSRE.2004.7","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1383110","","Software reliability;Software engineering;Software testing;Java;Reliability engineering;Mathematics;Parameter estimation;Mathematical model;Statistical analysis;Algorithm design and analysis","software fault tolerance;program testing","software faults;failure behaviour;software engineering;program specification","","15","","8","","24 Jan 2005","","","IEEE","IEEE Conferences"
"Enhancing the semiconductor fab layout process","J. J. Plata","Texas Instrum. Inc., Dallas, TX, USA","Proceedings of 1994 IEEE/SEMI Advanced Semiconductor Manufacturing Conference and Workshop (ASMC)","6 Aug 2002","1994","","","11","15","With the dramatically increasing cost of building semiconductor facilities, all aspects of factory design and operation must be evaluated to search for cost reduction opportunities. Enhancing the factory layout process using advanced software tools may be one of those opportunities. SEMATECH's future factory design group is evaluating new software products that attempt to increase the productivity and effectiveness of the layout task and thus increase the value of the factory layout. This article focuses on Texas Instruments' findings as a part of SEMATECH's software beta test. This paper explores new semiconductor fab layout software technology and demonstrates the layout productivity gains and value added to the final layout when it was exercised by Texas Instruments newest 200 mm fab. Additionally, semiconductor layout methodology, metrics, and inherit difficulties are discussed. Emphasis is placed on the software's ability to integrate quantitative and qualitative inputs into the layout process, and provide real time feedback to diverse groups of layout users, dramatically increasing the involvement of the customer and thus the value of the final layout, while decreasing the cycle time in generating an optimized layout. Reference is made to the potential added value to the actual manufacturing operation and process. Extendibility of the layout drawings to aid in the operation and future planning of the fab are discussed.","","0-7803-2053-0","10.1109/ASMC.1994.588156","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=588156","","Production facilities;Costs;Productivity;Instruments;Buildings;Software tools;Software testing;Software quality;Feedback;Manufacturing processes","integrated circuit manufacture","semiconductor fab layout;semiconductor facilities;factory design;cost;software tools;SEMATECH;productivity;Texas Instruments;beta test;real time feedback;customers;manufacturing;cycle time","","3","","1","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Investigation on Academic Research Software Development","D. Liu; S. Xu; M. Brockmeyer","Dept. of Comput. Sci., Wayne State Univ., Detroit, MI; Dept. of Comput. Sci., Algoma Univ., Sault Ste. Marie, ON; Dept. of Comput. Sci., Wayne State Univ., Detroit, MI","2008 International Conference on Computer Science and Software Engineering","22 Dec 2008","2008","2","","626","630","Studying software development processes can help us to understand the software development models which in turn can help programmers to build high-quality software products. Software is not all homogeneous, and industrial software and software developed in academia seem to be different. In order to understand the characteristics of academic software development, we surveyed ten student programmers in five research fields and conducted content analysis. We found that although academic software is highly diverse, the development processes are fairly similar to some extent. We also found some common weaknesses, such as lacking of code management and documentation, and proposed some suggestions to improve the process.","","978-0-7695-3336-0","10.1109/CSSE.2008.1400","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4722129","Software Development;Academic Research;Interviewing;Content Analysis","Computer science;Software engineering;Programming profession;Open source software;Computer industry;Education;Documentation;Software testing;Feedback;Industrial training","computer science education;project management;software engineering","academic research software project development process;high-quality software product;industrial software;code management;code documentation","","3","","17","","22 Dec 2008","","","IEEE","IEEE Conferences"
"Model-based testing in practice","S. R. Dalal; A. Jain; N. Karunanithi; J. M. Leaton; C. M. Lott; G. C. Patton; B. M. Horowitz","Bellcore, Morristown, NJ, USA; NA; NA; NA; NA; NA; NA","Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002)","6 Aug 2002","1999","","","285","294","Model-based testing is a new and evolving technique for generating a suite of test cases from requirements. Testers using this approach concentrate on a data model and generation infrastructure instead of hand-crafting individual tests. Several relatively small studies have demonstrated how combinatorial test generation techniques allow testers to achieve broad coverage of the input domain with a small number of tests. We have conducted several relatively large projects in which we applied these techniques to systems with millions of lines of code. Given the complexity of testing, the model-based testing approach was used in conjunction with test automation harnesses. Since no large empirical study has been conducted to measure efficacy of this new approach, we report on our experience with developing tools and methods in support of model-based testing. The four case studies presented here offer details and results of applying combinatorial test-generation techniques on a large scale to diverse applications. Based on the four projects, we offer our insights into what works in practice and our thoughts about obstacles to transferring this technology into testing organizations.","0270-5257","1-58113-074-0","10.1145/302405.302640","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=841019","","Automatic testing;System testing;Data models;Software testing;Contracts;Costs;Large-scale systems;Telecommunications;Maintenance;Permission","program testing;automatic testing","model-based testing;test case suite generation;requirements;data model;generation infrastructure;combinatorial test generation techniques;test automation harnesses","","145","10","12","","6 Aug 2002","","","IEEE","IEEE Conferences"
"A Unified Test Framework for Continuous Integration Testing of SOA Solutions","H. Liu; Z. Li; J. Zhu; H. Tan; H. Huang","Res. Lab., IBM China, Beijing, China; Res. Lab., IBM China, Beijing, China; Res. Lab., IBM China, Beijing, China; Res. Lab., IBM China, Beijing, China; Res. Lab., IBM China, Beijing, China","2009 IEEE International Conference on Web Services","31 Jul 2009","2009","","","880","887","The quality of service oriented architecture (SOA) solutions is becoming more and more important along with the increasing adoption of SOA. Continuous integration testing (CIT) is an effective technology to discover bugs as early as possible. However, the diversity of programming models used in an SOA solution and the distribution nature of an SOA solution pose new challenges for CIT. Existing testing frameworks more focus on the integration testing of applications developed by a single programming model. In this paper, a unified test framework is proposed to overcome these limitations and enable the CIT of SOA solutions across the whole development lifecycle. This framework is designed following the model driven architecture (MDA). The information of an executable test case is separated into two layers: the behavior layer and the configuration layer. The behavior layer represents the test logic of a test case and is platform independent. The configuration layer contains the platform specific information and is configurable for different programming models. An extensible and pluggable test execution engine is specially designed to execute the integration test cases. A global test case identifier instrumentation approach is used to merge the distributed test case execution traces captured by ITCAM - an IBM integrated management tool. A verification approach supporting Boolean expression and back-end service interaction verification is proposed to verify the test execution result. Initial experiments have shown the effectiveness of this unified test framework.","","978-0-7695-3709-2","10.1109/ICWS.2009.28","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5175909","continuous integration testing;service oriented architecture","Semiconductor optical amplifiers;Service oriented architecture;Computer bugs;Logic testing;Web services;Life testing;Logic programming;Engines;Instruments;Software testing","program debugging;program testing;program verification;software architecture;software quality;software tools","SOA solutions;service oriented architecture;unified test framework;continuous integration testing;bugs discovery;model driven architecture;distributed test case execution traces;IBM integrated management tool;ITCAM;Boolean expression;back-end service interaction verification","","3","","12","","31 Jul 2009","","","IEEE","IEEE Conferences"
"Studying the Characteristics of a ""Good"" GUI Test Suite","Q. Xie; A. M. Memon","University of Maryland, College Park, MD; University of Maryland, College Park, MD","2006 17th International Symposium on Software Reliability Engineering","11 Dec 2006","2006","","","159","168","The widespread deployment of graphical-user interfaces (GUIs) has increased the overall complexity of testing. A GUI test designer needs to perform the daunting task of adequately testing the GUI, which typically has very large input interaction spaces, while considering tradeoffs between GUI test suite characteristics such as the number of test cases (each modeled as a sequence of events), their lengths, and the event composition of each test case. There are no published empirical studies on GUI testing that a GUI test designer may reference to make decisions about these characteristics. Consequently, in practice, very few GUI testers know how to design their test suites. This paper takes the first step towards assisting in GUI test design by presenting an empirical study that evaluates the effect of these characteristics on testing cost and fault detection effectiveness. The results show that two factors significantly effect the fault-detection effectiveness of a test suite: (1) the diversity of states in which an event executes and (2) the event coverage of the suite. Test designers need to improve the diversity of states in which each event executes by developing a large number of short test cases to detect the majority of ""shallow"" faults, which are artifacts of modern GUI design. Additional resources should be used to develop a small number of long test cases to detect a small number of ""deep"" faults","2332-6549","0-7695-2684-5","10.1109/ISSRE.2006.45","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4021981","","Graphical user interfaces;Software testing;Fault detection;Costs;Application software;Packaging;Computer science;Educational institutions;Performance evaluation;Event detection","fault diagnosis;graphical user interfaces;program debugging;program testing","graphical user interface testing;fault detection","","23","","17","","11 Dec 2006","","","IEEE","IEEE Conferences"
"Weighting Influence of User Behavior in Software Validation","A. Bertolino; E. Cartaxo; P. Machado; E. Marchetti","ISTI-CNR, Pisa; NA; NA; NA","2008 19th International Workshop on Database and Expert Systems Applications","12 Sep 2008","2008","","","495","500","Validation is an essential part of software development, and testing is a practical and widely used approach. The emerging methodology is model-based testing, in which test cases are derived from a model of software behaviour. In this paper we claim that also user behaviour should be taken into account for test planning purposes. We introduce a pragmatic approach called WSA, which derives the test cases from a state-based model, while also accounting for weights that consider relevance wrt user behaviour.","2378-3915","978-0-7695-3299-8","10.1109/DEXA.2008.75","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4624765","usability;value based testing;weighted Similarity Approach","Testing;Software;Planning;Software engineering;Programming;Usability;Proposals","human factors;program testing;program verification","software validation;software development;model-based software testing;user behaviour;software behaviour;test planning;state-based model","","1","","11","","12 Sep 2008","","","IEEE","IEEE Conferences"
"The usage of contextual information to develop data test vectors","I. Stefan; L. Miclea","Automation Department, Technical University of Cluj-Napoca, Romania; Automation Department, Technical University of Cluj-Napoca, Romania","Proceedings of 2012 IEEE International Conference on Automation, Quality and Testing, Robotics","12 Jul 2012","2012","","","302","306","In real-time systems/hybrid systems the quality of the controlling software represents one of the major aspects. Many of these systems allow interaction with the users by a graphical interface having inputs to select or type in. Even where the software does not control an industrial plant, machinery, a car or robot, it is possible to control financial transactions, personal details or electronic patient information. Large amount of financial, time, human resources are allocated toward testing the software. The paper proposes a method to use contextual data from the GUI of applications to create test cases for functional testing. The objective is to enhance the automation in testing by reducing the time allocated to generate the controllable input values. The DOM architecture for Web and .NET resource file for Windows OS applications will be considered as starting points in the development of the method. The discussion remains if the tester inspection is needed in order to choose between the diversity of test cases automatically generated or the tests will be all executed without exception. It will be taken in consideration the required system resources to repeatedly run all the tests in regression testing. In case of applying this method to several user interfaces, by saving the properties extracted and the generated test cases and results, statistical data regarding effective templates to use would emerge.","","978-1-4673-0704-8","10.1109/AQTR.2012.6237721","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6237721","test vector;code combination;genetic combination;automated test vector generator","Testing;Vectors;Genetic algorithms;Software;HTML;Genetics;Automation","automatic test software;graphical user interfaces;human resource management;Internet;program compilers;program testing;real-time systems;regression analysis;resource allocation;software quality","contextual information usage;data test vector development;real-time systems;hybrid systems;controlling software quality;financial transaction control;personal details;electronic patient information;human resource allocation;financial resource allocation;time allocation;software testing;GUI;test case creation;functional testing;controllable input value generation;DOM architecture;Web resource file;.NET resource file;Windows OS applications;automatic test case generation;regression testing;graphical user interfaces;statistical data","","","","11","","12 Jul 2012","","","IEEE","IEEE Conferences"
"VulDetector: Detecting Vulnerabilities Using Weighted Feature Graph Comparison","L. Cui; Z. Hao; Y. Jiao; H. Fei; X. Yun","Chinese Academy of Science, Institute of Information Engineering, Beijing, China; Chinese Academy of Science, Institute of Information Engineering, Beijing, China; Chinese Academy of Science, Institute of Information Engineering, Beijing, China; Chinese Academy of Science, Institute of Information Engineering, Beijing, China; Chinese Academy of Science, Institute of Information Engineering, Beijing, China","IEEE Transactions on Information Forensics and Security","27 Jan 2021","2021","16","","2004","2017","Code similarity is one promising approach to detect vulnerabilities hidden in software programs. However, due to the complexity and diversity of source code, current methods suffer low accuracy, high false negative and poor performance, especially in analyzing a large program. In this paper, we propose to tackle these problems by presenting VulDetector, a static-analysis tool to detect C/C++ vulnerabilities based on graph comparison at the granularity of function. At the key of VulDetector is a weighted feature graph (WFG) model which characterizes function with a small yet semantically rich graph. It first pinpoints vulnerability-sensitive keywords to slice the control flow graph of a function, thereby reducing the graph size without compromising security-related semantics. Then, each sliced subgraph is characterized using WFG, which provides both syntactic and semantic features in varying degrees of security. As for graph comparison, we take full usage of vulnerability graph and patch graph to improve accuracy. In addition, we propose two optimization methods based on analysis of vulnerabilities. We have implemented VulDetector to automatically detect vulnerabilities in software programs with known vulnerabilities. The experimental results prove the effectiveness and efficiency of VulDetector.","1556-6021","","10.1109/TIFS.2020.3047756","National Natural Science Foundation of China(grant numbers:61972392,62072453); Youth Innovation Promotion Association of the Chinese Academy of Sciences(grant numbers:2020164); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9309254","Vulnerability detection;code similarity;weighted feature graph","Syntactics;Software;Testing;Semantics;Security;Optimization methods;Lenses","flow graphs;program diagnostics;security of data","vulnerability detection;patch graph;vulnerability graph;semantic features;syntactic features;security-related semantics;control flow graph;vulnerability-sensitive keywords;semantically rich graph;WFG;weighted feature graph model;static-analysis tool;source code;software programs;code similarity;weighted feature graph comparison;VulDetector","","","","53","IEEE","28 Dec 2020","","","IEEE","IEEE Journals"
"Computation of Mixed Strategy Non-dominated Nash Equilibria in Game Theory","C. A. O. Soares; L. S. Batista; F. Campelo; F. G. Guimarães","Grad. Program in Electr. Eng., Univ. Fed. de Minas Gerais Belo Horizonte, Belo Horizonte, Brazil; Dept. of Electr. Eng., Univ. Fed. de Minas Gerais, Belo Horizonte, Brazil; Dept. of Electr. Eng., Univ. Fed. de Minas Gerais, Belo Horizonte, Brazil; Dept. of Electr. Eng., Univ. Fed. de Minas Gerais, Belo Horizonte, Brazil","2013 BRICS Congress on Computational Intelligence and 11th Brazilian Congress on Computational Intelligence","17 Jul 2014","2013","","","242","247","Finding Nash equilibria has been one of the early objectives of research in game theory, and still represents a challenge to this day. We introduce a multiobjective formulation for computing Pareto-optimal sets of mixed Nash equilibria in normal form games. Computing these sets can be notably useful in decision making, because it focuses the analysis on solutions with greater outcome and hence more stable and desirable ones. While the formulation is suitable for any multiobjective optimization algorithm, we employ a method known as the cone-epsilon MOEA, due to its good convergence and diversity characteristics when solving multiobjective optimization problems. The adequacy of the proposed formulation is tested on most normal form games provided by the GAMBIT software test suite. The results show that the cone-epsilon MOEA working on the proposed formulation correctly finds the Pareto-optimal Nash equilibra in most games.","2377-0597","978-1-4799-3194-1","10.1109/BRICS-CCI-CBIC.2013.47","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6855856","Pareto;Nash;multiobjective;evolutionary algorithm","Games;Game theory;Silicon;Sociology;Statistics;Optimization;Vectors","game theory;Pareto optimisation","nondominated Nash equilibria;game theory;multiobjective formulation;Pareto-optimal sets;multiobjective optimization algorithm;cone-epsilon MOEA;diversity characteristic;GAMBIT software test suite","","","","11","","17 Jul 2014","","","IEEE","IEEE Conferences"
"Semantic Annotation and Retrieval Approach for Historical Testcases","J. Hu; Z. Chen; H. Cai; X. Liu; X. Fei; L. Jiang","Sch. of Software, Shanghai Jiao Tong Univ., Shanghai, China; UM-SJTU Joint Inst., Shanghai Jiao Tong Univ., Shanghai, China; Sch. of Software, Shanghai Jiao Tong Univ., Shanghai, China; Jiangsu Hoperun Software Co., Ltd., China; Fac. of Eng. & Comput., Coventry Univ., Coventry, UK; Sch. of Software, Shanghai Jiao Tong Univ., Shanghai, China","2017 IEEE 14th International Conference on e-Business Engineering (ICEBE)","23 Nov 2017","2017","","","54","61","Reusing Historical testcases play a crucial role in ensuring software testing quality. However, the diversity of historical testcases limits their potential uses. As a result, large amounts of human effort is required to write testcases for complex functional testings. In this paper, an effective framework is proposed to integrate and retrieve historical testcase bases with semantic analysis technologies. Firstly, semantic similarity is calculated to integrate the metadata of the inputted semi-structured testcases. Then, testcases are clustered by using similarity measures to eliminate heterogeneity existed in the contents of the testcases. The clustering results are added to the testcases as semantic annotations for the later semantic query. Using the semantic query interface, testers can easily obtain useful testcases without ambiguity. Finally, a case study demonstrates the effectiveness and scalability of this method for testcases retrieval for bank information systems testing.","","978-1-5386-1412-9","10.1109/ICEBE.2017.18","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8119130","testcases reuse;semantic query;information retrieval","Semantics;Testing;Indexes;Software;Metadata;Business","information systems;meta data;ontologies (artificial intelligence);pattern clustering;program testing;query processing;software quality","historical testcases;historical testcase bases;semantic analysis technologies;semantic similarity;semantic query interface;software testing quality.;semantic annotation","","","","15","","23 Nov 2017","","","IEEE","IEEE Conferences"
"Testing Your Question Answering Software via Asking Recursively","S. Chen; S. Jin; X. Xie","Wuhan University,School of Computer Science,China; Wuhan University,School of Computer Science,China; Wuhan University,School of Computer Science,China","2021 36th IEEE/ACM International Conference on Automated Software Engineering (ASE)","20 Jan 2022","2021","","","104","116","Question Answering (QA) is an attractive and challenging area in NLP community. There are diverse algorithms being proposed and various benchmark datasets with different topics and task formats being constructed. QA software has also been widely used in daily human life now. However, current QA software is mainly tested in a reference-based paradigm, in which the expected outputs (labels) of test cases need to be annotated with much human effort before testing. As a result, neither the just-in-time test during usage nor the extensible test on massive unlabeled real-life data is feasible, which keeps the current testing of QA software from being flexible and sufficient. In this paper, we propose a method, qaAskeR, with three novel Metamorphic Relations for testing QA software. qaAskeR does not require the annotated labels but tests QA software by checking its behaviors on multiple recursively asked questions that are related to the same knowledge. Experimental results show that qaAskeR can reveal violations at over 80% of valid cases without using any preannotated labels. Diverse answering issues, especially the limited generalization on question types across datasets, are revealed on a state-of-the-art QA algorithm.","2643-1572","978-1-6654-0337-5","10.1109/ASE51524.2021.9678670","National Natural Science Foundation of China; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9678670","question answering;testing and validation;recursive metamorphic testing;natural language processing","Software algorithms;Benchmark testing;Knowledge discovery;Software;Task analysis;Software engineering","learning (artificial intelligence);natural language processing;program testing;question answering (information retrieval);search engines;text analysis","NLP community;benchmark datasets;daily human life;reference-based paradigm;expected outputs;just-in-time test;extensible test;real-life data;qaAskeR;annotated labels but tests;question types;question answering software;QA software testing;metamorphic relations;preannotated labels","","","","58","IEEE","20 Jan 2022","","","IEEE","IEEE Conferences"
"Staffing Level and Cost Analyses for Software Debugging Activities Through Rate-Based Simulation Approaches","C. Lin; C. Huang","Dept. of Comput. Sci., Nat. Tsing Hua Univ., Hsinchu, Taiwan; Dept. of Comput. Sci., Nat. Tsing Hua Univ., Hsinchu, Taiwan","IEEE Transactions on Reliability","1 Dec 2009","2009","58","4","711","724","Research in the field of software reliability, dedicated to the analysis of software failure processes, is quite diverse. In recent years, several attractive rate-based simulation approaches have been proposed. Thus far, it appears that most existing simulation approaches do not take into account the number of available debuggers (or developers). In practice, the number of debuggers will be carefully controlled. If all debuggers are busy, they may not address newly detected faults for some time. Furthermore, practical experience shows that fault-removal time is not negligible, and the number of removed faults generally lags behind the total number of detected faults, because fault detection activities continue as faults are being removed. Given these facts, we apply the queueing theory to describe and explain possible debugging behavior during software development. Two simulation procedures are developed based on G/G/infin, and G/G/m queueing models, respectively. The proposed methods will be illustrated using real software failure data. The analysis conducted through the proposed framework can help project managers assess the appropriate staffing level for the debugging team from the standpoint of performance, and cost-effectiveness.","1558-1721","","10.1109/TR.2009.2019669","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4967914","Fault correction;non-homogeneous Poisson process (NHPP);software reliability growth model (SRGM);software testing","Costs;Software debugging;Analytical models;Fault detection;Software reliability;Failure analysis;Queueing analysis;Programming;Data analysis;Performance analysis","program testing;queueing theory;software development management;software reliability","software debugging activity;rate based simulation approach;cost analysis;software reliability;software failure process;fault removal time;fault detection activity;queueing theory;software development;G/G/infin queueing model;G/G/m queueing model;software failure data","","12","1","37","IEEE","26 May 2009","","","IEEE","IEEE Journals"
"Search-Based Energy Testing of Android","R. Jabbarvand; J. -W. Lin; S. Malek","University of California, Irvine; University of California, Irvine; University of California, Irvine","2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE)","26 Aug 2019","2019","","","1119","1130","The utility of a smartphone is limited by its battery capacity and the ability of its hardware and software to efficiently use the device's battery. To properly characterize the energy consumption of an app and identify energy defects, it is critical that apps are properly tested, i.e., analyzed dynamically to assess the app's energy properties. However, currently there is a lack of testing tools for evaluating the energy properties of apps. We present COBWEB, a search-based energy testing technique for Android. By leveraging a set of novel models, representing both the functional behavior of an app as well as the contextual conditions affecting the app's energy behavior, COBWEB generates a test suite that can effectively find energy defects. Our experimental results using real-world apps demonstrate not only its ability to effectively and efficiently test energy behavior of apps, but also its superiority over prior techniques by finding a wider and more diverse set of energy defects.","1558-1225","978-1-7281-0869-8","10.1109/ICSE.2019.00115","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812097","Energy Testing;Android;Software Testing","Testing;Hardware;Global Positioning System;Graphical user interfaces;Smart phones;Receivers;Batteries","Android (operating system);mobile computing;program testing;search problems;smart phones","battery capacity;energy consumption;energy defects;energy properties;search-based energy testing technique;test suite;energy behavior;Android;COBWEB","","10","","69","","26 Aug 2019","","","IEEE","IEEE Conferences"
"A Web Service Test Generator","P. Vanderveen; M. Janzen; A. F. Tappenden","Dept. of Comput. Sci., King's Univ. Edmonton, Edmonton, AB, Canada; Dept. of Comput. Sci., King's Univ. Edmonton, Edmonton, AB, Canada; Dept. of Comput. Sci., King's Univ. Edmonton, Edmonton, AB, Canada","2014 IEEE International Conference on Software Maintenance and Evolution","6 Dec 2014","2014","","","516","520","An automated process for generating test inputs for web services from a WSDL is presented. A grammatical representation of the web service is extracted from the WSDL and used to produce test cases. A context-free grammar (CFG) is generated from the XSD that is stored in the WSDL. The CFG is provided as input into a constraint-satisfaction problem solver to automatically generate a diverse set of structurally correct XML documents. Testing data is then inserted into the XML templates in accordance with any constraints specified in the XSD. Web service-specific testing can be performed with the inclusion of external datasets and service-specific configurations.","1063-6773","978-1-4799-6146-7","10.1109/ICSME.2014.85","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6976129","Software Testing;Web Services;Web Service testing;WSDL;XML Generation;XSD;XML","XML;Grammar;Generators;Testing;Web services;Finite element analysis;Manuals","context-free grammars;program testing;Web services;XML","Web service test generator;WSDL;grammatical representation;context-free grammar;CFG;XSD;constraint-satisfaction problem;XML documents;testing data;XML templates;Web service-specific testing","","3","","19","","6 Dec 2014","","","IEEE","IEEE Conferences"
"A heterogeneous solution for improving the return on investment of requirements traceability","J. Cleland-Huang; G. Zemont; W. Lukasik","Sch. of Comput. Sci., Telecommun., & Inf. Syst., DePaul Univ., Chicago, IL, USA; Sch. of Comput. Sci., Telecommun., & Inf. Syst., DePaul Univ., Chicago, IL, USA; Sch. of Comput. Sci., Telecommun., & Inf. Syst., DePaul Univ., Chicago, IL, USA","Proceedings. 12th IEEE International Requirements Engineering Conference, 2004.","20 Sep 2004","2004","","","230","239","This work describes a best-of-breed approach to traceability, in which the return-on-investment of the requirements traceability effort is maximized through the strategic deployment of a heterogeneous set of traceability techniques. This contrasts with typical traceability practices that tend to utilize a single technique such as a matrix or tool embedded into a requirements management package even though it may not provide the optimal solution for the traceability needs of a diverse set of requirements. The proposed solution, named TraCS (traceability for complex systems), defines project level trace strategies for categories of requirements and establishes links strategically in order to optimize returns of the traceability effort and minimize the risk inherent to software evolution. The paper provides a rationale for heterogeneous traceability, describes an extensible traceability framework, and then defines the process for establishing project level trace strategies. It concludes with an example drawn from a system to control chemical reactions at a catalyst plant.","1090-705X","0-7695-2174-6","10.1109/ICRE.2004.1335680","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1335680","","Investments;Packaging;Costs;Information retrieval;Computer science;Information systems;Control systems;Chemicals;Software engineering;Software testing","systems analysis;large-scale systems;risk management;investment","return-on-investment;requirements traceability;best-of-breed approach;traceability practices;requirements management package;TraCS;complex system traceability;software evolution","","25","1","31","","20 Sep 2004","","","IEEE","IEEE Conferences"
"A Comparative Study of VoIP Standards with Asterisk","P. Montoro; E. Casilari","Dipt. Tecnol. Electron., Univ. of Malaga, Malaga, Spain; Dipt. Tecnol. Electron., Univ. of Malaga, Malaga, Spain","2009 Fourth International Conference on Digital Telecommunications","18 Aug 2009","2009","","","1","6","Since the apparition of Voice over IP (VoIP), many standards (mainly signaling protocols and codecs) have arisen with the aim of enabling voice calls through data networks. This paper describes a comparative study to evaluate the performance of a representative set of these standards when transmitting voice streams in a packet network. Asterisk PBX software is employed to define a testbed that allows to monitor diverse performance parameters in actual VoIP connections after the call establishment phase. Performed tests include the use of SIP and IAX (with and without trunking) signaling protocols as well as four different codecs. The obtained Results (expressed in terms of processor utilization, memory usage and network bandwidth consumption) show the clear benefits of employing IAX with trunking.","","978-0-7695-3695-8","10.1109/ICDT.2009.8","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5205247","Voice over IP;Asterisk;SIP;trunking","Protocols;Codecs;Internet telephony;Software testing;Bandwidth;Streaming media;Packet switching;Telecommunication standards;Code standards;Software performance","codecs;Internet telephony;protocols","VoIP standards;Voice over IP;voice streams;packet network;asterisk PBX software;trunking","","19","","24","","18 Aug 2009","","","IEEE","IEEE Conferences"
"A Discussion on Experimental Model Validation","S. Leye; J. Himmelspach; A. M. Uhrmacher","Dept. of Comput. Sci., Univ. of Rostock, Rostock; Dept. of Comput. Sci., Univ. of Rostock, Rostock; Dept. of Comput. Sci., Univ. of Rostock, Rostock","2009 11th International Conference on Computer Modelling and Simulation","26 May 2009","2009","","","161","167","Model validation is essential in modeling and simulation. It ldquofinalizesrdquo the modeling process, and provides the base for reliable experiments with the model, and thus to gain trustworthy insights of the system under study. Diverse techniques have been developed addressing different needs and are used during different phases in the modeling and simulation life cycle. Experimental model validation depends on the execution of the model. Thus, the peculiarities of the simulation engine might influence the results of experiments and thus have to be taken into account. Execution also underlies some techniques of software validation which can be adopted for experimental model validation. New approaches apply model checking techniques for trace inspections, and emphasize the importance of an explicit description of requirements. All of this implies new requirements for systems intended to support experimental model validation.","","978-1-4244-3771-9","10.1109/UKSIM.2009.20","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4809756","verification;validation;modeling;simulation","Context modeling;Computational modeling;Computer simulation;Software testing;Programming;Software standards;ISO standards;Computer science;Engines;Inspection","formal specification;program diagnostics;program verification","experimental model validation;modeling process;software validation;model checking technique;program trace inspection;simulation life cycle;formal specification","","15","","39","","26 May 2009","","","IEEE","IEEE Conferences"
"Analytical Study of Agile Methodology in Information Technology Sector","R. Singh; D. Kumar; B. B. Sagar","Amity University Uttar Pradesh,Noida,India; Amity University Uttar Pradesh,Noida,India; Birla Institute of Technology Mesra","2019 4th International Conference on Information Systems and Computer Networks (ISCON)","16 Mar 2020","2019","","","422","426","With increasing demand of agile methodology in software development, almost every software organization is trying to move far from previous methods to adopt agile methodology in software development. In place of being extrapolative, agile somewhat being adaptive and focuses on customer satisfaction. It supports self-organized groups that work for technical excellence to increase agility. But number of team members is an issue that is in turn controlled by team perspective. The technique used in this research focuses on three diverse sized agile groups making software's using the same technologies. Both objective and subjective actions are used and the outcomes are reinforced by a study. The result clearly demonstrates that for better results in agile software development, it is critical to select the right persons to be considered as a good team. This paper focuses on different programming advancement techniques, their benefits and demerits, and how to choose the appropriate strategies for a specific circumstance. In addition it examines agile methodologies with the help of a case study that focuses on the advantages of agile over the conventional methods used in the software industry. This paper introduces a concept namely “Two Way Assessment” an approach to boost the process to make it more effective by identifying and removing the defects.","","978-1-7281-3651-6","10.1109/ISCON47742.2019.9036280","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9036280","Agile;Agile Methodologies;Two-Way Assessment","Software;Testing;Programming;Organizations;Agile software development;Industries;Planning","DP industry;project management;software development management;software prototyping;team working","agile methodology;information technology sector;software organization;agile software development;software industry;two way assessment approach","","3","","20","","16 Mar 2020","","","IEEE","IEEE Conferences"
"Assessing a learning object standard adherence","C. M. Tobar; S. I. de Lima","Pontifical Catholic University of Campinas, Spain; FAI-SRS, Spain","2007 37th Annual Frontiers In Education Conference - Global Engineering: Knowledge Without Borders, Opportunities Without Passports","4 Jan 2008","2007","","","T2D-7","T2D-12","New technology has the potential to relate teachers and students to diverse learning resources, bringing up the paradigm of learning objects. A learning object is any digital or non-digital entity that can be used in education through computing. There are many standards defining how to search, evaluate, acquire, share, and use this kind of resource by instructors, students, and automated software processes. Aiming to explore the learning-object paradigm, it was modeled, built, and tested a learning-object database that is part of a collaborative environment, which supports distance learning of computer programming languages. One of the available standards was adopted, the learning object metadata standard - LOM. In order to build and manipulate the learning-object database, some strategies showed to be necessary and thus they were defined. This paper presents an adherence analysis of the LOM standard, considering the development of a learning object repository. The features about LOM utilization by automatic software processes are targeted and some detected problems have their proposed solutions considered and discussed.","2377-634X","978-1-4244-1083-5","10.1109/FIE.2007.4418177","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4418177","learning objects;learning object repositories;LOM standard;adherence;LOM profile","Collaborative work;Standards development;Proposals;Software standards;Collaboration;Computer aided instruction;Collaborative tools;Logic programming;Collaborative software;Testing","computer aided instruction;computer science education;distance learning;meta data;programming languages","learning-object database;computer programming language distance learning;learning object metadata standard;learning object repository;automatic software processes","","2","","10","","4 Jan 2008","","","IEEE","IEEE Conferences"
"A visual impaired simulator to achieve embedded accessibility designs","K. Votis; T. Oikonomou; P. Korn; D. Tzovaras; S. Likothanassis","Informatics and Telematics Institute, 6th km Charilaou-Thermi Road, Thessaloniki, GR-57001 Greece; Informatics and Telematics Institute, 6th km Charilaou-Thermi Road, Thessaloniki, GR-57001 Greece; Sun Microsystems, Inc., 17 Network Circle, MPK17-101, Menlo Park, CA 94025, USA; Informatics and Telematics Institute, 6th km Charilaou-Thermi Road, Thessaloniki, GR-57001 Greece; Pattern Recognition Laboratory, Computer Engineering and Informatics, University of Patras, Rio, Greece","2009 IEEE International Conference on Intelligent Computing and Intelligent Systems","28 Dec 2009","2009","3","","368","372","The ever increasing of software technologies has brought closer technology to users with visual impaired inabilities. This diversification poses a real challenge to ¿authors¿ (developers and designers) when creating software that has to cope with a myriad of interaction situations, as well as specific directives for ensuring an accessible interaction. Presenting an advanced accessibility simulation tool, ¿authors¿ can obtain a better understanding of the accessibility constraints for visual impaired users within a Java Swing application by simulating each element. The proposed NetBeans-enabled plugin tool will assist them, with a minimal effort, to explore user-centered design and important accessibility issues for their Java Swing implementations.","","978-1-4244-4754-1","10.1109/ICICISYS.2009.5358165","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5358165","Human Computer Interaction;Web Accessibility;Simulation;software design;User-centered design","Java;Application software;Testing;Vision defects;Computational modeling;Web pages;Displays;Computer simulation;Informatics;Software design","digital simulation;handicapped aids;human computer interaction;Java;software tools;user centred design","visual impaired users;Java Swing application;NetBeans enabled plugin tool;accessibility simulation tool;user centered design","","1","","18","","28 Dec 2009","","","IEEE","IEEE Conferences"
"A Novel Component-based Hardware-Software Co-simulation System Based on OR1200","S. He; M. Zhang","Institute of Information and Communication Engineering, Zhejiang University, Hangzhou, 310027, China. jacyhe@zju.edu.cn; Institute of Information and Communication Engineering, Zhejiang University, Hangzhou, 310027, China","2007 International Conference on Mechatronics and Automation","24 Sep 2007","2007","","","3440","3445","The close interactions between hardware and software of trustworthy systems demand co-simulation. Due to their diverse applications and often strict physical constraints, trustworthy systems are increasingly component-based and include only the necessary components for their missions. For this reason, we present a novel component-based approach to hardware-software co-simulation systems using OR1200. In our approach, a component model for trustworthy systems which unifies the concepts of hardware components and software components is defined. In our proposed system, it uses an instruction set simulator (ISS) instead of OR1200 CPU when simulating the SoC system, and makes use of socket, shared memory and programming language interface (PLI) function to communicate and transfer data between processes. The proposed system is illustrated by an application in H.264 decoding system that is practical and effective.","2152-744X","978-1-4244-0827-6","10.1109/ICMA.2007.4304116","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4304116","hardware-software co-simulation;OR1200;SoC;RTL simulator;instruction set simulator","Hardware;Microprocessors;System-on-a-chip;Software performance;Timing;Accuracy;Field programmable gate arrays;Embedded system;Cost function;Software testing","hardware-software codesign;instruction sets;logic simulation;object-oriented methods;shared memory systems;system-on-chip","component-based hardware-software cosimulation system;OR 1200;component model;trustworthy system;hardware components;software components;instruction set simulator;SoC system;socket communication;shared memory;programming language interface;data transfer","","1","","21","","24 Sep 2007","","","IEEE","IEEE Conferences"
"Scheduling algorithms for dedicated nodes in Alchemi grid","Z. Stanfel; G. Martinovic; Z. Hocenski","Faculty of Electrical Engineering, J.J. Strossmayer University of Osijek, Croatia; Faculty of Electrical Engineering, J.J. Strossmayer University of Osijek, Croatia; Faculty of Electrical Engineering, J.J. Strossmayer University of Osijek, Croatia","2008 IEEE International Conference on Systems, Man and Cybernetics","7 Apr 2009","2008","","","2531","2536","Computational grids are useful tools for bringing supercomputing power to users by using idle resources in the network. In the following paper we give a short overview of architecture of the Alchemi grid developed on .Net platform. We created a grid application, which utilizes Rabin-Karp string searching algorithm to test Alchemi grid performances in situation when requests put diverse demands for computing resources to the different grid nodes. Scheduling and dispatching jobs to the computing resources is a critical activity of the grid software. We present a scheduling algorithm which showed performance improvements to the original algorithm shipped with Alchemi grid software.","1062-922X","978-1-4244-2383-5","10.1109/ICSMC.2008.4811676","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4811676","computational grid;dedicated resources scheduling","Scheduling algorithm;Grid computing;Computer networks;Computer architecture;Application software;Testing;Performance evaluation;Processor scheduling;Dispatching;Software algorithms","dispatching;grid computing;scheduling","scheduling algorithms;dedicated nodes;Alchemi grid;supercomputing power;.Net platform;Rabin-Karp string searching algorithm;dispatching jobs;grid software","","","","22","","7 Apr 2009","","","IEEE","IEEE Conferences"
"Continuous Experimentation and A/B Testing: A Mapping Study","R. Ros; P. Runeson","Lund Univ., Lund, Sweden; Lund Univ., Lund, Sweden","2018 IEEE/ACM 4th International Workshop on Rapid Continuous Software Engineering (RCoSE)","30 Aug 2018","2018","","","35","41","Background. Continuous experimentation (CE) has recently emerged as an established industry practice and as a research subject. Our aim is to study the application of CE and A/B testing in various industrial contexts. Objective. We wanted to investigate whether CE is used in different sectors of industry, by how it is reported in academic studies. We also wanted to explore the main topics researched to give an overview of the subject and discuss future research directions. Method. We performed a systematic mapping study of the published literature and included 62 papers, using a combination of database search and snowballing. Results. Most reported software experiments are done online and with software delivered as a service, although varied exemptions exist for e.g., financial software and games. The most frequently researched topics are challenges to conduct experiments and statistical methods for software experiments. Conclusions. The software engineering research on CE is still in its infancy. There are future research opportunities in evaluation research of technical topics and investigations of ethical experimentation. We conclude that the included studies show that A/B testing is applicable to a diversity of software and organisations.","","978-1-4503-5745-6","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8452106","Continuous experimentation;A/B testing;Mapping study","Software;Testing;Software engineering;Databases;Data mining;Industries;Companies","environmental factors;organisational aspects;software engineering;statistical analysis","ethical experimentation;A/B testing;continuous experimentation;CE;established industry practice;industrial contexts;academic studies;future research directions;systematic mapping study;published literature;database search;software experiments;financial software;frequently researched topics;statistical methods;software engineering research","","","","32","","30 Aug 2018","","","IEEE","IEEE Conferences"
"WSBen: A Web Services Discovery and Composition Benchmark","S. -c. Oh; H. Kil; D. Lee; S. R. T. Kumara","Penn State University, PA 16802, USA; Penn State University, PA 16802, USA; Penn State University, PA 16802, USA; Penn State University, PA 16802, USA","2006 IEEE International Conference on Web Services (ICWS'06)","19 Dec 2006","2006","","","239","248","A novel benchmark, WSBen, for testing web services discovery and composition is presented. WSBen includes: (1) A collection of synthetic web services (WSDL) files with diverse characteristics and sizes; (2) Test discovery and composition queries and solutions; and (3) External files for statistical analysis and AI planners. Users can fine-tune the generated WSDL files using various parameters such as skewness or matching type. It is our hope that WSBen will provide useful insights for researchers evaluating the performance of web services discovery and composition algorithms and softwares.","","0-7695-2669-1","10.1109/ICWS.2006.148","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4032033","","Web services;Benchmark testing;Acoustical engineering;Simple object access protocol;Computer industry;Manufacturing industries;Computer aided manufacturing;Computer science;Educational institutions;Software testing","benchmark testing;planning (artificial intelligence);program testing;software performance evaluation;statistical analysis;Web services","Web service discovery benchmark;Web service composition benchmark;synthetic Web services files;test discovery;composition queries;statistical analysis;AI planners","","28","","18","","19 Dec 2006","","","IEEE","IEEE Conferences"
"Probabilistic distribution factors assessment using OptimalPowerPrice Mathematica software, case study: Test 25 buses test power system","O. Pop; D. Paunescu; S. Kilyeni; M. Nemes; A. Kilyeni; C. Barbulescu","""Politehnica"" University, Electrical Power Engineering Department, Timisoara, Romania; ""Politehnica"" University, Department of Mathematics, Timisoara, Romania; ""Politehnica"" University, Electrical Power Engineering Department, Timisoara, Romania; ""Politehnica"" University, Electrical Power Engineering Department, Timisoara, Romania; ""Politehnica"" University, Communication and Foreign Languages Department, Timisoara, Romania; ""Politehnica"" University, Electrical Power Engineering Department, Timisoara, Romania","2009 5th International Symposium on Applied Computational Intelligence and Informatics","26 Jun 2009","2009","","","453","458","Competition within the electric power systems has proven the importance of distribution factors assessment. In addition, load characteristic is unpredictable, leading to a diversity of supply paths. As a result, probabilistic power flow analysis can provide better tools and information for determining the tracing of the generator-consumer path. In this paper, the authors analyze the probabilistic distribution power factors method using the OptimalPowerPrice Mathematica software. Moreover, a correlation between the generalized distribution factors is obtained by means of probabilistic and deterministic methods. The case study in Section IV presents the above approach using a 25 buses test power system.","","978-1-4244-4477-9","10.1109/SACI.2009.5136291","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5136291","distribution factors;probabilistic power flow;optimal power price","Software testing;System testing;Power systems;Computational intelligence;Informatics","mathematics computing;power distribution;power engineering computing","probabilistic distribution factors;OptimalPowerPrice Mathematica software;electric power systems;probabilistic power flow analysis;generator-consumer path","","4","","16","","26 Jun 2009","","","IEEE","IEEE Conferences"
"The distributed generator placement and sizing test suite and analysis tool","A. M. Berry; D. J. Cornforth; G. M. Platt","Secure Grids project in the Energy Technology division of CSIRO, Mayfield West, NSW, 2304, Australia; Secure Grids project in the Energy Technology division of CSIRO, Mayfield West, NSW, 2304, Australia; Secure Grids project in the Energy Technology division of CSIRO, Mayfield West, NSW, 2304, Australia","2009 IEEE/PES Power Systems Conference and Exposition","24 Apr 2009","2009","","","1","9","The concept of integrating small-scale embedded generators into the distribution system has been gaining increasing traction in the research community and with it has come a growing set of contemporary works from the field of artificial intelligence. Thus far however, the studies have failed to explore a diverse set of problems, lack analytical rigour, offer scant comparison between approaches and often fail to use models based on real-world loads or generators. This work describes the new DG PAST SAT software, which is freely available, open to community input and features a rich repository of distribution system resources and a comprehensive test problem suite. When coupled with included analysis utilities, the DG PAST SAT system provides the tools and data for improved research quality in the distribution system planning phase.","","978-1-4244-3810-5","10.1109/PSCE.2009.4839983","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4839983","Artificial Intelligence;Cogeneration;Industrial Power Systems;Interconnected Power Systems;Power Distribution Planning;Power Generation;Software Tools;Testing","Cogeneration;System testing;Power generation;Distributed power generation;Power system planning;Artificial intelligence;Software testing;Industrial power systems;Power system interconnection;Power distribution","distributed power generation;power distribution planning;power engineering computing;power generation planning","distributed generator placement;test suite;analysis tool;small-scale embedded generators;artificial intelligence;DG PAST SAT software;distribution system planning;distributed generator sizing","","2","","39","","24 Apr 2009","","","IEEE","IEEE Conferences"
"Manifold for Machine Learning Assurance","T. Byun; S. Rayadurgam","University of Minnesota,Minneapolis,Minnesota; University of Minnesota,Minneapolis,Minnesota","2020 IEEE/ACM 42nd International Conference on Software Engineering: New Ideas and Emerging Results (ICSE-NIER)","8 Apr 2021","2020","","","97","100","The increasing use of machine-learning (ML) enabled systems in critical tasks fuels the quest for novel verification and validation techniques yet grounded in accepted system assurance principles. In traditional system development, model-based techniques have been widely adopted, where the central premise is that abstract models of the required system provide a sound basis for judging its implementation. We posit an analogous approach for ML systems using an ML technique that extracts from the high-dimensional training data implicitly describing the required system, a low-dimensional underlying structure-a manifold. It is then harnessed for a range of quality assurance tasks such as test adequacy measurement, test input generation, and runtime monitoring of the target ML system. The approach is built on variational autoencoder, an unsupervised method for learning a pair of mutually near-inverse functions between a given high-dimensional dataset and a low-dimensional representation. Preliminary experiments establish that the proposed manifold-based approach, for test adequacy drives diversity in test data, for test generation yields fault-revealing yet realistic test cases, and for run-time monitoring provides an independent means to assess trustability of the target system's output.","","978-1-4503-7126-1","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9397537","machine learning testing;neural networks;variational autoencoder","Manifolds;Software testing;Training data;Machine learning;Test pattern generators;Task analysis;Monitoring","data handling;learning (artificial intelligence);program testing;software quality","machine learning assurance;model-based techniques;ML systems;high-dimensional training data;quality assurance tasks;low-dimensional representation;manifold-based approach","","2","","16","","8 Apr 2021","","","IEEE","IEEE Conferences"
"The development of a focal plane array data system for component-level characterization and real-time mission simulation testing","R. H. Fugerer; D. J. Hervig; L. L. Holt; C. R. Banks; D. I. Jennings; T. J. Worley","Micro Craft Technol./AEDC Oper., Arnold AFB, TN, USA; Micro Craft Technol./AEDC Oper., Arnold AFB, TN, USA; Micro Craft Technol./AEDC Oper., Arnold AFB, TN, USA; Micro Craft Technol./AEDC Oper., Arnold AFB, TN, USA; Micro Craft Technol./AEDC Oper., Arnold AFB, TN, USA; Micro Craft Technol./AEDC Oper., Arnold AFB, TN, USA","ICIASF '95 Record. International Congress on Instrumentation in Aerospace Simulation Facilities","6 Aug 2002","1995","","","2/1","210","This paper will describe the USAF Arnold Engineering Development Center (AEDC) technology efforts that provide signal processing and data system support for infrared (IR) Focal Plane Array (FPA) testing. The requirements for AEDC space sensor testing range from component-level FPA characterization to advanced mission simulation. The technology efforts underway address these requirements by developing hardware and software that meet AEDC's generic needs for FPA testing. Component-level FPA characterization places unique requirements on system fidelity and bandwidth performance. Diversity in sensor types being tested and levels of sensor integration creates the need for versatility in data handling and sensor interfaces. Mission simulation requirements emphasize the need for extended data storage, system throughput, and data display capabilities. A signal processing system will be presented which addresses AEDC's requirements for component-level sensor operation data acquisition, and flexible interface architectures that can be modified quickly to accommodate different sensor interfaces and data formats. The system will also address the need for high-speed storage of very large data arrays during mission simulation testing. Techniques used to verify and validate system operation will also be presented.","","0-7803-2088-3","10.1109/ICIASF.1995.519108","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=519108","","Data systems;Sensor phenomena and characterization;Space technology;Array signal processing;System testing;Sensor systems;Data engineering;Space missions;Hardware;Software testing","focal planes;infrared imaging;aerospace testing;aerospace simulation;data acquisition;calibration","focal plane array data system;component-level characterization;real-time mission simulation testing;USAF Arnold Engineering Development Center;signal processing support;data system support;advanced mission simulation;sensor integration;data handling;system throughput;data acquisition;flexible interface architectures;radiometric calibration;IR imaging","","","","","","6 Aug 2002","","","IEEE","IEEE Conferences"
"Generic adaptation mechanism for the support of flexible service provision in 3G networks","N. Houssos; S. Pantazis; A. Alonistioti","Commun. Networks Lab., Athens Univ., Greece; Commun. Networks Lab., Athens Univ., Greece; Commun. Networks Lab., Athens Univ., Greece","The 13th IEEE International Symposium on Personal, Indoor and Mobile Radio Communications","10 Dec 2002","2002","2","","760","764 vol.2","The forthcoming era of 3rd generation (3G) mobile communications is heralded to change the wireless telecommunication experience dramatically. User expectations are raised to a significantly higher level, towards the demand for terminal-, network- and location-aware provision of ubiquitous, personalized multimedia services. Under this perspective, the need for adaptability of services and systems to largely diverse contexts is clearly identified. Generic, dynamically extensible adaptation mechanisms that are independent of the subject and criteria of adaptation can be a significant step towards this direction. In the present paper, we introduce a mechanism aiming to fulfill these requirements. The proposed adaptation system has been designed, implemented and successfully integrated and tested in a distributed software platform for provision of value added services to 3G mobile users.","","0-7803-7589-0","10.1109/PIMRC.2002.1047324","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1047324","","Intelligent networks;Context-aware services;Communication networks;Laboratories;Informatics;3G mobile communication;Context;Software testing;System testing;Telecommunication services","3G mobile communication;quality of service;multimedia communication","generic adaptation mechanism;flexible service provision;3G networks;3rd generation mobile communications;3G mobile communications;terminal-aware provision;network-aware provision;location-aware provision;ubiquitous multimedia services;personalized multimedia services;adaptation system;value added services","","","","13","","10 Dec 2002","","","IEEE","IEEE Conferences"
"Towards a Latin-Square Search Engine","W. Fang; R. J. Stones; T. G. Marbach; G. Wang; X. Liu","Nankai University, China; Nankai University, China; Nankai University, China; Nankai University, China; Nankai University, China","2019 IEEE Intl Conf on Parallel & Distributed Processing with Applications, Big Data & Cloud Computing, Sustainable Computing & Communications, Social Computing & Networking (ISPA/BDCloud/SocialCom/SustainCom)","26 Mar 2020","2019","","","727","735","Latin squares are combinatorial matrices that are widely used in diverse areas of research such as codes and cryptography, software testing, mathematical research, and experimental designs. All of these fields would benefit from a search engine for Latin squares. One major obstacle to developing a Latin-square search engine is that any Latin square has a large number of equivalent Latin squares, which are contained in multiple equivalence classes, and thus we need an efficient online method for canonical labelling Latin squares. Canonical labelling usually proceeds via the Nauty graph isomorphism software, but this incurs conversion costs. Moreover, the canonical labels are practically random members of their equivalence classes. A second obstacle is how large amounts of searchable Latin-square data may be stored efficiently. In this paper, we design data structures and algorithms suitable for a Latin-square search engine. We use a tree-based data structure for storing large numbers of Latin squares that also enables efficient search capabilities. We design an efficient canonical labelling algorithm (via partial Latin squares, PLSs) which does not require graph conversion, facilitates compression, and the labels are more humanly meaningful. We implement and experiment with a skeletal prototype of the Latin-square search engine. Experimental results confirm that the PLS method is faster than Nauty, and has reduced space requirements.","","978-1-7281-4328-6","10.1109/ISPA-BDCloud-SustainCom-SocialCom48970.2019.00110","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9047384","Latin square;partial Latin square;search engine;storage;information retrieval;mathematical knowledge management","Search engines;Indexes;Labeling;Cryptography;Data structures;Zinc;Software testing","data structures;graph theory;least squares approximations;matrix algebra;program testing;search engines;trees (mathematics)","Latin-square search engine;canonical labelling Latin squares;searchable Latin-square data;partial Latin squares;Nauty graph isomorphism software;tree-based data structure;canonical labelling algorithm","","1","","42","","26 Mar 2020","","","IEEE","IEEE Conferences"
"Maintaining Fine-Grained Code Metadata Regardless of Moving, Copying and Merging","C. R. Prause","Schloss Birlinghoven, Fraunhofer FIT, St. Augustin, Germany","2009 Ninth IEEE International Working Conference on Source Code Analysis and Manipulation","6 Oct 2009","2009","","","109","118","Source code metadata on a file-level granularity is too coarse for certain applications. But fine-grained metadata (e.g. line-by-line authorship) easily gets lost due to changes like merging, moving or copying code. Enabling metadata to survive code evolution provides valuable insights into program source code. This helps developers to understand the sources and opens up opportunities for advanced tools. We present a concept that utilizes different search heuristics to identify probable ancestors of source documents, and pair this with clone detection to locate origins of inserted code. Arbitrary kinds of metadata can then be linked to code sections and be preserved automatically while code evolves. We evaluate our approach using code from the Hydra and FreeCol projects, and sketch prospective applications.","","978-0-7695-3793-1","10.1109/SCAM.2009.20","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5279957","code metadata;code evolution;document similarity;clone detection;code ownership","Merging;Databases;Cloning;Collaboration;History;Nearest neighbor searches;Open source software;Testing","meta data;programming","fine grained code metadata;source code metadata;file-level granularity;fine-grained metadata;code evolution;program source code;search heuristics;source documents;Hydra project;FreeCol project;sketch prospective application","","5","1","23","","6 Oct 2009","","","IEEE","IEEE Conferences"
"Regression Test cases selection using Natural Language Processing","S. Sutar; R. Kumar; S. Pai; S. BR","Siemens Technology & Services Private Ltd.,Bangalore,India; Siemens Technology & Services Private Ltd.,Bangalore,India; Siemens Technology & Services Private Ltd.,Bangalore,India; Siemens Technology & Services Private Ltd.,Bangalore,India","2020 International Conference on Intelligent Engineering and Management (ICIEM)","6 Aug 2020","2020","","","301","305","Regression Testing is one of the important phases to detect the effects of new development or modifications done in the already existing product. As the product grows, the number of regression test cases also increases to manifold. In an agile world, it is very important to extract test cases which are having very high potential to find defects to reduce the overall release cycle. In practice, there are many ways to select test cases based on different criteria. Many of them are based on historical defects in the product as historical defect clusters can be one of defect prone areas because of defect fixes. However, considering the high number of historical defects it becomes difficult to select test cases merely based on defect clusters or any other static techniques. In this paper, we propose our approach to find the high potential regression test cases from the master test suite using Natural Language Processing by selecting a test case based on its intent match with defects. The application developed from this solution has helped us in reducing the regression cycle and enhanced the exploratory productivity for our product. This method also opens the door for new concepts like generating test cases automatically based on its learnings from the product's historical defects, existing test cases, and new feature development.","","978-1-7281-4097-1","10.1109/ICIEM48762.2020.9160225","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9160225","Natural Language Processing;Regression testing;Test efficiency;Text similarity;Test prioritization","Computer bugs;Natural language processing;Software testing;Artificial intelligence;History;Organizations","natural language processing;pattern clustering;program testing;regression analysis","regression test cases selection;natural language processing;regression testing;historical defect clusters;high potential regression test cases;master test suite;regression cycle","","3","","26","","6 Aug 2020","","","IEEE","IEEE Conferences"
"Testing of Component-Based Software: A Metamorphic Testing Methodology","X. Lu; Y. Dong; C. Luo","Sch. of Comput. Sci., Northwestern Polytech. Univ., Xi'an, China; Sch. of Comput. Sci., Northwestern Polytech. Univ., Xi'an, China; Sch. of Comput. Sci., Northwestern Polytech. Univ., Xi'an, China","2010 7th International Conference on Ubiquitous Intelligence & Computing and 7th International Conference on Autonomic & Trusted Computing","13 Dec 2010","2010","","","272","276","In the process of testing Component-based software, Oracle problem comes into existence frequently because of the diversity of component running environment and complicated interactions among components. In this paper, we exploit the features of the component-based software and metamorphic testing (MT) to alleviate the issues. The metamorphic class will invoke relevant component to execute test cases and use their metamorphic relations to defect faults. Test cases for the unit test phase are proposed to generate follow-up test cases for the integration test phase. It has potentials to shift the testing effort from the construction of the integration test sets to the development of metamorphic relations.","","978-1-4244-9043-1","10.1109/UIC-ATC.2010.75","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5667186","Component testing;Metamorphic Testing;Metamorphic Relation","Testing;Exchange rates;Programming;Software engineering;Conferences;Embedded software","object-oriented programming;program testing","component-based software testing;metamorphic testing methodology;Oracle problem;component running environment;complicated interactions;unit test phase","","7","","12","","13 Dec 2010","","","IEEE","IEEE Conferences"
"Identification of Test Cases for Automated Driving Systems Using Bayesian Optimization","B. Gangopadhyay; S. Khastgir; S. Dey; P. Dasgupta; G. Montana; P. Jennings","Indian Institute of Technology Kharagpur,India; University of Warwick,WMG,UK; Indian Institute of Technology Kharagpur,India; Indian Institute of Technology Kharagpur,India; University of Warwick,WMG,UK; University of Warwick,WMG,UK","2019 IEEE Intelligent Transportation Systems Conference (ITSC)","28 Nov 2019","2019","","","1961","1967","With advancements in technology, the automotive industry is experiencing a paradigm shift from assisted driving to highly automated driving. However, autonomous driving systems are highly safety critical in nature and need to be thoroughly tested for a diverse set of conditions before being commercially deployed. Due to the huge complexities involved with Advanced Driver Assistance Systems (ADAS) and Automated Driving Systems (ADS), traditional software testing methods have well-known limitations. They also fail to cover the infinite number of adverse conditions that can occur due to a slight change in the interactions between the environment and the system. Hence, it is important to identify test conditions that push the vehicle under test to breach its safe boundaries. Hazard Based Testing (HBT) methods, inspired by Systems-Theoretic Process Analysis (STPA), identify such parameterized test conditions that can lead to system failure. However, these techniques fall short of discovering the exact parameter values that lead to the failure condition. The presented paper proposes a test case identification technique using Bayesian Optimization. For a given test scenario, the proposed method learns parameter values by observing the system's output. The identified values create test cases that drive the system to violate its safe boundaries. STPA inspired outputs (parameters and pass/fail criteria) are used as inputs to the Bayesian Optimization model. The proposed method was applied to an SAE Level-4 Low Speed Automated Driving (LSAD) system which was modelled in a driving simulator.","","978-1-5386-7024-8","10.1109/ITSC.2019.8917103","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8917103","","Optimization;Testing;Bayes methods;Fuels;Hazards;Heuristic algorithms","Bayes methods;computer simulation;driver information systems;intelligent transportation systems;optimisation;program testing;safety-critical software","autonomous driving systems;Advanced Driver Assistance Systems;systems-theoretic process analysis;system failure;test case identification technique;SAE Level-4 Low Speed Automated Driving system;driving simulator;software testing methods;Bayesian optimization model","","8","","28","","28 Nov 2019","","","IEEE","IEEE Conferences"
"Source Code Vulnerability Detection Based On SAR-GIN","X. Xia; Y. Wang; Y. Yang","Donghua University,Shanghai,China; Donghua University,Shanghai,China; Shanghai Software Testing Center,Shanghai,China","2021 2nd International Conference on Electronics, Communications and Information Technology (CECIT)","1 Apr 2022","2021","","","1144","1149","With the development of the Internet era, software technology is being used more and more commonly, and the detection of vulnerabilities in the corresponding software must be efficient and accurate. However, software vulnerabilities are diverse, and mining vulnerabilities through source code requires a high level of professional experience for developers. Previous vulnerability detection solutions either relied on expert-defined features or used recursive neural networks only for code sequences, making it difficult to extract complex features of vulnerabilities in the traditional code space. In recent years, with the booming development of artificial intelligence technology, some scholars have started to try to combine graph neural networks to extract graph structure information of source code for software vulnerability detection. In this paper, by introducing a method based on Graph Isomorphism Network (GIN) combined with a self-attention aggregation mechanism for vulnerability detection, we achieve superior detection results. By assigning different attention weights to each layer, the self-attention mechanism helps to solve the problem of too smooth node representation and poor comprehensive performance of graph-level output. In this paper, we propose Self Attention Readout Graph Isomorphism Network (SAR-GIN), which efficiently extracts and utilizes global information at all depths by combining GIN with a self-attention mechanism in generating global graph-level features. Meanwhile, the experimental results on CWE-400, CWE-190 datasets, combined with the discrete Fourier transform, show that the modeling approach in this paper achieves superior results compared to other models.","","978-1-6654-3757-8","10.1109/CECIT53797.2021.00202","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9741883","vulnerability detection;graph network;self-attention;Fourier transform","Measurement;Codes;Discrete Fourier transforms;Transforms;Feature extraction;Software;Internet","","","","","","19","IEEE","1 Apr 2022","","","IEEE","IEEE Conferences"
"Information technology preparations for the Pluto encounter from mission operations to science retrieval","G. Griffith; P. Hartman","The Johns Hopkins University, Applied Physics Laboratory (APL), Laurel, MD 20723-6099; The Johns Hopkins University, Applied Physics Laboratory (APL), Laurel, MD 20723-6099","2017 IEEE Aerospace Conference","8 Jun 2017","2017","","","1","6","The Space Exploration Sector (SES) of the Johns Hopkins University Applied Physics Laboratory (APL) currently houses the Mission Operations Center (MOC) for the National Aeronautics and Space Administration (NASA) New Horizons mission. In July 2015, New Horizons encountered Pluto. Prior to this encounter, APL had to prepare for its key role in this historic event by refining a number of its information technology (IT) capabilities. Additional redundancy was built into our infrastructure to ensure diversity. A Remote Mission Operations Center (RMOC) was designed, developed, and installed at the Jet Propulsion Laboratory (JPL) to be used in the event of a catastrophic event on the East Coast that would render both the MOC and the Disaster Recovery Control Center (DRCC) unusable. The Emergency Control Center (ECC) at the Goldstone Complex, which serves as the backup to JPL's Deep Space Operations Center (DSOC), was upgraded to support the New Horizons mission. The amount of web traffic in the weeks prior to, during, and in the weeks following the encounter were expected to far exceed the Laboratory's capabilities for handling such traffic. To reduce the risk of web traffic overloading the APL IT security infrastructure and possibly causing a bottleneck in our intrusion detection and intrusion prevention devices, we elected to move our web services for the Pluto encounter data to Akamai. APL modified Internet service provider contracts to allow for burst traffic and established connectivity for regional diversity. APL took cyber preparedness seriously, performing numerous tabletop exercises to prepare response procedures for various cyber events that would minimize the impact on New Horizon operations. The New Horizons Science Team began placing increased demands on APL six months prior to the encounter, holding numerous Operational Readiness Tests. Each team involved in these tests had specific requirements related to space allocations, network configurations, printers, computers, and peripherals that needed to be settled. Enterprise coordination was very important. The many different APL departments worked together, and the Laboratory was ready to host the event well in advance of the encounter. This paper discusses the basic mission architecture, the plan that was developed to support the Pluto encounter, improvements instituted (the network upgrades, addition of the RMOC and ECC, additional redundancy, etc.), scheduling constraints, resolution of unforeseen problems, and lessons learned.","","978-1-5090-1613-6","10.1109/AERO.2017.7943692","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7943692","","Servers;Printers;Computer architecture;Software;Testing;Buildings;Pluto","aerospace computing;information technology;Pluto;redundancy;security of data","science retrieval;pluto encounter;information technology preparation;space exploration sector;SES;Johns Hopkins university applied physics laboratory;APL;MOC;National Aeronautics and Space Administration;NASA;new horizons mission;remote mission operations center;RMOC;disaster recovery control center;DRCC;emergency control center;ECC;goldstone complex;deep space operations center;DSOC;web traffic risk reduce;APL IT security infrastructure;intrusion prevention;intrusion detection;Internet service provider;space allocations;network configuration;printer;computer;peripheral;enterprise coordination;scheduling constraints","","","","1","","8 Jun 2017","","","IEEE","IEEE Conferences"
"An experience in blending the traditional and Agile methodologies to assist in a small software development project","W. Singhto; N. Denwattana","Faculty of Informatics Burapha University Chonburi, Thailand 20131; Faculty of Informatics Burapha University Chonburi, Thailand 20131","2016 13th International Joint Conference on Computer Science and Software Engineering (JCSSE)","21 Nov 2016","2016","","","1","5","Agile methodology has been adopted for many software development projects, due to its ability to deal with changing product requirements, while Traditional methods are better suited to dealing with projects that have clearly defined requirements. Because of the differences in the two methodologies and their diverse approaches to solving development problems, it is necessary to understand their individual approaches in order for the benefits to be compared and synthesized. This study is necessary to understand the differences and diversities of the two methodologies using the checklist table to select and adopt the appropriate methodology for particular development projects. Results of this study not only provide positive answers but also offer suggestions for better integration.","","978-1-5090-2033-1","10.1109/JCSSE.2016.7748914","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7748914","Agile;Traditional;Combined Agile and Traditional;Project mangement;SMEs","Software;Testing;Training;Encoding;Organizations;Adaptation models;Computer science","formal specification;project management;software development management;software prototyping","agile methodologies;software development project;product requirements;development problems","","","","13","","21 Nov 2016","","","IEEE","IEEE Conferences"
"BugSwarm: Mining and Continuously Growing a Dataset of Reproducible Failures and Fixes","D. A. Tomassi; N. Dmeiri; Y. Wang; A. Bhowmick; Y. Liu; P. T. Devanbu; B. Vasilescu; C. Rubio-González","University of California, Davis; University of California, Davis; University of California, Davis; University of California, Davis; University of California, Davis; University of California, Davis; Carnegie Mellon University; University of California, Davis","2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE)","26 Aug 2019","2019","","","339","349","Fault-detection, localization, and repair methods are vital to software quality; but it is difficult to evaluate their generality, applicability, and current effectiveness. Large, diverse, realistic datasets of durably-reproducible faults and fixes are vital to good experimental evaluation of approaches to software quality, but they are difficult and expensive to assemble and keep current. Modern continuous-integration (CI) approaches, like TRAVIS-CI, which are widely used, fully configurable, and executed within custom-built containers, promise a path toward much larger defect datasets. If we can identify and archive failing and subsequent passing runs, the containers will provide a substantial assurance of durable future reproducibility of build and test. Several obstacles, however, must be overcome to make this a practical reality. We describe BUGSWARM, a toolset that navigates these obstacles to enable the creation of a scalable, diverse, realistic, continuously growing set of durably reproducible failing and passing versions of real-world, open-source systems. The BUGSWARM toolkit has already gathered 3,091 fail-pass pairs, in Java and Python, all packaged within fully reproducible containers. Furthermore, the toolkit can be run periodically to detect fail-pass activities, thus growing the dataset continually.","1558-1225","978-1-7281-0869-8","10.1109/ICSE.2019.00048","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812141","Bug Database;Reproducibility;Software Testing;Program Analysis;Experiment Infrastructure","Tools;Software maintenance;Libraries;Open source software;Software quality;Java;Python","data mining;Java;program debugging;program testing;Python;software fault tolerance;software maintenance;software quality","reproducible failures;fault-detection;repair methods;software quality;realistic datasets;durably-reproducible faults;TRAVIS-CI;BUGSWARM toolkit;fail-pass pairs;fully reproducible containers;fail-pass activities;continuous-integration approach;mining;fault localization;Java;Python","","21","","32","","26 Aug 2019","","","IEEE","IEEE Conferences"
"CrystalBall: Statically analyzing runtime behavior via deep sequence learning","S. Zekany; D. Rings; N. Harada; M. A. Laurenzano; L. Tang; J. Mars","University of Michigan - Ann Arbor, MI; University of Michigan - Ann Arbor, MI; University of Michigan - Ann Arbor, MI; University of Michigan - Ann Arbor, MI; University of Michigan - Ann Arbor, MI; University of Michigan - Ann Arbor, MI","2016 49th Annual IEEE/ACM International Symposium on Microarchitecture (MICRO)","15 Dec 2016","2016","","","1","12","Understanding dynamic program behavior is critical in many stages of the software development lifecycle, for purposes as diverse as optimization, debugging, testing, and security. This paper focuses on the problem of predicting dynamic program behavior statically. We introduce a novel technique to statically identify hot paths that leverages emerging deep learning techniques to take advantage of their ability to learn subtle, complex relationships between sequences of inputs. This approach maps well to the problem of identifying the behavior of sequences of basic blocks in program execution. Our technique is also designed to operate on the compiler's intermediate representation (IR), as opposed to the approaches taken by prior techniques that have focused primarily on source code, giving our approach language-independence. We describe the pitfalls of conventional metrics used for hot path prediction such as accuracy, and motivate the use of Area Under the Receiver Operating Characteristic curve (AUROC). Through a thorough evaluation of our technique on complex applications that include the SPEC CPU2006 benchmarks, we show that our approach achieves an AUROC of 0.85.","","978-1-5090-3508-3","10.1109/MICRO.2016.7783727","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7783727","","Runtime;Measurement;Software;Optimization;Debugging;Testing;Vehicle dynamics","learning (artificial intelligence);program compilers;program debugging;program diagnostics;program testing;sensitivity analysis;source code (software)","CrystalBall;runtime behavior static analysis;deep sequence learning;dynamic program behavior;software development lifecycle;software optimization;software debugging;software testing;software security;static dynamic program behavior prediction;input sequences;program execution;compiler intermediate representation;source code;language-independence;area under the receiver operating characteristic curve;AUROC;SPEC CPU2006 benchmarks","","4","","50","","15 Dec 2016","","","IEEE","IEEE Conferences"
"A viable system perspective on enterprise architecture management","S. Buckl; F. Matthes; C. M. Schweda","Chair for Informatics 19, Technische Universität München (TUM), D-85748, Garching; Chair for Informatics 19, Technische Universität München (TUM), D-85748, Garching; Chair for Informatics 19, Technische Universität München (TUM), D-85748, Garching","2009 IEEE International Conference on Systems, Man and Cybernetics","4 Dec 2009","2009","","","1483","1488","A number of approaches towards enterprise architecture (EA) management is proposed in literature, differing in the underlying understanding of the EA as well as in the description of the function for performing EA management. These plurality of methods and models should be interpreted as an indicator of the low maturity of the research area. In contrast, some researchers see it as inevitable consequence of the diversity of the enterprises under consideration. Staying to this interpretation, we approach the topic of EA management from a cybernetic point of view. Thereby, we elicit constituents, which should be considered in every EA management function based on a viable system perspective on the topic. From this perspective, we further revisit selected EA management approaches and show to which extent they allude to the viable system nature of the EA.","1062-922X","978-1-4244-2793-2","10.1109/ICSMC.2009.5346262","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5346262","Enterprise Architecture;Cybernetic;Viable System Model;EA management Process;EA management governance","Cybernetics;Conference management;Process planning;Identity management systems;USA Councils;Informatics;Guidelines;Programming;Software testing;Standardization","electronic commerce;information management","enterprise architecture management;cybernetic;EA management function;viable system model","","25","","33","","4 Dec 2009","","","IEEE","IEEE Conferences"
"Can Robot Navigation Bugs Be Found in Simulation? An Exploratory Study","T. Sotiropoulos; H. Waeselynck; J. Guiochet; F. Ingrand","LAAS, Univ. de Toulouse, Toulouse, France; LAAS, Univ. de Toulouse, Toulouse, France; LAAS, Univ. de Toulouse, Toulouse, France; LAAS, Univ. de Toulouse, Toulouse, France","2017 IEEE International Conference on Software Quality, Reliability and Security (QRS)","14 Aug 2017","2017","","","150","159","The ability to navigate in diverse and previously unknown environments is a critical service of autonomous robots. The validation of the navigation software typically involves test campaigns in the field, which are costly and potentially risky for the robot itself or its environment. An alternative approach is to perform simulation-based testing, by immersing the software in virtual worlds. A question is then whether the bugs revealed in real worlds can also be found in simulation. The paper reports on an exploratory study of bugs in an academic software for outdoor robots navigation. The detailed analysis of the triggers and effects of these bugs shows that most of them can be revealed in low-fidelity simulation. It also provides insights into interesting navigation scenarios to test as well as into how to address the test oracle problem.","","978-1-5386-0592-9","10.1109/QRS.2017.25","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8009918","simulation-based testing;autonomous systems;safety;domain specific defects;exploratory study","Robots;Computer bugs;Navigation;Software;Testing;Unified modeling language;Three-dimensional displays","control engineering computing;digital simulation;mobile robots;navigation;program testing;virtual reality","robot navigation bugs;autonomous robots;navigation software;simulation-based testing;virtual worlds;academic software;outdoor robot navigation;low-fidelity simulation;test oracle problem;test campaigns","","23","","24","","14 Aug 2017","","","IEEE","IEEE Conferences"
"A method for developing agent-based models of socio-technical systems","I. Nikolic; A. Ghorbani","Faculty of Technology, Policy and Management, Section Energy and Industry, TU Delft, Postbus 5015, 2600 GA, Delft; Faculty of Technology, Policy and Management, Section Energy and Industry, TU Delft, Postbus 5015, 2600 GA, Delft","2011 International Conference on Networking, Sensing and Control","13 Jun 2011","2011","","","44","49","Agent-based modeling is one of the popular tools for analyzing complex socio-technical systems. Because of the complex nature of such systems a systematic methodology is required to guide the modeling process. By studying the existing methodologies in MAS we distinguished four major differences between MAS and ABM regarding goals, system scale and diversity, level of system understanding and verification and validation concerns. In this paper we take these differences into account and based on more than 25 case studies, we present a methodological framework for developing agent-based models that consists of five general iterative phases. These phases namely: system analysis, model design, detailed design, implementation and evaluation further consists of smaller step that are also addressed in this paper. This methodology provides a tool independent template while respecting the specific requirements for ABM.","","978-1-4244-9573-3","10.1109/ICNSC.2011.5874914","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5874914","","Analytical models;Computational modeling;Biological system modeling;Software;Testing;Unified modeling language;Ontologies","iterative methods;large-scale systems;multi-agent systems","agent based modeling;socio-technical systems;general iterative phases;tool independent template","","18","","13","","13 Jun 2011","","","IEEE","IEEE Conferences"
"Employing classifying terms for testing model transformations","M. Gogolla; A. Vallecillo; L. Burgueño; F. Hilken","University of Bremen, Germany; University of Málaga, Spain; University of Málaga, Spain; University of Bremen, Germany","2015 ACM/IEEE 18th International Conference on Model Driven Engineering Languages and Systems (MODELS)","30 Nov 2015","2015","","","312","321","This contribution proposes a new technique for developing test cases for UML and OCL models. The technique is based on an approach that automatically constructs object models for class models enriched by OCL constraints. By guiding the construction process through so-called classifying terms, the built test cases in form of object models are classified into equivalence classes. A classifying term can be an arbitrary OCL term on the class model that calculates for an object model a characteristic value. From each equivalence class of object models with identical characteristic values one representative is chosen. The constructed test cases behave significantly different with regard to the selected classifying term. By building few diverse object models, properties of the UML and OCL model can be explored effectively. The technique is applied for automatically constructing relevant source model test cases for model transformations between a source and target metamodel.","","978-1-4673-6908-4","10.1109/MODELS.2015.7338262","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7338262","","Unified modeling language;Computational modeling;Data models;Buildings;Software testing;Context","program testing;Unified Modeling Language","classifying terms;model transformation testing;UML models;OCL models;object models;class models;relevant source model test cases","","10","","31","","30 Nov 2015","","","IEEE","IEEE Conferences"
"Particle Swarm Based Meta-Heuristics for Function Optimization and Engineering Applications","M. Pant; R. Thangaraj; A. Abraham","Dept. of Paper Technol., IIT Roorkee, Roorkee; Dept. of Paper Technol., IIT Roorkee, Roorkee; NA","2008 7th Computer Information Systems and Industrial Management Applications","9 Jul 2008","2008","","","84","90","This paper evaluates the performance of three Particle Swarm Optimization (PSO) algorithms, namely attraction-repulsion based PSO (ATREPSO), Quadratic Interpolation based PSO (QIPSO) and Gaussian Mutation based PSO (GMPSO). Whereas all the algorithms are guided by the diversity of the population to search the global optimal solution of a given optimization problem, GMPSO uses the concept of mutation and QIPSO uses the reproduction operator to generate a new member of the swarm. We tested the variants of PSO on ten standard benchmark functions and compared the results with classical PSO algorithm. Also, the performance of all algorithms is tested on two engineering design problems. The numerical results show that all the algorithms outperform the classical particle swarm optimization by a remarkable difference.","","978-0-7695-3184-7","10.1109/CISIM.2008.33","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4557839","particle swarm optimization;nature inspired heuristics;Attraction-Repulsion based PSO;Quadratic Interpolation based PSO (QIPSO);Gaussian Mutation based PSO (GMPSO)","Particle swarm optimization;Genetic mutations;Ant colony optimization;Application software;Testing;Stochastic processes;Management information systems;Computer industry;Quality management;Technology management","interpolation;particle swarm optimisation","function optimization;particle swarm optimization algorithms;meta-heuristics;attraction-repulsion;quadratic interpolation;Gaussian mutation;global optimal solution;standard benchmark functions","","10","","20","","9 Jul 2008","","","IEEE","IEEE Conferences"
"KinLinks: Software Toolkit for kinship analysis and pedigree generation from HTS datasets","A. Shcherbina; D. O. Ricke; E. Schwoebel; T. Boettcher; C. Zook; J. Bobrow; M. Petrovick; E. Wack","Bioengineering Systems and Technologies, Massachusetts Institute of Technology, Lexington, MA USA; Bioengineering Systems and Technologies, Massachusetts Institute of Technology, Lexington, MA USA; Bioengineering Systems and Technologies, Massachusetts Institute of Technology, Lexington, MA USA; Bioengineering Systems and Technologies, Massachusetts Institute of Technology, Lexington, MA USA; Bioengineering Systems and Technologies, Massachusetts Institute of Technology, Lexington, MA USA; Bioengineering Systems and Technologies, Massachusetts Institute of Technology, Lexington, MA USA; Bioengineering Systems and Technologies, Massachusetts Institute of Technology, Lexington, MA USA; Bioengineering Systems and Technologies, Massachusetts Institute of Technology, Lexington, MA USA","2016 IEEE Symposium on Technologies for Homeland Security (HST)","15 Sep 2016","2016","","","1","6","The ability to predict familial relationships from source DNA in multiple samples has a number of forensic and medical applications. Kinship testing of suspect DNA profiles against relatives in a law enforcement database can provide valuable investigative leads, determination of familial relationships can inform immigration decisions, and remains identification can provide closure to families of missing individuals. The proliferation of High-Throughput Sequencing technologies allows for enhanced capabilities to accurately predict familial relationships to the third degree and beyond. KinLinks, developed by MIT Lincoln Laboratory, is a software tool that predicts pairwise relationships and reconstructs kinship pedigrees for multiple input samples using single-nucleotide polymorphism (SNP) profiles. The software has been trained and evaluated on a set of 175 subjects (30,450 pairwise relationships), consisting of three multi-generational families and 52 geographically diverse subjects. Though a panel of 5396 SNPs was selected for kinship prediction, KinLinks is highly modular, allowing for the substitution of expanded SNP panels and additional training models as sequencing capabilities continue to progress. KinLinks builds on the SNP-calling capabilities of Sherlocks Toolkit, and is fully integrated with the Sherlocks Toolkit pipeline.","","978-1-5090-0770-7","10.1109/THS.2016.7568891","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7568891","","Machine learning algorithms;Training;DNA;Sequential analysis;Software;Testing;Law enforcement","bioinformatics;data analysis;DNA","KinLinks;software toolkit;kinship analysis;pedigree generation;HTS dataset;familial relationship prediction;DNA;forensic application;medical application;kinship testing;law enforcement database;high-throughput sequencing technology;MIT Lincoln Laboratory;pairwise relationship prediction;kinship pedigree reconstruction;single-nucleotide polymorphism profile;SNP profile;sequencing capability;Sherlocks Toolkit pipeline","","9","","27","","15 Sep 2016","","","IEEE","IEEE Conferences"
"Understanding Conflict in Virtual Teams: An Experimental Investigation using Content Analysis","S. Paul; P. Seetharaman; I. Samarah; P. Mykytyn",Southern Illinois University at Carbondale; NA; NA; NA,"Proceedings of the 38th Annual Hawaii International Conference on System Sciences","24 Jan 2005","2005","","","44a","44a","Virtual teams are temporally and geographically dispersed groups, which may have members from varied cultures and backgrounds. Such diversity may cause intra-group conflicts in virtual teams. We analyzed the contents of the transcripts of GSS-based virtual teams and identified the conflict episodes and the approaches followed to resolve intra-group conflicts. The conflict episodes that occurred in the early phases of decision-making were separated from those taking place in the choice phase. The results revealed that conflicts in the choice phase of decision-making were detrimental to global virtual teams. We also found that groups following an integrative conflict resolution style had better performance than those following other conflict resolution approaches, such as a distributive style. While the results contribute towards the understanding of conflict in groups, the area warrants further research.","1530-1605","0-7695-2268-8","10.1109/HICSS.2005.647","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1385322","","Virtual groups;Decision making;Cultural differences;Performance analysis;Global communication;Data analysis;Information analysis;Information systems;Collaborative software;Testing","","","","7","","40","","24 Jan 2005","","","IEEE","IEEE Conferences"
"NETEMBED: A network resource mapping service for distributed applications","J. Londono; A. Bestavros","Computer Science Department, Boston University, USA; Computer Science Department, Boston University, USA","2008 IEEE International Symposium on Parallel and Distributed Processing","3 Jun 2008","2008","","","1","8","Emerging configurable infrastructures (large-scale overlays, grids, distributed testbeds, and sensor networks among others) comprise diverse sets of computing resources and network conditions. The distributed applications to be deployed on these infrastructures exhibit increasingly complex constraints and requirements on the resources they require. Thus, a common problem facing the efficient deployment of distributed applications on these infrastructures is that of mapping application-level requirements onto the network in such a manner that the requirements of the application are realized. We present two new techniques to tackle this combinatorially-hard problem that thanks to a number of heuristics, are able to find feasible solutions or determine the non-existence of a solution in most cases, where otherwise the problem would be intractable. These techniques are also false negative free, a common problem among other heuristics currently in use.","1530-2075","978-1-4244-1693-6","10.1109/IPDPS.2008.4536207","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4536207","","Application software;Testing;Grid computing;Resource management;Computer science;Large-scale systems;Computer networks;Distributed computing;Heart;Search problems","grid computing;information networks","network resource mapping service;configurable infrastructures;mapping application-level requirements;combinatorially-hard problem","","6","2","16","","3 Jun 2008","","","IEEE","IEEE Conferences"
"A Model for Usage-Based Testing of Event-Driven Software","S. Herbold; J. Grabowski; S. Waack","Inst. of Comput. Sci., Georg-August-Univ. Gottingen, Gottingen, Germany; Inst. of Comput. Sci., Georg-August-Univ. Gottingen, Gottingen, Germany; Inst. of Comput. Sci., Georg-August-Univ. Gottingen, Gottingen, Germany","2011 Fifth International Conference on Secure Software Integration and Reliability Improvement - Companion","25 Aug 2011","2011","","","172","178","Event-driven software is very diverse, e.g., in form of Graphical User Interfaces (GUIs), Web applications, or embedded software. Regardless of the application, the challenges for testing event-driven software are similar. Most event-driven systems allow a huge number of possible event sequences, which makes exhaustive testing infeasible. As a possible solution, usage-based testing has been proposed for several types of event-driven software. However, previous work has always focused on one type of event-driven software. In this paper, we propose a usage-based testing model for event-driven software in general. The model is divided into three layers to provide a maximum of platform independence while allowing interoperability with existing platform dependent solutions.","","978-1-4577-0781-0","10.1109/SSIRI-C.2011.32","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6004520","Usage-based testing;event-driven software","Software;Testing;Graphical user interfaces;Markov processes;Solid modeling;Probabilistic logic","graphical user interfaces;open systems;program testing","usage-based testing model;event-driven software;graphical user interfaces;Web applications;embedded software","","6","","22","","25 Aug 2011","","","IEEE","IEEE Conferences"
"IoT based Security Model to Enhance Blockchain Technology","S. Awasthi; P. Johri; S. K. Khatri","Amity University, Noida, Uttar Pradesh, India; Galgotias University, Greater Noida, India; Amity University, Noida, Uttar Pradesh, India","2018 International Conference on Advances in Computing and Communication Engineering (ICACCE)","23 Aug 2018","2018","","","133","137","The rapid growth of blockchain technology can be felt in our everyday lives but despite these progressions security remains a concern for the Blockchain environment as it breached a diverse range of gadgets, noticeable measures of information, production network partners to security threats. IoT security and privacy are basic achievement factors for meeting the elevated standards of the innovation to change numerous parts of our general society and economy. The proposed IoT based Blockchain model handles most security dangers, while considering the asset imperatives of numerous IoT devices. Although this architecture is a lightweight, secure and fundamental approach, hypothetically it can be scaled further in areas without compromising its performance and user's anonymity.","","978-1-5386-4485-0","10.1109/ICACCE.2018.8441720","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8441720","Blockchain;private key;Unique Id;block nodes;Validator;Bitcoin;Ethereum","Tools;Software;Testing;Organizations;Automation;Production;Pipelines","data privacy;Internet of Things;security of data","security threats;data privacy;IoT based security model;blockchain technology enhancement;IoT based blockchain model","","1","","15","","23 Aug 2018","","","IEEE","IEEE Conferences"
"Rigorous, Effortless and Timely Assessment of Cellular Network Changes","A. Mahimkar; Z. Ge; S. Ahuja; S. Pathak; N. Shafi",AT&T; AT&T; AT&T; AT&T; AT&T,"2019 49th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN)","22 Aug 2019","2019","","","256","263","Cellular service providers continuously deploy changes in their network in the form of new software releases, service feature introductions, configuration changes, equipment re-homes, firmware upgrades, and topology modifications. It is important to carefully assess the impact of these changes on service performance to validate expected behaviors and take mitigation actions in a timely fashion in case of any unexpected degradation. The diverse nature of the network changes, complex interactions across different layers of the cellular network, and the rapid evolution of the network make it challenging to accurately conduct the assessment. In this paper, we present the design and implementation of our system that enables rigorous, effortless and timely assessment of performance around network changes. We share our lessons learned from the deployment in an operational cellular network over the last eight years.","1530-0889","978-1-7281-0057-9","10.1109/DSN.2019.00037","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8809521","Network changes;performance impact;rigorous analytics;effortless specification;timely assessment","Base stations;Hardware;Measurement;Cellular networks;Software;Testing;Long Term Evolution","cellular radio;mobile communication;smart phones","cellular network changes;cellular service providers;software releases;service feature introductions;configuration changes;firmware upgrades;topology modifications;smartphone users","","","1","27","","22 Aug 2019","","","IEEE","IEEE Conferences"
"Evaluating a Training Process in a Handover Context","A. S. Khan; M. Kajko-Mattsson","Sch. of ICT, KTH R. Inst. of Technol., Stockholm, Sweden; Sch. of ICT, KTH R. Inst. of Technol., Stockholm, Sweden","2011 37th EUROMICRO Conference on Software Engineering and Advanced Applications","3 Nov 2011","2011","","","443","450","Although there exist some people management process models related to the education and training of software engineers, there are no process models that are adapted to specific software engineering contexts and processes. In this paper, we suggest a set of education and training activities that are applicable in the context of a handover process. We then evaluate these activities within twenty organizations. Although our results reveal great diversity of using these activities, they still show that they are realistic and appropriately mirror the industrial status within a handover context.","2376-9505","978-1-4577-1027-8","10.1109/SEAA.2011.68","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6068382","transition;education;knowledge;transfer","Training;Organizations;Maintenance engineering;Materials;Software;Testing;Context","computer science education;software engineering;training","training process;handover context;people management process model;education;software engineers;software engineering context","","","","12","","3 Nov 2011","","","IEEE","IEEE Conferences"
"Supporting troubleshooting in machine and plant manufacturing by backstepping of PLC-control software","B. Werner; B. Vogel-Heuser; S. Ziegltrum; H. Gröbl; C. Botzenhardt","CODESYS GmbH,Kempten,Germany; Technical University Munich,Chair of Automation and Information Systems,Garching,Germany; Technical University Munich,Chair of Automation and Information Systems,Garching,Germany; Technologies GmbH & Co.,DORST,KG Kochel am See,Germany; GmbH & Co. KG,MULTIVAC Sepp Haggenmüller,Wolfertschweden,Germany","2020 IEEE Conference on Industrial Cyberphysical Systems (ICPS)","4 Dec 2020","2020","1","","242","249","Inreasingly flexible production systems realize functions using a combination of versatile sensors and actuators with complex control software. Hence, quality control of software and debugging of sporadic and difficult to find errors is becoming more and more expensive. Therefore a method to monitor and replay the behavious of the system would be highly beneficial. For the realization of a PLC-based ""flight recorder"" for machines or plants, technical as well as industrial requirements are analyzed. Interviews conducted in two representative machine and plant manufacturers allow the derivation of a comprehensive set of diverse use cases, which could be used as benchmark set for similar concepts in the future. Based on the use cases, two different concepts for the recorder functionality were developed, prototypically implemented, and tested according to the machine and plant manufacturers' requirements. New programming language elements, necessary for the implementation of this functionality like an operator to identify the actual running task and the possibility to control a code dump form within the program have already found their way into the public software development environment (IDE) of CODESYS. After an evaluation using a real laboratory plant, the concepts were iteratively improved. Finally, insights of remaining research challenges or beneficial future applications for the developed methods are given.","","978-1-7281-6389-5","10.1109/ICPS48405.2020.9274778","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9274778","PLC;Replay;Troubleshooting;Backstepping;Computer and Control Systems","Software;Testing;Runtime;Data acquisition;Companies;Unified modeling language;Real-time systems","control engineering computing;flexible manufacturing systems;industrial plants;machinery production industries;production engineering computing;programmable controllers;programming languages;quality control;system monitoring","troubleshooting;plant manufacturing;PLC-control software;flexible production systems;versatile sensors;actuators;complex control software;quality control;debugging;flight recorder;industrial requirements;machine manufacturing;plant manufacturers;use cases;CODESYS;public software development environment;programming language elements;laboratory plant;recorder functionality","","","","21","","4 Dec 2020","","","IEEE","IEEE Conferences"
"Towards Characterizing Adversarial Defects of Deep Learning Software from the Lens of Uncertainty","X. Zhang; X. Xie; L. Ma; X. Du; Q. Hu; Y. Liu; J. Zhao; M. Sun","Peking Univ., Beijing, China; Nanyang Technol. Univ., Singapore, Singapore; Kyushu University,Japan; Nanyang Technological University,Singapore; Kyushu University,Japan; Nanyang Technological University,Singapore; Kyushu University,Japan; Peking University,China","2020 IEEE/ACM 42nd International Conference on Software Engineering (ICSE)","21 Dec 2020","2020","","","739","751","Over the past decade, deep learning (DL) has been successfully applied to many industrial domain-specific tasks. However, the current state-of-the-art DL software still suffers from quality issues, which raises great concern especially in the context of safety- and security-critical scenarios. Adversarial examples (AEs) represent a typical and important type of defects needed to be urgently addressed, on which a DL software makes incorrect decisions. Such defects occur through either intentional attack or physical-world noise perceived by input sensors, potentially hindering further industry deployment. The intrinsic uncertainty nature of deep learning decisions can be a fundamental reason for its incorrect behavior. Although some testing, adversarial attack and defense techniques have been recently proposed, it still lacks a systematic study to uncover the relationship between AEs and DL uncertainty. In this paper, we conduct a large-scale study towards bridging this gap. We first investigate the capability of multiple uncertainty metrics in differentiating benign examples (BEs) and AEs, which enables to characterize the uncertainty patterns of input data. Then, we identify and categorize the uncertainty patterns of BEs and AEs, and find that while BEs and AEs generated by existing methods do follow common uncertainty patterns, some other uncertainty patterns are largely missed. Based on this, we propose an automated testing technique to generate multiple types of uncommon AEs and BEs that are largely missed by existing techniques. Our further evaluation reveals that the uncommon data generated by ourmethod is hard to be defended by the existing defense techniques with the average defense success rate reduced by 35%. Our results call for attention and necessity to generate more diverse data for evaluating quality assurance solutions of DL software.","1558-1225","978-1-4503-7121-6","10.1145/3377811.3380368","National Natural Science Foundation of China(grant numbers:61772038,61532019); Guangdong Science and Technology Department(grant numbers:2018B010107004); NVIDIA; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9284139","Deep learning;uncertainty;adversarial attack;software testing","Deep learning;Uncertainty;Systematics;Software;Task analysis;Testing;Software engineering","learning (artificial intelligence);program testing;security of data","adversarial defects;deep learning software;industrial domain-specific tasks;security-critical scenarios;adversarial examples;typical type;important type;DL software;incorrect decisions;intentional attack;input sensors;industry deployment;intrinsic uncertainty nature;deep learning decisions;incorrect behavior;adversarial attack;large-scale study;multiple uncertainty metrics;benign examples;BEs;common uncertainty patterns;automated testing technique;uncommon AEs;existing defense techniques;average defense success rate","","15","","60","","21 Dec 2020","","","IEEE","IEEE Conferences"
"Why My App Crashes? Understanding and Benchmarking Framework-Specific Exceptions of Android Apps","T. Su; L. Fan; S. Chen; Y. Liu; L. Xu; G. Pu; Z. Su","School of Software Engineering, East China Normal University, Shanghai, China; College of Cyber Science, Nankai Univerisity, Tianjin, China; College of Intelligence and Computing, Tianjin University, Tianjin, China; School of Computer Science and Engineering, Nanyang Technological University, Singapore; Department of Computer Science and Engineering, New York University Shanghai, Shanghai, China; School of Software Engineering, East China Normal University, Shanghai, China; Department of Computer Science, ETH Zurich, Zurich, Switzerland","IEEE Transactions on Software Engineering","15 Apr 2022","2022","48","4","1115","1137","Mobile apps have become ubiquitous. Ensuring their correctness and reliability is important. However, many apps still suffer from occasional to frequent crashes, weakening their competitive edge. Large-scale, deep analyses of the characteristics of real-world app crashes can provide useful insights to both developers and researchers. However, such studies are difficult and yet to be carried out — this work fills this gap. We collected 16,245 and 8,760 unique exceptions from 2,486 open-source and 3,230 commercial Android apps, respectively, and observed that the exceptions thrown from Android framework (termed <italic>“framework-specific exceptions”</italic>) account for the majority. With one-year effort, we (1) extensively investigated these framework-specific exceptions, and (2) further conducted an online survey of 135 professional app developers about how they analyze, test, reproduce and fix these exceptions. Specifically, we aim to understand the framework-specific exceptions from several perspectives: (i) their characteristics (e.g., manifestation locations, fault taxonomy), (ii) the developers’ testing practices, (iii) existing bug detection techniques’ effectiveness, (iv) their reproducibility and (v) bug fixes. To enable follow-up research (e.g., bug understanding, detection, localization and repairing), we further systematically constructed, <italic>DroidDefects</italic>, the first comprehensive and largest benchmark of Android app exception bugs. This benchmark contains 33 <italic>reproducible</italic> exceptions (with test cases, stack traces, faulty and fixed app versions, bug types, etc.), and 3,696 <italic>ground-truth</italic> exceptions (real faults manifested by automated testing tools), which cover the apps with different complexities and diverse exception types. Based on our findings, we also built two prototype tools: Stoat+, an optimized dynamic testing tool, which quickly uncovered three previously-unknown, fixed crashes in Gmail and Google+; ExLocator, an exception localization tool, which can locate the root causes of specific exception types. Our dataset, benchmark and tools are publicly available on <italic><uri>https://github.com/tingsu/droiddefects</uri></italic>.","1939-3520","","10.1109/TSE.2020.3013438","SNSF Spark(grant numbers:CRSK-2_190302); National Natural Science Foundation of China(grant numbers:61632005,61532019); National Research Foundation(grant numbers:NRF2018NCR-NCR005-0001); National Research Foundation Singapore(grant numbers:NRF2018NCR-NSOE004-0001,NRFI06-2020-0022); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9153947","Mobile applications;android applications;empirical study;exception analysis;software testing;bug reproducibility","Computer bugs;Tools;Androids;Humanoid robots;Benchmark testing","","","","13","","149","IEEE","31 Jul 2020","","","IEEE","IEEE Journals"
"Testing highly complex system of systems: An industrial case study","N. B. Ali; K. Petersen; M. V. Mäntylä","School of Computing Blekinge Institute of Technology 37179 Karlskrona. Sweden; School of Computing Blekinge Institute of Technology 37179 Karlskrona. Sweden; Department of Computer Science Lund University 22100 Lund, Sweden","Proceedings of the 2012 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement","7 Mar 2013","2012","","","211","220","Context: Systems of systems (SoS) are highly complex and are integrated on multiple levels (unit, component, system, system of systems). Many of the characteristics of SoS (such as operational and managerial independence, integration of system into system of systems, SoS comprised of complex systems) make their development and testing challenging. Contribution: This paper provides an understanding of SoS testing in large-scale industry settings with respect to challenges and how to address them. Method: The research method used is case study research. As data collection methods we used interviews, documentation, and fault slippage data. Results: We identified challenges related to SoS with respect to fault slippage, test turn-around time, and test maintainability. We also classified the testing challenges to general testing challenges, challenges amplified by SoS, and challenges that are SoS specific. Interestingly, the interviewees agreed on the challenges, even though we sampled them with diversity in mind, which meant that the number of interviews conducted was sufficient to answer our research questions. We also identified solution proposals to the challenges that were categorized under four classes of developer quality assurance, function test, testing in all levels, and requirements engineering and communication. Conclusion: We conclude that although over half of the challenges we identified can be categorized as general testing challenges still SoS systems have their unique and amplified challenges stemming from SoS characteristics. Furthermore, it was found that interviews and fault slippage data indicated that different areas in the software process should be improved, which indicates that using only one of these methods would have led to an incomplete picture of the challenges in the case company.","1949-3789","978-1-4503-1056-7","10.1145/2372251.2372290","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6475419","System of Systems;Software Test;Case Study","Testing;Interviews;Systems engineering and theory;Companies;Context;Software;Collaboration","formal specification;manufacturing data processing;program testing;quality assurance;software quality","highly complex system of system testing;SoS testing;large-scale industry settings;case study research;fault slippage;test turn-around time;test maintainability;general testing challenge;developer quality assurance;function test;requirements engineering","","3","","26","","7 Mar 2013","","","IEEE","IEEE Conferences"
"Improving the Testing of Clustered Systems Through the Effective Usage of Java Benchmarks","A. O. Portillo-Dominguez; V. Ayala-Rivera","Sch. of Comput. Sci., Univ. Coll. Dublin, Dublin, Ireland; Sch. of Comput. Sci., Univ. Coll. Dublin, Dublin, Ireland","2017 5th International Conference in Software Engineering Research and Innovation (CONISOFT)","16 Apr 2018","2017","","","130","139","Nowadays, cluster computing has become a cost-effective and powerful solution for enterprise-level applications. Nevertheless, the usage of this architecture model also increases the complexity of the applications, complicating all activities related to performance optimisation. Thus, many research works have pursued to develop advancements for improving the performance of clusters. Comprehensively evaluating such advancements is key to understand the conditions under which they can be more useful. However, the creation of an appropriate test environment, that is, one which offers different application behaviours (so that the obtained conclusions can be better generalised) is typically an effort-intensive task. To help tackle this problem, this paper presents a tool that helps to decrease the effort and expertise needed to build useful test environments to perform more robust cluster testing. This is achieved by enabling the effective usage of Java Benchmarks to easily create clustered test environments; hence, diversifying the application behaviours that can be evaluated. We also present the results of a practical validation of the proposed tool, where it has been successfully applied to the evaluation of two cluster-related advancements. Such results demonstrate the benefits that our tool can bring to the evaluation of cluster-related advancements.","","978-1-5386-3956-6","10.1109/CONISOFT.2017.00023","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8337944","Software-Testing;Evaluation;Java;Clusters;Performance","Benchmark testing;Java;Tools;Computer architecture;Software;Task analysis","business data processing;Java;pattern clustering;program testing;software performance evaluation","Java Benchmarks;cluster computing;enterprise-level applications;architecture model;performance optimisation;appropriate test environment;effort-intensive task;robust cluster testing;effective usage;clustered test environments;cluster-related advancements;clustered systems;test environments","","2","","31","","16 Apr 2018","","","IEEE","IEEE Conferences"
"A case study on reliability and usability testing of a Web portal","M. M. Ali-Shahid; S. Sulaiman","Faculty of Computing, Universiti Teknologi Malaysia, 81310, Skudai, Johor, Malaysia; Faculty of Computing, Universiti Teknologi Malaysia, 81310, Skudai, Johor, Malaysia","2015 9th Malaysian Software Engineering Conference (MySEC)","23 May 2016","2015","","","31","36","Reliability testing of web portals is distinctive as compared to that of conventional software. It requires usability and reliability metrics besides functional testing to ensure diverse users are able to use such portals without any formal training and can rely on the portals or requirements quickly and efficiently. The study utilizes the measurable metrics for usability and reliability testing and establishes interpretation between both metrics by performing testing on a Web portal using online tools and analyze the results. The case study is based on a Web application that facilitates information and knowledge sharing among its online members. The outcome from the study provides an insight on how to measure usability and part of reliability of a Web portal based on ISO metrics using available testing tools.","","978-1-4673-8227-4","10.1109/MySEC.2015.7475191","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7475191","Reliability;usability;Web portals;software testing","Testing;Usability;Measurement;Software reliability;Portals","Internet;portals;program testing;software metrics;software reliability","Web portal usability testing;Web portal reliability testing;reliability metrics;usability metrics;online tools;Web application;knowledge sharing;ISO metrics","","2","","23","","23 May 2016","","","IEEE","IEEE Conferences"
"Test case design method targeting environmental fault tolerance for high availability clusters","Q. Du; K. Yin; J. Qiu; H. Li; K. Shi; Y. Tian; A. Ma","School of Software Engineering, Tongji University, Shanghai 201804, China; School of Software Engineering, Tongji University, Shanghai 201804, China; School of Software Engineering, Tongji University, Shanghai 201804, China; School of Software Engineering, Tongji University, Shanghai 201804, China; School of Software Engineering, Tongji University, Shanghai 201804, China; School of Software Engineering, Tongji University, Shanghai 201804, China; School of Software Engineering, Tongji University, Shanghai 201804, China","2016 11th International Conference on Reliability, Maintainability and Safety (ICRMS)","28 Sep 2017","2016","","","1","7","With increasing critical business organizations focusing on the quality of service in cloud applications, high availability (HA) has become critical for the product level cluster of cloud applications. Existing availability evaluation methods or testing projects for cloud platforms, however, cannot sufficiently verify cluster tolerance to various reasonable environmental faults. This paper proposes a test case design method targeting environmental fault tolerance for HA clusters. Test cases are designed considering fault modes and components of a cluster application in diverse scenarios. As a result, the fault tolerance of different components to various reasonable faults can be verified via the proposed method. A case study is conducted on Openstack, a widely used open source software platform for cloud environments, to show the feasibility of using this method.","","978-1-5090-2714-9","10.1109/ICRMS.2016.8050033","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8050033","Software Testing;Reliability;High availability;Fault Tolerance","Fault tolerance;Fault tolerant systems;Measurement;Design methodology;Testing;Cloud computing","cloud computing;pattern clustering;program testing;public domain software;software fault tolerance","test case design method;environmental fault tolerance;high availability clusters;critical business organizations;cloud applications;product level cluster;availability evaluation methods;cloud platforms;cluster tolerance;HA clusters;fault modes;cluster application;cloud environments;Openstack program;open source software platform;cloud environment","","1","","24","","28 Sep 2017","","","IEEE","IEEE Conferences"
"ParallelEye-CS: A New Dataset of Synthetic Images for Testing the Visual Intelligence of Intelligent Vehicles","X. Li; Y. Wang; L. Yan; K. Wang; F. Deng; F. -Y. Wang","School of Automation, Beijing Institute of Technology, Beijing, China; State Key Laboratory for Management and Control of Complex Systems, Institute of Automation, Chinese Academy of Sciences, Beijing, China; State Key Laboratory for Management and Control of Complex Systems, Institute of Automation, Chinese Academy of Sciences, Beijing, China; College of Information Science and Technology, Beijing University of Chemical Technology, Beijing, China; School of Automation, Beijing Institute of Technology, Beijing, China; State Key Laboratory for Management and Control of Complex Systems, Institute of Automation, Chinese Academy of Sciences, Beijing, China","IEEE Transactions on Vehicular Technology","21 Oct 2019","2019","68","10","9619","9631","Virtual simulation testing is becoming indispensable for the intelligence testing of intelligent vehicles. However, even the most advanced simulation software provides rather limited test conditions. In the long run, intelligent vehicles are expected to work at SAE (Society of Automotive Engineers) level 4 or level 5. Researchers should make full use of virtual simulation scenarios to test the visual intelligence algorithms of intelligent vehicles under various imaging conditions. In this paper, we create realistic artificial scenes to simulate the self-driving scenarios, and collect a dataset of synthetic images from the virtual driving scenes, named “ParallelEye-CS”. In the artificial scenes, we can flexibly change environmental conditions and automatically acquire accurate and diverse ground-truth labels. As a result, ParallelEye-CS has six ground-truth labels and includes twenty types of tests, which are divided into normal, environmental, and difficult tasks. Furthermore, we utilize ParallelEye-CS in combination with other publicly available datasets to conduct experiments for visual object detection. The experimental results indicate that: 1) object detection algorithms of intelligent vehicles can be tested under various scenario challenges; 2) mixed dataset can improve the accuracy of object detection algorithms, but domain shift is a serious issue worthy of attention.","1939-9359","","10.1109/TVT.2019.2936227","National Key R&D Program of China(grant numbers:2018YFC1704400); National Natural Science Foundation of China(grant numbers:U1811463); China Scholarship Council; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8807212","Intelligent vehicles;visual intelligence;intelligence testing;object detection;virtual simulation;synthetic images","Testing;Intelligent vehicles;Task analysis;Object detection;Automation;Roads;Visual perception","automotive engineering;object detection;traffic engineering computing;virtual reality","ParallelEye-CS;intelligent vehicles;synthetic images;virtual simulation testing;intelligence testing;advanced simulation software;test conditions;virtual simulation scenarios;visual intelligence algorithms;virtual driving scenes;SAE;society of automotive engineers;object detection algorithms","","5","","41","IEEE","20 Aug 2019","","","IEEE","IEEE Journals"
"Test image generation using segmental symbolic evaluation for unit testing","T. Jameel; M. Lin; H. Li; X. Hou","State key Lab of Software Development Environment Beihang University Beijing, China; State key Lab of Software Development Environment Beihang University Beijing, China; State key Lab of Software Development Environment Beihang University Beijing, China; State key Lab of Software Development Environment Beihang University Beijing, China","15th IEEE/ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing (SNPD)","1 Sep 2014","2014","","","1","6","This paper presents a novel technique to generate test images using segmental symbolic evaluation for testing of image processing applications. Images are multidimensional and diverse in nature, which leads to different challenges for the testing process. A technique is required to generate test images capable of finding program paths derived by image pixels. The proposed technique is based on symbolic execution which is extensively used for test data generation in recent years. In image processing applications, pixel operations such as averaging, convolution etc. are applied on a segment of input image pixels called window for a single iteration and repeated for the entire image. Our key idea is to imitate operations on pixel window using symbolic values rather than concrete ones to generate path constraints in the program under test. The path constraints generated for different paths are solved for concrete values using our simple SAT solver and the solutions are capable to guide program execution to the specific paths. The solutions of path constraints are used to generate synthetic test images for each identified path and the paths constraints which are not solvable for concrete pixel values are reported as infeasible paths. We have developed a tool IMSUITthat takes an image processing function as input and executes the program symbolically for the given pixels window to generate test images. Effectiveness of IMSUIT is tested on different modules of an optical character recognition system and the result shows that it can successfully create test images for each path of the program under test and capable of identifying infeasible paths.","","978-1-4799-5604-3","10.1109/SNPD.2014.6888718","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6888718","symbolic execution;testing image processing;unit testing","Testing;Image processing;Concrete;Equations;Semantics;Optical character recognition software","computability;optical character recognition;program testing","test image generation;segmental symbolic evaluation;unit testing;image processing applications;input image pixels;single iteration;pixel window;symbolic values;simple SAT solver;path constraints;concrete pixel values;IMSUIT tool;optical character recognition system;software testing","","","","10","","1 Sep 2014","","","IEEE","IEEE Conferences"
"Scaffolds and design factors to increase creative outcomes in teaching software design and testing","C. -S. Lee; K. D. Wong; S. B. -Y. Lau","Faculty of Science and Technology, Sunway University, Malaysia; Faculty of Information Technology, Malaysia University of Science and Technology, Malaysia; School of Computing, University College of Technology Sarawak, Malaysia","2015 IEEE International Conference on Industrial Engineering and Engineering Management (IEEM)","21 Jan 2016","2015","","","451","454","Graduates are expected to be able to provide holistic solutions, capable of meeting diverse objectives simultaneously. Furthermore, opportunities are often “found” or “made.” The quality of solutions, however, is mediated by different conceptualizations of contexts. Thus, we aim to investigate how students would conceptualize, make sense, desire to know, find solutions and subsequently progress to collaborate, communicate and create new artefacts. We hypothesize that there would be a higher likelihood of better quality design process, explanations as well as modelling outcomes if first, students can relate between the ability to analyse problems with the ability to conceptualize/model and second, the design of the task focuses on not only functional but more importantly sustaining positive user experience. Findings highlight the importance of key design factors contributing to more creative outcomes.","","978-1-4673-8066-9","10.1109/IEEM.2015.7385687","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7385687","Conceptualization;creative thinking;scaffolding;Engineering education","Software design;Testing;Context;Education;Biological system modeling;Unified modeling language","computer science education;program testing;software quality;teaching","design factors;scaffolds;creative outcomes;software design teaching;software testing;graduates;quality design process;positive user experience","","4","","19","","21 Jan 2016","","","IEEE","IEEE Conferences"
"Overcoming challenges to air force satellite ground control automation","M. J. Bentley; A. C. Lin; D. D. Hodson","Air Force Institute of Technology, 2950 Hobson Way, Wright-Patterson AFB, OH 45433; Air Force Institute of Technology, 2950 Hobson Way, Wright-Patterson AFB, OH 45433; Air Force Institute of Technology, 2950 Hobson Way, Wright-Patterson AFB, OH 45433","2017 IEEE Conference on Cognitive and Computational Aspects of Situation Management (CogSIMA)","18 May 2017","2017","","","1","7","US Air Force satellite ground stations require significant manpower to operate. To improve operating efficiencies, the Air Force seeks to incorporate more automation into routine satellite operations. Interaction with autonomous systems includes not only daily operations, but also the development, maintainability, and the extensibility of such systems. This paper presents challenges to Air Force satellite automation: (1) existing architecture of legacy systems, (2) space segment diversity, and (3) unclear definition and scoping of the term “automation.” Using a qualitative case study approach, we survey comparable non-satellite operation domains (Industrial Control Automation and Software Testing) that have successfully integrated automation, and other satellite operation enterprises (NASA Goddard, Naval Research Laboratory, European Ground Station National Institute for Space Research in Brazil) to identify common themes and best practices. From this insight, we recommend that future satellite operation ground stations encourage the use of layered architectures, abstract satellite operation processes, and integrate simulators in future systems as concrete implementations of this common operating platform.","2379-1675","978-1-5090-6380-2","10.1109/COGSIMA.2017.7929585","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7929585","automation;case study;satellite;ground control;process mining;simulation","Automation;Satellites;Software;Computer architecture;Aerospace electronics;Space vehicles;Software engineering","military aircraft;satellite ground stations","US Air Force satellite ground station control automation;legacy system architecture;space segment diversity;qualitative analysis;nonsatellite operation domains;satellite operation enterprises;layered architectures;abstract satellite operation process","","1","","16","","18 May 2017","","","IEEE","IEEE Conferences"
"One test case generation method for SW&HW reliability co-testing","C. Hou; Q. Wang; Z. Ren","AVIC Aero-Polytechnology Establishment, Beijing, China; AVIC Aero-Polytechnology Establishment, Beijing, China; AVIC Aero-Polytechnology Establishment, Beijing, China","The Proceedings of 2011 9th International Conference on Reliability, Maintainability and Safety","11 Aug 2011","2011","","","742","745","Today, more and more software-intensive equipments are used in weapons, and their reliability is gradually being looked closely. For these equipments, software and hardware are coupling; their reliability can't be verified separately. Design testing profile is an important work to reliability verification. Hardware test profile design method is mature relatively. Software test profile design and test case generation method is developing. Although several operation profile construction methods have been proposed, they are not fit for hardware & software (SW&HW) co-testing. This paper combines testing profile of hardware, with utilized information of mission profile and environment profile, divides operation profile into three layers and model by diverse UML diagrams. This method considers both input parameters complexity and real-time requirements. It can be used in operation profile design and test case generation of SW&HW reliability co-testing.","","978-1-61284-666-8","10.1109/ICRMS.2011.5979362","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5979362","Test Case Generation;SW&HW;Reliability Co-testing","Software;Software reliability;Unified modeling language;Hardware;Testing;Reliability engineering","program testing;program verification;software reliability;Unified Modeling Language","test case generation method;software intensive equipments;reliability verification;hardware test profile design method;profile construction methods;UML diagrams;SW&HW reliability cotesting","","1","","11","","11 Aug 2011","","","IEEE","IEEE Conferences"
"The object-FMA based test case generation approach for GUI software exception testing","J. Lai; H. Zhang; B. Huang","School of Reliability and System Engineering, BeiHang University, Beijing, China; School of Reliability and System Engineering, BeiHang University, Beijing, China; School of Reliability and System Engineering, BeiHang University, Beijing, China","The Proceedings of 2011 9th International Conference on Reliability, Maintainability and Safety","11 Aug 2011","2011","","","717","723","The traditional exception testing usually utilizes the error-guessing approach or the equivalence class-partition method to generate test cases, which heavily depend on the experience of testers and easily make the exception testing omissive. In order to solve this problem, this paper introduces the SFMEA (Software Failure Mode Effect Analysis) to generate the exception testing cases for the GUI software by analyzing the failure modes of the controls and the control sets of the GUI software and then translating those failure modes directly into the exception test cases. In order to make the failure mode analysis sufficient, we first propose an object-based approach for the failure mode analysis (i.e. Object-FMA), and then utilize this approach to analyze the failure modes of the common controls in the Windows, and generate the database of the failure modes of the controls for guiding to design the test cases. In an actual GUI software-testing project, a case study is presented through comparing four diverse exception test suites. Three test groups with different experience use the error-guessing approach to generate three exception test suites respectively. Then one group is selected from these three groups to use this proposed Object-FMA approach to generate one exception test suite. The comparison results show that the exception testing cases generated by the Object-FMA approach not only are more sufficient than the ones generated by the error-guessing approach, but also detect more exceptions. This proposed Object-FMA approach can avoid to overreliance on the experience of testers during designing the exception testing cases. Moreover, this approach can ensure the quality of the exception testing cases from the methodological viewpoint. Thus, the feasibility and validity of this proposed Object-FMA approach are validated consequently.","","978-1-61284-666-8","10.1109/ICRMS.2011.5979358","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5979358","GUI software;exception testing;SFMEA;Object-FMA","Graphical user interfaces;Testing;Timing;Software quality;Accidents;Databases","failure analysis;graphical user interfaces;program testing","object FMA based test case generation approach;GUI software exception testing;equivalence class partition method;software failure mode effect analysis;SFMEA;error guessing approach;exception test cases","","","2","12","","11 Aug 2011","","","IEEE","IEEE Conferences"
"Comparative analysis of classical multi-objective evolutionary algorithms and seeding strategies for pairwise testing of Software Product Lines","R. E. Lopez-Herrejon; J. Ferrer; F. Chicano; A. Egyed; E. Alba","Software Systems Engineering Johannes Kepler University Linz, Austria; Universidad de Málaga, Andalucía Tech, Spain; Universidad de Málaga, Andalucía Tech, Spain; Software Systems Engineering Johannes Kepler University Linz, Austria; Universidad de Málaga, Andalucía Tech, Spain","2014 IEEE Congress on Evolutionary Computation (CEC)","22 Sep 2014","2014","","","387","396","Software Product Lines (SPLs) are families of related software products, each with its own set of feature combinations. Their commonly large number of products poses a unique set of challenges for software testing as it might not be technologically or economically feasible to test of all them individually. SPL pairwise testing aims at selecting a set of products to test such that all possible combinations of two features are covered by at least one selected product. Most approaches for SPL pairwise testing have focused on achieving full coverage of all pairwise feature combinations with the minimum number of products to test. Though useful in many contexts, this single-objective perspective does not reflect the prevailing scenario where software engineers do face trade-offs between the objectives of maximizing the coverage or minimizing the number of products to test. In contrast and to address this need, our work is the first to propose a classical multi-objective formalisation where both objectives are equally important. In this paper, we study the application to SPL pairwise testing of four classical multi-objective evolutionary algorithms. We developed three seeding strategies — techniques that leverage problem domain knowledge — and measured their performance impact on a large and diverse corpus of case studies using two well-known multi-objective quality measures. Our study identifies the performance differences among the algorithms and corroborates that the more domain knowledge leveraged the better the search results. Our findings enable software engineers to select not just one solution (as in the case of single-objective techniques) but instead to select from an array of test suite possibilities the one that best matches the economical and technological constraints of their testing context.","1941-0026","978-1-4799-1488-3","10.1109/CEC.2014.6900473","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6900473","","Testing;Frequency modulation;Sociology;Statistics;Vectors;Context;Evolutionary computation","evolutionary computation;program testing;software product lines","comparative analysis;classical multiobjective evolutionary algorithms;seeding strategies;software product line pairwise testing;SPL pairwise testing;pairwise feature combinations;classical multiobjective formalisation;domain knowledge;multiobjective quality measures;economical constraints;technological constraints","","16","","60","","22 Sep 2014","","","IEEE","IEEE Conferences"
"Context-aware Personalized Crowdtesting Task Recommendation","J. Wang; Y. Yang; S. Wang; C. Chen; D. Wang; Q. Wang","Institute of Software, Chinese Academy of Sciences, Institute of Software Chinese Academy of Sciences, 53036 Beijing, Beijing, China, 100190 (e-mail: junjie@iscas.ac.cn); School of Systems and Enterprises, Stevens Institute of Technology, 33694 Hoboken, New Jersey, United States, (e-mail: yyang4@stevens.edu); Department of Electrical Engineering and Computer Science, York University, 7991 Toronto, Ontario, Canada, (e-mail: wangsong@eecs.yorku.ca); Faculty of Information Technology, Monash University, Melbourne, Victoria, Australia, 3800 (e-mail: chunyang.chen@monash.edu); Institute of Software, Chinese Academy of Sciences, Institute of Software Chinese Academy of Sciences, 53036 Beijing, Beijing, China, (e-mail: dandan@iscas.ac.cn); Institute of Software, Chinese Academy of Sciences, Beijing, Beijing, China, 100190 (e-mail: wq@itechs.iscas.ac.cn)","IEEE Transactions on Software Engineering","","2021","PP","99","1","1","Crowdsourced software testing (short for crowdtesting) is a special type of crowdsourcing. It requires that crowdworkers master appropriate skill-sets and commit significant effort for completing a task. Abundant uncertainty may arise during a crowdtesting process due to imperfect information between the task requester and crowdworkers. For example, a worker frequently chooses tasks in an ad hoc manner in crowdtesting context, and an inappropriate task selection may lead to the worker's failing to detect any bugs, and significant testing effort unpaid and wasted. Recent studies have explored methods for supporting task requesters to make informed decisions on task pricing, worker recommendation, and so on. Unfortunately, very few study offers decision making support from the crowdworkers' perspectives. We motivate this study through a pilot study, revealing the large portion (74\%) of unpaid crowdworkers' effort due to the inappropriate task choice. Drawn from our previous work on context-aware crowdworker recommendations, we advocate a more effective alternative to manual task selection would be to provide contextualized and personalized task recommendation considering the diverse distribution of worker preference and expertise, with objectives to increase their winning chances and to potentially reduce the frequency of unpaid crowd work. This paper proposes a context-aware personalized task recommendation approach PTRec, consisting of a testing context model and a learning-based task recommendation model to aid dynamic worker decision in selecting crowdtesting tasks. The testing context model is constructed in two perspectives, i.e., process context and resource context, to capture the in-process progress-oriented information and crowdworkers' characteristics respectively. Built on top of this context model, the learning-based task recommendation model extracts 60 features automatically, and employs random forest learner to generate dynamic and personalized task recommendation which matches workers' expertise and interest. The evaluation is conducted on 636 crowdtesting tasks involving 2,404 crowdworkers from one of the largest crowdtesting platforms, and results show the potential in recommending proper tasks to workers so as to improve bug detection efficiency and increase their monetary earnings.","1939-3520","","10.1109/TSE.2021.3081171","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9435104","Crowdsourced testing;Task recommendation;Testing context model","Task analysis;Computer bugs;Testing;Context modeling;Feature extraction;Crowdsourcing;Videos","","","","1","","","IEEE","18 May 2021","","","IEEE","IEEE Early Access Articles"
"LinkLab: A Scalable and Heterogeneous Testbed for Remotely Developing and Experimenting IoT Applications","Y. Gao; J. Zhang; G. Guan; W. Dong",Zhejiang University; Zhejiang University; Zhejiang University; Zhejiang University,"2020 IEEE/ACM Fifth International Conference on Internet-of-Things Design and Implementation (IoTDI)","21 May 2020","2020","","","176","188","Developing and experimenting IoT applications are still difficult and time-consuming, mainly due to their heterogeneous hardware and diverse software. Testbeds are useful for developers to test the performance of IoT applications before deploying them to the fields. In this paper, we present LinkLab (http://linklab.emnets.org), a scalable IoT testbed for heterogeneous devices. Compared with existing IoT testbeds, LinkLab not only supports running experiments but also supports remote development via a web-based IDE and remote compiling. Therefore, LinkLab is able to improve the efficiency of the developing-experimenting-optimizing loop for IoT developers. By using a distributed architecture, LinkLab is a scalable, multi-site, and multi-user IoT testbed, with fine-grained access control and a flexible naming mechanism. Further, an incremental online compilation and a multi-user cache techniques are used to speed up the cross compilation process. LinkLab is implemented with more than 150 IoT devices and evaluated by case studies, micro-benchmarks, and real experiments. Results show that LinkLab achieves convenient application development, efficient online compilation, and robust device management under various evaluation settings.","","978-1-7281-6602-5","10.1109/IoTDI49375.2020.00025","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9097619","IoT Testbed;heterogeneous IoT devices;remote development and experimentation","Sensors;Wireless sensor networks;Protocols;Computer architecture;Hardware;Interference;Software","authorisation;Internet;Internet of Things;program compilers","heterogeneous hardware;scalable IoT;heterogeneous devices;remote development;remote compiling;developing-experimenting-optimizing loop;IoT developers;multiuser IoT;IoT devices","","3","","26","","21 May 2020","","","IEEE","IEEE Conferences"
"Guest Editorial: A Retrospective of Special Sections on Software Testing and Program Analysis","T. H. Tse; Y. L. Traon; Z. Chen","Department of Computer Science, The University of Hong Kong, Pokfulam, Hong Kong; Interdisciplinary Centre for Security, Reliability and Trust, University of Luxembourg, Esch-sur-Alzette, Luxembourg; State Key Laboratory for Novel Software Technology, Nanjing University, Nanjing, China","IEEE Transactions on Reliability","8 Jun 2021","2021","70","2","443","445","Software plays an integral part in our lives today because of its near-ubiquitous influence on our increasingly technological society. Taking appropriate steps to improve software quality is of paramount importance. This has fueled a surge of techniques in program testing and analysis. Unfortunately, these techniques still suffer from immaturity and impracticality, which have hindered truthful benefits to the software industry. The Special Sections on Software Testing and Program Analysis solicited original work that would provide novel techniques and/or comprehensive empirical validation applicable to real-world software. We successfully attracted more than 70 submissions covering diverse hot topics. After rigorous evaluations by hard-working reviewers, possibly with recommendations for major and minor revisions, we have published 26 articles in five issues of the IEEE Transactions on Reliability in June, September, and December 2018, January 2019, and June 2021. The articles represent a comprehensive cross section of testing and analysis techniques, as well as a wide variety of applications to practical projects. The present retrospective provides readers with interesting details about our great success and a small challenge.","1558-1721","","10.1109/TR.2021.3083375","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9448288","","Special issues and sections;Software testing;Workflow management software;Software quality;Software systems;Software reliability","","","","","","0","IEEE","8 Jun 2021","","","IEEE","IEEE Journals"
"Introduction to tool demonstrations","H. Prähofer; S. Uchitel",NA; NA,"Proceedings. 19th International Conference on Automated Software Engineering, 2004.","18 Oct 2004","2004","","","xv","xvi","Automated software engineering is concerned with computational means to automate or partially automate software engineering tasks to achieve significant improvements in software quality and productivity. Tools therefore play a dominant role within the automated software engineering. The tool demonstration session at the ASE ’04 conference accounts for that by providing a forum to show and discuss new tool developments that highlight scientific contributions to the field of Automated Software Engineering. This year we received 25 submissions for tool demonstrations, each submission was reviewed by at least two reviewers and 6 proposals were accepted as formal tool demonstrations while 11 were accepted as informal demonstrations. Each formal tool demonstrations will have a time slot in the conference programme while informal demonstrations will be given a space at the conference site where they will be able to present their work to conference attendees. The formal demonstrations to be given this year bring together a diverse set of tools that provide support for main tasks of the software engineering life cycle. The tools presented range from tools supporting requirement engineering, software modelling, software configuration, software inspection, software visualization and software testing.","1938-4300","0-7695-2131-2","10.1109/ASE.2004.1342716","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1342716","","Software tools;Software engineering;Software testing;Software performance;Electronic equipment testing;Automatic testing;Logic testing;System testing;Mobile computing;Inspection","","","","","","","","18 Oct 2004","","","IEEE","IEEE Conferences"
"Cooperative and human aspects of software engineering (CHASE 2009)","C. de Souza; H. Sharp; Y. Dittrich; J. Singer","UFPA, Brazil; Open University, UK; IT University of Copenhagen, Denmark; NRC, Canada","2009 31st International Conference on Software Engineering - Companion Volume","12 Jun 2009","2009","","","451","452","The CHASE 2009 workshop is concerned with exploring the cooperative and human aspects of software engineering, and providing a forum for discussing high-quality research. Accepted papers reflect the diversity of the field of software engineering - ranging from requirements to testing, and from ethnographic research to experiments. Moreover, the background of attendees reflects the diversity of researchers in this domain, ranging from sociology to psychology, from informatics to software engineering. CHASE 2009 met its goals in presenting high-quality research and building community through a mixture of presentations, discussions, posters, and social activities.","","978-1-4244-3495-4","10.1109/ICSE-COMPANION.2009.5071057","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5071057","","Humans;Software engineering;Cultural differences;Collaborative work;Software testing;Psychology;Engineering management;Programming;Software maintenance;Information systems","","","","3","","3","","12 Jun 2009","","","IEEE","IEEE Conferences"
"Message from the Program Co-Chairs","",,"2020 IEEE International Conference On Artificial Intelligence Testing (AITest)","25 Aug 2020","2020","","","i","i","The Second IEEE International Conference on Artificial Intelligence Testing (AITest) is held in Oxford, UK, on April 13th-16th, 2020 as part of a set of joint conferences and workshops. The goal of organizing this event is to bring together researchers and practitioners to discuss new scientific results and solutions to the timely and challenging problem of testing artificial intelligence models and methods and, conversely, on the use of artificial intelligence in software testing. It is a great honor to have as a distinguished keynote speaker Professor Kerstin Eder from the University of Bristol, UK, an expert in design automation and verification with particular interest in robot trustworthiness and safety. We also have an invited talk from Dr Jie Zhang from UCL, UK, on the state of the art of testing machine learning models. As Program Co-Chairs of the conference, we have solicited two types of original contributions, long (eight pages) papers and short (two pages) papers. We finally selected 17 long papers and 3 short papers to be included into these proceedings from 49 abstract submissions and 41 papers eventually submitted. Each paper has been carefully reviewed by at least three members of the Program Committee, who provided informative and detailed reviews. These papers cover diverse aspects of software testing and artificial intelligence and carry strong scientific results in terms of innovation. Together with the keynote speech and invited talk they form a solid and ambitious scientific program for the conference.","","978-1-7281-6984-2","10.1109/AITEST49225.2020.00006","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9176801","","","","","","","","","","25 Aug 2020","","","IEEE","IEEE Conferences"
"Introduction to tool demonstrations","",,"21st IEEE/ACM International Conference on Automated Software Engineering (ASE'06)","4 Dec 2006","2006","","","xv","xv","Automated software engineering is concerned with how to apply computation to automate or partially automate software engineering tasks to achieve significant improvements in quality and productivity. Tools therefore play a dominant role within automated software engineering. The tool demonstration session at the ASE'06 conference accounts for that by providing a forum to show and discuss new tool developments that highlight scientific contributions to the field of Automated Software Engineering. This year we have 9 tool demonstrations, each of which was reviewed by two reviewers. Each tool demonstration will have a time slot in the conference program, and also will be given a space at the conference site where conference attendees will be able to ask additional questions and see a personal demonstration. The demonstrations to be given this year bring together a diverse set of tools that provide support for main tasks of the software engineering life cycle. The tools presented range from tools supporting software generation and transformation, requirement engineering, software testing, software verification, and software modeling.","1938-4300","0-7695-2579-2","10.1109/ASE.2006.44","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4019554","","","","","","","","","","4 Dec 2006","","","IEEE","IEEE Conferences"
