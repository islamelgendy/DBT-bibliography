@inproceedings{10.1145/3475716.3484196,
author = {Bojarczuk, K. and Gucevska, N. and Lucas, S. and Dvortsova, I. and Harman, M. and Meijer, E. and Sapora, S. and George, J. and Lomeli, M. and Rojas, R.},
title = {Measurement Challenges for Cyber Cyber Digital Twins: Experiences from the Deployment of Facebook's WW Simulation System},
year = {2021},
isbn = {9781450386654},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3475716.3484196},
doi = {10.1145/3475716.3484196},
abstract = {A cyber cyber digital twin is a deployed software model that executes in tandem with the system it simulates, contributing to, and drawing from, the system's behaviour. This paper outlines Facebook's cyber cyber digital twin, dubbed WW, a twin of Facebook's WWW platform, built using web-enabled simulation. The paper focuses on the current research challenges and opportunities in the area of measurement. Measurement challenges lie at the heart of modern simulation. They directly impact how we use simulation outcomes for automated online and semi-automated offline decision making. Measurements also encompas how we verify and validate those outcomes. Modern simulation systems are increasingly becoming more like cyber cyber digital twins, effectively moving from manual to automated decision making, hence, these measurement challenges acquire ever greater significance.},
booktitle = {Proceedings of the 15th ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM)},
articleno = {2},
numpages = {10},
keywords = {Digital Twin, Simulation, Social Media, Software Measurement},
location = {Bari, Italy},
series = {ESEM '21}
}

@article{10.1145/3505243,
author = {Yang, Yanming and Xia, Xin and Lo, David and Grundy, John},
title = {A Survey on Deep Learning for Software Engineering},
year = {2021},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
issn = {0360-0300},
url = {https://doi.org/10.1145/3505243},
doi = {10.1145/3505243},
abstract = {In 2006, Geoffrey Hinton proposed the concept of training “Deep Neural Networks (DNNs)” and an improved model training method to break the bottleneck of neural network development. More recently, the introduction of AlphaGo in 2016 demonstrated the powerful learning ability of deep learning and its enormous potential. Deep learning has been increasingly used to develop state-of-the-art software engineering (SE) research tools due to its ability to boost performance for various SE tasks. There are many factors, e.g., deep learning model selection, internal structure differences, and model optimization techniques, that may have an impact on the performance of DNNs applied in SE. Few works to date focus on summarizing, classifying, and analyzing the application of deep learning techniques in SE. To fill this gap, we performed a survey to analyze the relevant studies published since 2006. We first provide an example to illustrate how deep learning techniques are used in SE. We then conduct a background analysis (BA) of primary studies and present four research questions to describe the trend of DNNs used in SE (BA), summarize and classify different deep learning techniques (RQ1), analyze the data processing including data collection, data classification, data pre-processing, and data representation (RQ2). In RQ3, we depicted a range of key research topics using DNNs and investigated the relationships between DL-based model adoption and multiple factors (i.e., DL architectures, task types, problem types, and data types). We also summarized commonly used datasets for different SE tasks. In RQ4, we summarized the widely used optimization algorithms and provided important evaluation metrics for different problem types, including regression, classification, recommendation, and generation. Based on our findings, we present a set of current challenges remaining to be investigated and outline a proposed research road map highlighting key opportunities for future work.},
note = {Just Accepted},
journal = {ACM Comput. Surv.},
month = {dec},
keywords = {machine learning, software engineering, Deep learning, neural network, survey}
}

@inproceedings{10.1145/3411763.3441341,
author = {(Adi) Tedjasaputra, Josh and Paul V. Samson, Briane and Ghazali, Masitah and Sari, Eunice and Sarcar, Sayan and Gamage, Dilrukshi and Fujita, Kazuyuki and Jain, Pranjal and Jena, Amit and Palma Monserrat, Toni-Jan Keith and Sindi, Nabila and Zhao, Kaixing and Aiko Deja, Jordan and Fotedar, Manvi and Joshi, Manjiri and Li, Yang and Lu, Zhicong and Matsufuji, Akihiro and Miyafuji, Shio and Sengupta, Korok and Singh, Diksha and Singh, Simran and Taufiqulhakim, Umar},
title = {Asian CHI Symposium: HCI Research from Asia and on Asian Contexts and Cultures},
year = {2021},
isbn = {9781450380959},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3411763.3441341},
doi = {10.1145/3411763.3441341},
abstract = {The Asian CHI symposium 2021 is the joint event organized by the researchers and practitioners in Asia. The symposium aims to bring together young and senior researchers from the academics and industries in one forum to exchange ideas and foster social network in the field of HCI. The symposium showcases the latest HCI work from Asia and those focusing on incorporating Asian sociocultural factors in their design and implementation. In addition to circulating ideas and envisioning future research in human-computer interaction, this symposium aims to foster social networks among academics (researchers and students) and practitioners and grow a research community from Asia.},
booktitle = {Extended Abstracts of the 2021 CHI Conference on Human Factors in Computing Systems},
articleno = {80},
numpages = {5},
keywords = {Interactive systems, Interaction techniques, Asia, User interfaces, Interaction design},
location = {Yokohama, Japan},
series = {CHI EA '21}
}

@inproceedings{10.1109/ICSE43902.2021.00090,
author = {Yu, Shengcheng and Fang, Chunrong and Cao, Zhenfei and Wang, Xu and Li, Tongyu and Chen, Zhenyu},
title = {Prioritize Crowdsourced Test Reports via Deep Screenshot Understanding},
year = {2021},
isbn = {9781450390859},
publisher = {IEEE Press},
url = {https://doi.org/10.1109/ICSE43902.2021.00090},
doi = {10.1109/ICSE43902.2021.00090},
abstract = {Crowdsourced testing is increasingly dominant in mobile application (app) testing, but it is a great burden for app developers to inspect the incredible number of test reports. Many researches have been proposed to deal with test reports based only on texts or additionally simple image features. However, in mobile app testing, texts contained in test reports are condensed and the information is inadequate. Many screenshots are included as complements that contain much richer information beyond texts. This trend motivates us to prioritize crowdsourced test reports based on a deep screenshot understanding.In this paper, we present a novel crowdsourced test report prioritization approach, namely DeepPrior. We first represent the crowdsourced test reports with a novelly introduced feature, namely DeepFeature, that includes all the widgets along with their texts, coordinates, types, and even intents based on the deep analysis of the app screenshots, and the textual descriptions in the crowdsourced test reports. DeepFeature includes the Bug Feature, which directly describes the bugs, and the Context Feature, which depicts the thorough context of the bug. The similarity of the DeepFeature is used to represent the test reports' similarity and prioritize the crowdsourced test reports. We formally define the similarity as DeepSimilarity. We also conduct an empirical experiment to evaluate the effectiveness of the proposed technique with a large dataset group. The results show that DeepPrior is promising, and it outperforms the state-of-the-art approach with less than half the overhead.},
booktitle = {Proceedings of the 43rd International Conference on Software Engineering},
pages = {946–956},
numpages = {11},
keywords = {Crowdsourced testing, Deep Screenshot Understanding, Mobile App Testing},
location = {Madrid, Spain},
series = {ICSE '21}
}

@inproceedings{10.5555/1030818.1030924,
author = {Himmelspach, Jan and R\"{o}hl, Mathias and Uhrmacher, Adelinde M.},
title = {Next Generation Modeling III - Agents: Simulation for Testing Software Agents - an Exploration Based on James},
year = {2003},
isbn = {0780381327},
publisher = {Winter Simulation Conference},
abstract = {Agents are software systems aimed at working in dynamic environments. Simulation systems can be used to provide virtual environments for testing agents. The software to be tested, the objective of the simulation study, and the stage of the agent software development influences both: the environmental models used for testing and the mechanisms that synchronize the execution of agents and simulation. A clear distinction between model and simulation layer, and a modular design of the simulation system support the required flexibility. Based on the simulation system James (a Java based Agent Modeling Environment for Simulation) and two agent applications we will explore, how interfaces between virtual environments and software agents can be explicitly specified at the modeling level and suitable mechanisms for synchronization might be chosen on demand.},
booktitle = {Proceedings of the 35th Conference on Winter Simulation: Driving Innovation},
pages = {799–807},
numpages = {9},
location = {New Orleans, Louisiana},
series = {WSC '03}
}

@inbook{10.1145/3340433.3342820,
author = {\c{T}urlea, Ana},
title = {Testing Extended Finite State Machines Using NSGA-III},
year = {2019},
isbn = {9781450368506},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3340433.3342820},
abstract = {Finite state machines (FSMs) are widely used in test data generation approaches. An extended finite state machine (EFSM) extends the FSM with memory (context variables), guards for each transition and assignment operations. In FSMs all paths are feasible, but the existence of context variables combined with guards in EFSMs can lead to infeasible paths. Using EFSMs in test data generation, we are dealing with feasibility problems. This paper presents a test suite generation algorithm for EFSMs. The algorithm produces a set of feasible transition paths (test cases) that cover all transitions using NSGA-III. We also measure the similarities between test cases from the generated test suite.},
booktitle = {Proceedings of the 10th ACM SIGSOFT International Workshop on Automating TEST Case Design, Selection, and Evaluation},
pages = {1–7},
numpages = {7}
}

@inproceedings{10.1145/2804381.2804389,
author = {Dodig-Crnkovic, Gordana},
title = {Preparing next Generation of Software Engineers for Future Societal Challenges and Opportunities},
year = {2015},
isbn = {9781450338189},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2804381.2804389},
doi = {10.1145/2804381.2804389},
abstract = { As a global community we are facing number of existential challenges like global warming, deficit of basic commodities, environmental degradation and other threats to life on earth, as well as possible unintended consequences of AI, nano-technology, biotechnology, and similar. Among world-wide responses to those challenges the framework programme for European research and technological development, Horizon 2020, have formulated the Science with and for Society Work Programme, based on Responsible Research and Innovation with a goal to support research contributing to the progress of humanity and preventing catastrophic events and their consequences. This goal may only be reached if we educate responsible researchers and engineers with both deep technical knowledge and broad disciplinary and social competence. From the perspective of experiences at two Swedish Universities, this paper argues for the benefits of teaching professional ethics and sustainable development to engineering students. },
booktitle = {Proceedings of the 7th International Workshop on Social Software Engineering},
pages = {49–52},
numpages = {4},
keywords = {Research Ethics, Engineering Ethics, Social Software Engineering, Computer Ethics, Responsible Research and Innovation, T-shaped Engineer, Sustainable Development},
location = {Bergamo, Italy},
series = {SSE 2015}
}

@inproceedings{10.1145/2996890.2996899,
author = {Canuto, Mauro and Bosch, Raimon and Macias, Mario and Guitart, Jordi},
title = {A Methodology for Full-System Power Modeling in Heterogeneous Data Centers},
year = {2016},
isbn = {9781450346160},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2996890.2996899},
doi = {10.1145/2996890.2996899},
abstract = {The need for energy-awareness in current data centers has encouraged the use of power modeling to estimate their power consumption. However, existing models present noticeable limitations, which make them application-dependent, platform-dependent, inaccurate, or computationally complex. In this paper, we propose a platform-and application-agnostic methodology for full-system power modeling in heterogeneous data centers that overcomes those limitations. It derives a single model per platform, which works with high accuracy for heterogeneous applications with different patterns of resource usage and energy consumption, by systematically selecting a minimum set of resource usage indicators and extracting complex relations among them that capture the impact on energy consumption of all the resources in the system. We demonstrate our methodology by generating power models for heterogeneous platforms with very different power consumption profiles. Our validation experiments with real Cloud applications show that such models provide high accuracy (around 5% of average estimation error).},
booktitle = {Proceedings of the 9th International Conference on Utility and Cloud Computing},
pages = {20–29},
numpages = {10},
location = {Shanghai, China},
series = {UCC '16}
}

@inproceedings{10.1145/3510858.3510904,
author = {Liang, Jing},
title = {Design and Implementation of the German Dual System Teacher Team Construction Management System Based on Improved Co-Evolution Algorithm},
year = {2021},
isbn = {9781450390422},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3510858.3510904},
doi = {10.1145/3510858.3510904},
abstract = {With the rapid development of the construction industry, the scale of students in the college is also expanding. At present, there are many problems in the management of teachers, especially for the training of college teachers and the information management of teacher recruitment. At the same time, there is no clear division in the assessment of full-time teachers and part-time teachers outside the school. This paper realizes the design of relevant functional modules in the comprehensive information analysis of faculty construction, such as basic data information of faculty, annual assessment management of teachers' ethics and style, performance assessment management of teachers, comprehensive information query management of teachers, system and operation authority management, The system automatically calculates the final teacher performance evaluation ranking according to the comprehensive performance of teachers in school and the evaluation of teachers by students and other personnel, and forms the relevant teacher evaluation results into data analysis. College leaders can master the comprehensive information construction of teachers according to the data provided. The response time of the system is within 3 seconds, meeting the basic requirements of the system. The implementation of the system solves the requirements of the information construction of college teachers and improves the work efficiency of teachers.},
booktitle = {2021 International Conference on Aviation Safety and Information Technology},
pages = {114–117},
numpages = {4},
location = {Changsha, China},
series = {ICASIT 2021}
}

@inproceedings{10.1145/1734263.1734401,
author = {Zhang, Ming and Lo, Virginia M.},
title = {Undergraduate Computer Science Education in China},
year = {2010},
isbn = {9781450300063},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1734263.1734401},
doi = {10.1145/1734263.1734401},
abstract = {This paper examines the current status of professional computing education for undergraduate majors and fundamental computer education for non-majors in China. We describe the evolution of computing education over the past decade and its role in meeting society's requirements for IT talent, and we discuss developing trends for computing education at China's universities. We conclude with a description of the Computer Science major at Peking University, one of the nation's leading research-based computer science departments.},
booktitle = {Proceedings of the 41st ACM Technical Symposium on Computer Science Education},
pages = {396–400},
numpages = {5},
keywords = {computer science education, school of electronics engineering and computer science, peking university, china},
location = {Milwaukee, Wisconsin, USA},
series = {SIGCSE '10}
}

@article{10.1145/2614512.2614527,
author = {Shoemaker, Daniel P.},
title = {The Colloquium for Information System Security Education (CISSE)--the Adventure Continues},
year = {2014},
issue_date = {June 2014},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {5},
number = {2},
issn = {2153-2184},
url = {https://doi.org/10.1145/2614512.2614527},
doi = {10.1145/2614512.2614527},
journal = {ACM Inroads},
month = {jun},
pages = {50–54},
numpages = {5},
keywords = {cybersecurity, education and workforce development}
}

@article{10.1145/505532.505548,
author = {Harman, Mark and Jones, Bryan F.},
title = {The SEMINAL Workshop: Reformulating Software Engineering as a Metaheuristic Search Problem},
year = {2001},
issue_date = {November 2001},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {26},
number = {6},
issn = {0163-5948},
url = {https://doi.org/10.1145/505532.505548},
doi = {10.1145/505532.505548},
abstract = {This paper reports on the first international Workshop on Software Engineering using Metaheuristic INnovative ALgorithms.The aim of the workshop was to bring together researchers in search-based metaheuristic techniques with researchers and practitioners in Software Engineering. The workshop sought to support and develop the embryonic community which straddles these two communities and which is working on the application of metaheuristic search-based techniques to problems in Software Engineering.The paper outlines the nature of the nascent field of Search-Based Software Engineering, and briefly outlines the papers presented at the workshop and the discussions which took place.},
journal = {SIGSOFT Softw. Eng. Notes},
month = {nov},
pages = {62–66},
numpages = {5}
}

@inproceedings{10.1145/3184407.3184428,
author = {Stier, Christian and Domaschka, J\"{o}rg and Koziolek, Anne and Krach, Sebastian and Krzywda, Jakub and Reussner, Ralf},
title = {Rapid Testing of IaaS Resource Management Algorithms via Cloud Middleware Simulation},
year = {2018},
isbn = {9781450350952},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3184407.3184428},
doi = {10.1145/3184407.3184428},
abstract = {Infrastructure as a Service (IaaS) Cloud services allow users to deploy distributed applications in a virtualized environment without having to customize their applications to a specific Platform as a Service (PaaS) stack. It is common practice to host multiple Virtual Machines (VMs) on the same server to save resources. Traditionally, IaaS data center management required manual effort for optimization, e.g. by consolidating VM placement based on changes in usage patterns. Many resource management algorithms and frameworks have been developed to automate this process. Resource management algorithms are typically tested via experimentation or using simulation. The main drawback of both approaches is the high effort required to conduct the testing. Existing Cloud or IaaS simulators require the algorithm engineer to reimplement their algorithm against the simulator's API. Furthermore, the engineer manually needs to define the workload model used for algorithm testing. We propose an approach for the simulative analysis of IaaS Cloud infrastructure that allows algorithm engineers and data center operators to evaluate optimization algorithms without investing additional effort to reimplement them in a simulation environment. By leveraging runtime monitoring data, we automatically construct the simulation models used to test the algorithms. Our validation shows that algorithm tests conducted using our IaaS Cloud simulator match the measured behavior on actual hardware.},
booktitle = {Proceedings of the 2018 ACM/SPEC International Conference on Performance Engineering},
pages = {184–191},
numpages = {8},
keywords = {IaaS middleware simulation, power consumption prediction, cloud simulation, performance simulation, simulation-based testing of resource management algorithms, performance model extraction},
location = {Berlin, Germany},
series = {ICPE '18}
}

@article{10.1145/3460345,
author = {He, Shilin and He, Pinjia and Chen, Zhuangbin and Yang, Tianyi and Su, Yuxin and Lyu, Michael R.},
title = {A Survey on Automated Log Analysis for Reliability Engineering},
year = {2021},
issue_date = {July 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {54},
number = {6},
issn = {0360-0300},
url = {https://doi.org/10.1145/3460345},
doi = {10.1145/3460345},
abstract = {Logs are semi-structured text generated by logging statements in software source code. In recent decades, software logs have become imperative in the reliability assurance mechanism of many software systems, because they are often the only data available that record software runtime information. As modern software is evolving into a large scale, the volume of logs has increased rapidly. To enable effective and efficient usage of modern software logs in reliability engineering, a number of studies have been conducted on automated log analysis. This survey presents a detailed overview of automated log analysis research, including how to automate and assist the writing of logging statements, how to compress logs, how to parse logs into structured event templates, and how to employ logs to detect anomalies, predict failures, and facilitate diagnosis. Additionally, we survey work that releases open-source toolkits and datasets. Based on the discussion of the recent advances, we present several promising future directions toward real-world and next-generation automated log analysis.},
journal = {ACM Comput. Surv.},
month = {jul},
articleno = {130},
numpages = {37},
keywords = {logging, log parsing, log mining, log compression, log analysis, Log}
}

@techreport{10.1145/2593248,
author = {Adcock, Rick and Alef, Edward and Amato, Bruce and Ardis, Mark and Bernstein, Larry and Boehm, Barry and Bourque, Pierre and Brackett, John and Cantor, Murray and Cassel, Lillian and Edson, Robert and Fairley, Richard and Frailey, Dennis and Hafen, Gary and Hilburn, Thomas and Hislop, Greg and Klappholz, David and Kruchten, Philippe and Laplante, Phil and Li, Qiaoyun (Liz) and Lucero, Scott and McDermid, John and McDonald, James and McDuffie, Ernest and Michael, Bret and Milam, William and Nidiffer, Ken and Pyster, Art and Robitaille, Paul and Shaw, Mary and Sheard, Sarah and Suritis, Robert and Towhidnejad, Massood and Thayer, Richard and Thompson, J. Barrie and Travassos, Guilherme and Turner, Richard and Urban, Joseph and Valerdi, Ricardo and Vikman, Osmo and Weiss, David and Willshire, Mary Jane},
title = {Curriculum Guidelines for Graduate Degree Programs in Software Engineering},
year = {2009},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA}
}

@inproceedings{10.1145/2593728.2593729,
author = {Prikladnicki, Rafael and Machado, Leticia and Carmel, Erran and de Souza, Cleidson R. B.},
title = {Brazil Software Crowdsourcing: A First Step in a Multi-Year Study},
year = {2014},
isbn = {9781450328579},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2593728.2593729},
doi = {10.1145/2593728.2593729},
abstract = { Crowdsourcing means outsourcing to a large network of people—a crowd. This form of managing work allocation has become much more sophisticated in recent years due to improvements in technology and changes in the work ecosystem. Crowdsourcing portends-- not only the disruption of outsourcing-- but the disruption of the entire global labor market. Small, atomized, tasks that can be completed and paid for in small increments are unprecedented in the history of work. Software has been the pioneer in all the large mega-trends of the last generation: in computer technology, technological entrepreneurship, offshore outsourcing, and now-- in crowdsourcing. This paper describes the starting point of a research project that aims to investigate the Brazilian software labor and industry markets. These markets are being transformed and disrupted as a result of the new phenomena of crowdsourcing. To be more specific, we aim to understand how the three elements of crowdsourcing are emerging in Brazil – the buyers, the platforms, and the crowd. The goal of our project is to identify the challenges faced by Brazilian software developers engaged in crowdsourcing platforms as well as their best practices in order to provide recommendations to the government and support for new developers interested in joining this market. },
booktitle = {Proceedings of the 1st International Workshop on CrowdSourcing in Software Engineering},
pages = {1–4},
numpages = {4},
keywords = {Crowdsourcing, human labor, software development},
location = {Hyderabad, India},
series = {CSI-SE 2014}
}

@inproceedings{10.1145/3321707.3321761,
author = {Shand, Cameron and Allmendinger, Richard and Handl, Julia and Webb, Andrew and Keane, John},
title = {Evolving Controllably Difficult Datasets for Clustering},
year = {2019},
isbn = {9781450361118},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3321707.3321761},
doi = {10.1145/3321707.3321761},
abstract = {Synthetic datasets play an important role in evaluating clustering algorithms, as they can help shed light on consistent biases, strengths, and weaknesses of particular techniques, thereby supporting sound conclusions. Despite this, there is a surprisingly small set of established clustering benchmark data, and many of these are currently handcrafted. Even then, their difficulty is typically not quantified or considered, limiting the ability to interpret algorithmic performance on these datasets. Here, we introduce HAWKS, a new data generator that uses an evolutionary algorithm to evolve cluster structure of a synthetic data set. We demonstrate how such an approach can be used to produce datasets of a pre-specified difficulty, to trade off different aspects of problem difficulty, and how these interventions directly translate into changes in the clustering performance of established algorithms.},
booktitle = {Proceedings of the Genetic and Evolutionary Computation Conference},
pages = {463–471},
numpages = {9},
keywords = {problem generator, benchmarking, evolutionary optimization, clustering test problems, test suite},
location = {Prague, Czech Republic},
series = {GECCO '19}
}

@inproceedings{10.1109/FormaliSE.2019.00015,
author = {Cordy, Maxime and Legay, Axel and Lazreg, Sami and Collet, Philippe},
title = {Towards Sampling and Simulation-Based Analysis of Featured Weighted Automata},
year = {2019},
publisher = {IEEE Press},
url = {https://doi.org/10.1109/FormaliSE.2019.00015},
doi = {10.1109/FormaliSE.2019.00015},
abstract = {We consider the problem of model checking Variability-Intensive Systems (VIS) against non-functional requirements. These requirements are typically expressed as an optimization problem over quality attributes of interest, whose value is determined by the executions of the system. Identifying the optimal variant can be hard due to the state-explosion problem inherent to model checking the exponentially growing number of variants in large VIS. In this paper, we lay the foundations for the application of smart sampling and statistical model checking to solve this problem faster. We design a simple method that samples variants and executions in a uniform manner from a featured weighted automaton and that assesses which of the sampled variants/executions are optimal. We implemented our approach on top of ProVeLines, a tool suite for model-checking VIS and carried out a preliminary evaluation on an industrial embedded system design case study. Our results show that sampling-based approaches indeed holds the potential to improve scalability but should be supported by better heuristics to be competitive.},
booktitle = {Proceedings of the 7th International Workshop on Formal Methods in Software Engineering},
pages = {61–64},
numpages = {4},
keywords = {variability, sampling, model checking},
location = {Montreal, Quebec, Canada},
series = {FormaliSE '19}
}

@article{10.1145/382294.382710,
author = {Knight, John C. and Leveson, Nancy G.},
title = {A Reply to the Criticisms of the Knight &amp; Leveson Experiment},
year = {1990},
issue_date = {Jan 1990},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {15},
number = {1},
issn = {0163-5948},
url = {https://doi.org/10.1145/382294.382710},
doi = {10.1145/382294.382710},
journal = {SIGSOFT Softw. Eng. Notes},
month = {jan},
pages = {24–35},
numpages = {12}
}

@article{10.1145/979743.979745,
author = {ACM SIGSOFT Software Engineering Notes staff},
title = {Back Matter (Abstracts and Calendar)},
year = {2004},
issue_date = {March 2004},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {29},
number = {2},
issn = {0163-5948},
url = {https://doi.org/10.1145/979743.979745},
doi = {10.1145/979743.979745},
journal = {SIGSOFT Softw. Eng. Notes},
month = {mar},
pages = {27–62},
numpages = {36}
}

