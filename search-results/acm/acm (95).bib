@inproceedings{10.1145/2381716.2381813,
author = {Alboaie, Lenuta and Vaida, Mircea-Florin and Pojar, Diana},
title = {Alternative Methodologies for Automated Grouping in Education and Research},
year = {2012},
isbn = {9781450311854},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2381716.2381813},
doi = {10.1145/2381716.2381813},
abstract = {Education and research activities are now oriented on groups to solve complex tasks and develop collaboration skills. Agile Software methodologies, psychology and spirituality elements, information technology developments offer possibilities to create dynamic and efficient groups. In education, classical grouping strategies can't be used in e-learning environments where there's little or no physical interaction between parties.We developed a web application that takes into account the alternative determined student - researcher typologies, according to the Enneagram methodology, and with a MBTI (Myers-Briggs Type Indicator) test. A simple and complex Enneagram test will determine the 9 base typologies. A psychological base test will determine the MBTI profiles. A correlation between enneagram and the MBTI typology is performed by the web application to generate and refine the grouping process in an automated manner. Case studies as Alternative1 and 2 described in the general algorithm show that groups created using this method have an increased communication among the members and better practical results. This is due to the members' compatibility, which facilitates better collaboration in education and research.},
booktitle = {Proceedings of the CUBE International Information Technology Conference},
pages = {508–513},
numpages = {6},
keywords = {web application, e-learning, Enneagram, MBTI},
location = {Pune, India},
series = {CUBE '12}
}

@inproceedings{10.1145/3511430.3511468,
author = {MS, Srinivasan},
title = {A Report on the First Workshop on Changing Phases of Software Engineering with the Generations},
year = {2022},
isbn = {9781450396189},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3511430.3511468},
doi = {10.1145/3511430.3511468},
abstract = { With the industry moving towards Cloud, Software Engineering becomes center play in everything with an infusion of hybrid cloud, AI and Machine learning. The workshop focuses on Software engineering transformation driven by Cloud, AI and Machine learning journey. The workshop brings in both industry and academic views in building Software to meet the needs of the growing cloud market.},
booktitle = {15th Innovations in Software Engineering Conference},
articleno = {41},
numpages = {2},
keywords = {Continous Delivery, Monitoring, ML Ops, Continous Integration},
location = {Gandhinagar, India},
series = {ISEC 2022}
}

@article{10.1145/367045.367060,
author = {Letaief, Khaled Ben and Cheng, Roger and Murch, Ross D.},
title = {An Overview of the Center for Wireless Information Technology at the Hong Kong University of Science and Technology},
year = {2000},
issue_date = {April 2000},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {4},
number = {2},
issn = {1559-1662},
url = {https://doi.org/10.1145/367045.367060},
doi = {10.1145/367045.367060},
journal = {SIGMOBILE Mob. Comput. Commun. Rev.},
month = {apr},
pages = {44–48},
numpages = {5}
}

@article{10.1145/3356773.3356806,
author = {Stegh\"{o}fer, Jan-Philipp and Niu, Nan and Guo, Jin L.C. and Mahmoud, Anas},
title = {SST'19 - Software and Systems Traceability: Summary of the 10th International Workshop at the 41st International Conference on Software Engineering (ICSE), May 27, 2019},
year = {2019},
issue_date = {July 2019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {44},
number = {3},
issn = {0163-5948},
url = {https://doi.org/10.1145/3356773.3356806},
doi = {10.1145/3356773.3356806},
abstract = {Traceability is the ability to relate di erent artifacts during the development and operation of a system to each other. It enables program comprehension, change impact analysis, and facilitates the cooperation of engineers from di erent disciplines. The 10th International Workshop on Software and Systems Traceability (former International Workshop on Traceability in Emerging Forms of Software Engineering, TEFSE), explored the role and impact of traceability in modern software and systems development. The event brought together researchers and practitioners to examine the challenges of recovering, maintaining, and utilizing traceability for the myriad forms of software and systems engineering artifacts. SST'19 was a highly interactive working event focused on discussing the main problems related to software traceability in particular in the context of opportunities and challenges posed by the recent progress in Arti cial Intelligence techniques and proposing possible solutions for such problems.},
journal = {SIGSOFT Softw. Eng. Notes},
month = {nov},
pages = {43–47},
numpages = {5},
keywords = {requirements, traceability, artificial intelligence}
}

@article{10.1145/2398356.2398361,
author = {Reed, Daniel},
title = {Lost in Translation},
year = {2013},
issue_date = {January 2013},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {56},
number = {1},
issn = {0001-0782},
url = {https://doi.org/10.1145/2398356.2398361},
doi = {10.1145/2398356.2398361},
abstract = {The Communications Web site, http://cacm.acm.org, features more than a dozen bloggers in the BLOG@CACM community. In each issue of Communications, we'll publish selected posts or excerpts.twitterFollow us on Twitter at http://twitter.com/blogCACMhttp://cacm.acm.org/blogs/blog-cacmDaniel Reed on straddling the intellectual divide between technology experts and policymakers.},
journal = {Commun. ACM},
month = {jan},
pages = {16–17},
numpages = {2}
}

@inproceedings{10.1145/2407796.2407801,
author = {Lee, David and Smith, Andy and Mortimer, Mike},
title = {Cultural Differences Affecting Quality and Productivity in Western/Asian Offshore Software Development},
year = {2011},
isbn = {9781450307291},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2407796.2407801},
doi = {10.1145/2407796.2407801},
abstract = {In this paper we present the results of a survey of Western and Asian software developers focusing on cultural differences in approaches to quality and productivity. It details significant differences in approaches to both quality and productivity. In discussion, these differences are considered to be a result both of inherent cultural differences between cultures and differences in the development and structure of the relevant national software communities. Results indicate significant attitude differences in software developers not only between those working in Asia and those in the West, but also with different Asian development countries. These results have implications both for Western clients and Asian offshore vendors/partners involved in offshoring.},
booktitle = {Proceedings of the 3rd International Conference on Human Computer Interaction},
pages = {29–39},
numpages = {11},
keywords = {offshoring, productivity, culture, quality},
location = {Bangalore, India},
series = {IndiaHCI '11}
}

@article{10.1145/3360497,
author = {Garousi, Vahid and Giray, Gorkem and Tuzun, Eray},
title = {Understanding the Knowledge Gaps of Software Engineers: An Empirical Analysis Based on SWEBOK},
year = {2019},
issue_date = {March 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {1},
url = {https://doi.org/10.1145/3360497},
doi = {10.1145/3360497},
abstract = {Context: Knowledge level and productivity of the software engineering (SE) workforce are the subject of regular discussions among practitioners, educators, and researchers. There have been many efforts to measure and improve the knowledge gap between SE education and industrial needs.Objective: Although the existing efforts for aligning SE education and industrial needs have provided valuable insights, there is a need for analyzing the SE topics in a more “fine-grained” manner; i.e., knowing that SE university graduates should know more about requirements engineering is important, but it is more valuable to know the exact topics of requirements engineering that are most important in the industry.Method: We achieve the above objective by assessing the knowledge gaps of software engineers by designing and executing an opinion survey on levels of knowledge learned in universities versus skills needed in industry. We designed the survey by using the SE knowledge areas (KAs) from the latest version of the Software Engineering Body of Knowledge (SWEBOK v3), which classifies the SE knowledge into 12 KAs, which are themselves broken down into 67 subareas (sub-KAs) in total. Our analysis is based on (opinion) data gathered from 129 practitioners, who are mostly based in Turkey.Results: Based on our findings, we recommend that educators should include more materials on software maintenance, software configuration management, and testing in their SE curriculum. Based on the literature as well as the current trends in industry, we provide actionable suggestions to improve SE curriculum to decrease the knowledge gap.},
journal = {ACM Trans. Comput. Educ.},
month = {nov},
articleno = {3},
numpages = {33},
keywords = {Software engineering education, education research, opinion survey, skill gaps, empirical study, knowledge gaps}
}

@article{10.1145/2379776.2379787,
author = {Harman, Mark and Mansouri, S. Afshin and Zhang, Yuanyuan},
title = {Search-Based Software Engineering: Trends, Techniques and Applications},
year = {2012},
issue_date = {November 2012},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {45},
number = {1},
issn = {0360-0300},
url = {https://doi.org/10.1145/2379776.2379787},
doi = {10.1145/2379776.2379787},
abstract = {In the past five years there has been a dramatic increase in work on Search-Based Software Engineering (SBSE), an approach to Software Engineering (SE) in which Search-Based Optimization (SBO) algorithms are used to address problems in SE. SBSE has been applied to problems throughout the SE lifecycle, from requirements and project planning to maintenance and reengineering. The approach is attractive because it offers a suite of adaptive automated and semiautomated solutions in situations typified by large complex problem spaces with multiple competing and conflicting objectives.This article1 provides a review and classification of literature on SBSE. The work identifies research trends and relationships between the techniques applied and the applications to which they have been applied and highlights gaps in the literature and avenues for further research.},
journal = {ACM Comput. Surv.},
month = {dec},
articleno = {11},
numpages = {61},
keywords = {survey, Software engineering, search-based techniques}
}

@inproceedings{10.1145/2593702.2593720,
author = {Waychal, Pradeep},
title = {The Calling of the Third Dimension},
year = {2014},
isbn = {9781450328609},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2593702.2593720},
doi = {10.1145/2593702.2593720},
abstract = { Software is now an essential ingredient of everyday life. The discipline of software engineering, therefore, must keep pace with the growing demands placed on it, and needs to mature expeditiously. Towards that, this human intensive discipline has to look beyond traditional process and technology initiatives. It needs to explore leveraging of human sciences that can potentially pay great dividends. The short paper lists a set of research problems at the intersection of software engineering and human sciences and our initial forays into some of them. },
booktitle = {Proceedings of the 7th International Workshop on Cooperative and Human Aspects of Software Engineering},
pages = {123–126},
numpages = {4},
keywords = {Intersection of software engineering and human sciences},
location = {Hyderabad, India},
series = {CHASE 2014}
}

@inproceedings{10.1145/3468264.3468543,
author = {Zhao, Nengwen and Chen, Junjie and Yu, Zhaoyang and Wang, Honglin and Li, Jiesong and Qiu, Bin and Xu, Hongyu and Zhang, Wenchi and Sui, Kaixin and Pei, Dan},
title = {Identifying Bad Software Changes via Multimodal Anomaly Detection for Online Service Systems},
year = {2021},
isbn = {9781450385626},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3468264.3468543},
doi = {10.1145/3468264.3468543},
abstract = {In large-scale online service systems, software changes are inevitable and frequent. Due to importing new code or configurations, changes are likely to incur incidents and destroy user experience. Thus it is essential for engineers to identify bad software changes, so as to reduce the influence of incidents and improve system re- liability. To better understand bad software changes, we perform the first empirical study based on large-scale real-world data from a large commercial bank. Our quantitative analyses indicate that about 50.4% of incidents are caused by bad changes, mainly be- cause of code defect, configuration error, resource contention, and software version. Besides, our qualitative analyses show that the current practice of detecting bad software changes performs not well to handle heterogeneous multi-source data involved in soft- ware changes. Based on the findings and motivation obtained from the empirical study, we propose a novel approach named SCWarn aiming to identify bad changes and produce interpretable alerts accurately and timely. The key idea of SCWarn is drawing support from multimodal learning to identify anomalies from heterogeneous multi-source data. An extensive study on two datasets with various bad software changes demonstrates our approach significantly outperforms all the compared approaches, achieving 0.95 F1-score on average and reducing MTTD (mean time to detect) by 20.4%∼60.7%. In particular, we shared some success stories and lessons learned from the practical usage.},
booktitle = {Proceedings of the 29th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
pages = {527–539},
numpages = {13},
keywords = {Online Service Systems, Software Change, Anomaly Detection},
location = {Athens, Greece},
series = {ESEC/FSE 2021}
}

@inproceedings{10.1145/2568225.2568226,
author = {Murphy-Hill, Emerson and Zimmermann, Thomas and Nagappan, Nachiappan},
title = {Cowboys, Ankle Sprains, and Keepers of Quality: How is Video Game Development Different from Software Development?},
year = {2014},
isbn = {9781450327565},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2568225.2568226},
doi = {10.1145/2568225.2568226},
abstract = { Video games make up an important part of the software industry, yet the software engineering community rarely studies video games. This imbalance is a problem if video game development differs from general software development, as some game experts suggest. In this paper we describe a study with 14 interviewees and 364 survey respondents. The study elicited substantial differences between video game development and other software development. For example, in game development, “cowboy coders” are necessary to cope with the continuous interplay between creative desires and technical constraints. Consequently, game developers are hesitant to use automated testing because of these tests’ rapid obsolescence in the face of shifting creative desires of game designers. These differences between game and non-game development have implications for research, industry, and practice. For instance, as a starting point for impacting game development, researchers could create testing tools that enable game developers to create tests that assert flexible behavior with little up-front investment. },
booktitle = {Proceedings of the 36th International Conference on Software Engineering},
pages = {1–11},
numpages = {11},
keywords = {games, practices, Software engineering},
location = {Hyderabad, India},
series = {ICSE 2014}
}

@inproceedings{10.1145/2464576.2464677,
author = {Reales Mateo, Pedro and Polo Usaola, Macario},
title = {Automated Test Generation for Multi-State Systems},
year = {2013},
isbn = {9781450319645},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2464576.2464677},
doi = {10.1145/2464576.2464677},
abstract = {This paper describes a genetic algorithm based on mutation testing to generate test cases for classes with multiple states. The fitness function is based on the coverability and the killability of the individuals. The paper includes a small empirical section that shows evidences of the ability of the algorithm to generate good test cases.},
booktitle = {Proceedings of the 15th Annual Conference Companion on Genetic and Evolutionary Computation},
pages = {211–212},
numpages = {2},
keywords = {test generation, mutation testing, genetic algorihtms},
location = {Amsterdam, The Netherlands},
series = {GECCO '13 Companion}
}

@inproceedings{10.1145/3233347.3233388,
author = {Mohammad, Omer K. Jasim},
title = {Recent Trends of Cloud Computing Applications and Services in Medical, Educational, Financial, Library and Agricultural Disciplines},
year = {2018},
isbn = {9781450364720},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3233347.3233388},
doi = {10.1145/3233347.3233388},
abstract = {Cloud computing is a modern emerging trend in distributed computing technology that is rapidly gaining popularity in the network communication field. Such network communication is an Internet-based computing, where shared resources, software, and information are provided with computers and devices on-demand. The concept of "cloud computing" is not new, it has proven a major commercial success over recent times and it is also considered "the delivery of computing model" through shared resources, software and information over the internet (public) or intranet (private). This innovative technology affords a new era of an electronic-service in diverse subject areas. This paper shows the role of cloud computing services and applications in different sectors, which in turn helps individuals and organizations to understand how cloud computing can provide them with customized, engine requirements, reliable and cost-effective services in a wide variety of applications. Furthermore, this context discusses a number of affecting factors, such as security, resource availability, cost, interoperability, precautions, and roadmap in healthcare, education, financial, agriculture and library sectors. Finally, the paper showcased the pros and cons of using cloud computing technology in different sectors. It additionally diagnosed the security factor that is a critical element in slowing down the adoption of cloud computing in various applications and institutions.},
booktitle = {Proceedings of the 4th International Conference on Frontiers of Educational Technologies},
pages = {132–141},
numpages = {10},
keywords = {cloudy-education, cloudy-EHR, cloud computing, cloudy- banking, cloudy-agriculture, Healthcare cloud, cloud applications},
location = {Moscow, Russian Federation},
series = {ICFET '18}
}

@article{10.1145/3511322.3511324,
author = {Das, Sanmay and Mattei, Nicholas and Dickerson, John P. and Koenig, Sven and Dennis, Louise and Medsker, Larry and Neller, Todd and Leite, Iolanda and Karpatne, Anuj and Tsang, Alan},
title = {SIGAI Annual Report: July 1 2020 - June 30 2021},
year = {2022},
issue_date = {September 2021},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {7},
number = {3},
url = {https://doi.org/10.1145/3511322.3511324},
doi = {10.1145/3511322.3511324},
abstract = {We have continued adjusting to a "new normal" in the Covid era. In addition to the significant socio-economic challenges of the pandemic, for us as a scientific organization, we continue to grapple with a world with few, if any, in-person conferences for a second year in a row, and continued virtual interactions for the community. We are, however, proud of what we have been able to accomplish in the past year. As part of transparent communication with our membership, we share here the annual report that we provide to ACM each summer. You may notice a slight change in format this year, to focus on areas that ACM is particularly interested in hearing from us about. Also note that we include the report without modifications, so the information is a few months old!},
journal = {AI Matters},
month = {jan},
pages = {5–11},
numpages = {7}
}

@article{10.1145/3352020.3352031,
author = {Mike Liang, Chieh-Jan and Xue, Hui and Yang, Mao and Zhou, Lidong},
title = {The Case for Learning-and-System Co-Design},
year = {2019},
issue_date = {July 2019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {53},
number = {1},
issn = {0163-5980},
url = {https://doi.org/10.1145/3352020.3352031},
doi = {10.1145/3352020.3352031},
abstract = {While decision-makings in systems are commonly solved with explicit rules and heuristics, machine learning (ML) and deep learning (DL) have been driving a paradigm shift in modern system design. Based on our decade of experience in operationalizing a large production cloud system, Web Search, learning fills the gap in comprehending and taming the system design and operation complexity. However, rather than just improving specific ML/DL algorithms or system features, we posit that the key to unlocking the full potential of learning-augmented systems is a principled methodology promoting learning-and-system co-design. On this basis, we present the AutoSys, a common framework for the development of learning-augmented systems.},
journal = {SIGOPS Oper. Syst. Rev.},
month = {jul},
pages = {68–74},
numpages = {7}
}

@article{10.1162/evco_a_00213,
author = {Ferrucci, Filomena and Salza, Pasquale and Sarro, Federica},
title = {Using Hadoop MapReduce for Parallel Genetic Algorithms: A Comparison of the Global, Grid and Island Models},
year = {2018},
issue_date = {Winter 2018},
publisher = {MIT Press},
address = {Cambridge, MA, USA},
volume = {26},
number = {4},
issn = {1063-6560},
url = {https://doi.org/10.1162/evco_a_00213},
doi = {10.1162/evco_a_00213},
abstract = {The need to improve the scalability of Genetic Algorithms (GAs) has motivated the research on Parallel Genetic Algorithms (PGAs), and different technologies and approaches have been used. Hadoop MapReduce represents one of the most mature technologies to develop parallel algorithms. Based on the fact that parallel algorithms introduce communication overhead, the aim of the present work is to understand if, and possibly when, the parallel GAs solutions using Hadoop MapReduce show better performance than sequential versions in terms of execution time. Moreover, we are interested in understanding which PGA model can be most effective among the global, grid, and island models. We empirically assessed the performance of these three parallel models with respect to a sequential GA on a software engineering problem, evaluating the execution time and the achieved speedup. We also analysed the behaviour of the parallel models in relation to the overhead produced by the use of Hadoop MapReduce and the GAs' computational effort, which gives a more machine-independent measure of these algorithms. We exploited three problem instances to differentiate the computation load and three cluster configurations based on 2, 4, and 8 parallel nodes. Moreover, we estimated the costs of the execution of the experimentation on a potential cloud infrastructure, based on the pricing of the major commercial cloud providers. The empirical study revealed that the use of PGA based on the island model outperforms the other parallel models and the sequential GA for all the considered instances and clusters. Using 2, 4, and 8 nodes, the island model achieves an average speedup over the three datasets of 1.8, 3.4, and 7.0 times, respectively. Hadoop MapReduce has a set of different constraints that need to be considered during the design and the implementation of parallel algorithms. The overhead of data store (i.e., HDFS) accesses, communication, and latency requires solutions that reduce data store operations. For this reason, the island model is more suitable for PGAs than the global and grid model, also in terms of costs when executed on a commercial cloud provider.},
journal = {Evol. Comput.},
month = {dec},
pages = {535–567},
numpages = {33},
keywords = {Hadoop MapReduce, Genetic algorithms, grid model, global model, island model, parallel genetic algorithms, fault prediction.}
}

@inproceedings{10.1145/268820.277347,
author = {Nielsen, S. H. and von Hellens, L. A. and Greenhill, A. and Pringle, R.},
title = {Collectivism and Connectivity: Culture and Gender in Information Technology Education},
year = {1997},
isbn = {0897919041},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/268820.277347},
doi = {10.1145/268820.277347},
booktitle = {Proceedings of the 1997 ACM SIGCPR Conference on Computer Personnel Research},
pages = {9–13},
numpages = {5},
keywords = {Asian women in IT education, female participation in IT education, cultural factors},
location = {San Francisco, California, USA},
series = {SIGCPR '97}
}

@article{10.1145/2968453,
author = {Ko, Amy J. and Ladner, Richard E.},
title = {<i>AccessComputing</i> Promotes Teaching Accessibility},
year = {2016},
issue_date = {December 2016},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {7},
number = {4},
issn = {2153-2184},
url = {https://doi.org/10.1145/2968453},
doi = {10.1145/2968453},
journal = {ACM Inroads},
month = {nov},
pages = {65–68},
numpages = {4}
}

@inproceedings{10.1145/3475716.3484196,
author = {Bojarczuk, K. and Gucevska, N. and Lucas, S. and Dvortsova, I. and Harman, M. and Meijer, E. and Sapora, S. and George, J. and Lomeli, M. and Rojas, R.},
title = {Measurement Challenges for Cyber Cyber Digital Twins: Experiences from the Deployment of Facebook's WW Simulation System},
year = {2021},
isbn = {9781450386654},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3475716.3484196},
doi = {10.1145/3475716.3484196},
abstract = {A cyber cyber digital twin is a deployed software model that executes in tandem with the system it simulates, contributing to, and drawing from, the system's behaviour. This paper outlines Facebook's cyber cyber digital twin, dubbed WW, a twin of Facebook's WWW platform, built using web-enabled simulation. The paper focuses on the current research challenges and opportunities in the area of measurement. Measurement challenges lie at the heart of modern simulation. They directly impact how we use simulation outcomes for automated online and semi-automated offline decision making. Measurements also encompas how we verify and validate those outcomes. Modern simulation systems are increasingly becoming more like cyber cyber digital twins, effectively moving from manual to automated decision making, hence, these measurement challenges acquire ever greater significance.},
booktitle = {Proceedings of the 15th ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM)},
articleno = {2},
numpages = {10},
keywords = {Digital Twin, Simulation, Social Media, Software Measurement},
location = {Bari, Italy},
series = {ESEM '21}
}

@inproceedings{10.5555/2486788.2486982,
author = {B\k{a}k, Kacper and Zayan, Dina and Czarnecki, Krzysztof and Antkiewicz, Micha\l{} and Diskin, Zinovy and W\k{a}sowski, Andrzej and Rayside, Derek},
title = {Example-Driven Modeling: Model = Abstractions + Examples},
year = {2013},
isbn = {9781467330763},
publisher = {IEEE Press},
abstract = { We propose Example-Driven Modeling (EDM), an approach that systematically uses explicit examples for eliciting, modeling, verifying, and validating complex business knowledge. It emphasizes the use of explicit examples together with abstractions, both for presenting information and when exchanging models. We formulate hypotheses as to why modeling should include explicit examples, discuss how to use the examples, and the required tool support. Building upon results from cognitive psychology and software engineering, we challenge mainstream practices in structural modeling and suggest future directions. },
booktitle = {Proceedings of the 2013 International Conference on Software Engineering},
pages = {1273–1276},
numpages = {4},
location = {San Francisco, CA, USA},
series = {ICSE '13}
}

