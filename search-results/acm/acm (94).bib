@inbook{10.1145/3387940.3392089,
author = {Ahlgren, John and Berezin, Maria Eugenia and Bojarczuk, Kinga and Dulskyte, Elena and Dvortsova, Inna and George, Johann and Gucevska, Natalija and Harman, Mark and L\"{a}mmel, Ralf and Meijer, Erik and Sapora, Silvia and Spahr-Summers, Justin},
title = {WES: Agent-Based User Interaction Simulation on Real Infrastructure},
year = {2020},
isbn = {9781450379632},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3387940.3392089},
abstract = {We introduce the Web-Enabled Simulation (WES) research agenda, and describe FACEBOOK's WW system. We describe the application of WW to reliability, integrity and privacy at FACEBOOK1, where it is used to simulate social media interactions on an infrastructure consisting of hundreds of millions of lines of code. The WES agenda draws on research from many areas of study, including Search Based Software Engineering, Machine Learning, Programming Languages, Multi Agent Systems, Graph Theory, Game AI, and AI Assisted Game Play. We conclude with a set of open problems and research challenges to motivate wider investigation.},
booktitle = {Proceedings of the IEEE/ACM 42nd International Conference on Software Engineering Workshops},
pages = {276–284},
numpages = {9}
}

@inproceedings{10.1145/3452296.3472941,
author = {Xu, Xieyang and Beckett, Ryan and Jayaraman, Karthick and Mahajan, Ratul and Walker, David},
title = {Test Coverage Metrics for the Network},
year = {2021},
isbn = {9781450383837},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3452296.3472941},
doi = {10.1145/3452296.3472941},
abstract = {Testing and verification have emerged as key tools in the battle to improve the reliability of networks and the services they provide. However, the success of even the best technology of this sort is limited by how effectively it is applied, and in today's enormously complex industrial networks, it is surprisingly easy to overlook particular interfaces, routes, or flows when creating a test suite. Moreover, network engineers, unlike their software counterparts, have no help to battle this problem—there are no metrics or systems to compute the quality of their test suites or the extent to which their networks have been verified.To address this gap, we develop a general framework to define and compute network coverage for stateless network data planes. It computes coverage for a range of network components (EG, interfaces, devices, paths) and supports many types of tests (e.g., concrete versus symbolic; local versus end-to-end; tests that check network state versus those that analyze behavior). Our framework is based on the observation that any network dataplane component can be decomposed into forwarding rules and all types of tests ultimately exercise these rules using one or more packets.We build a system called Yardstick based on this framework and deploy it in Microsoft Azure. Within the first month of its deployment inside one of the production networks, it uncovered several testing gaps and helped improve testing by covering 89% more forwarding rules and 17% more network interfaces.},
booktitle = {Proceedings of the 2021 ACM SIGCOMM 2021 Conference},
pages = {775–787},
numpages = {13},
keywords = {reliability, network verification, coverage metrics},
location = {Virtual Event, USA},
series = {SIGCOMM '21}
}

@article{10.5555/1050231.1050248,
author = {Tadayon, Nasser},
title = {Software Engineering Based on the Team Software Process with a Real World Project},
year = {2004},
issue_date = {April 2004},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {19},
number = {4},
issn = {1937-4771},
abstract = {It can be observed the increasing demand for experienced professionals in development of software. On the other hand we see the decrease of interest in students and decline in student's enrollment in computer science and software engineering in most of the colleges and universities in the United States. The outburst of technology in our society demands software engineers to handle the exponential growth. Software plays very important, if not a critical, role in our daily life. It is one of the most rapidly growing fields in Engineering and technology. As software engineering educators, we bear the obligation of attracting and maintaining the interest of students by exploring and identifying initiatives that excite and draw them to the discipline. One tactical move for undergraduate students to understand the concepts and see themselves in their future role is having a realistic customer with real expectations in a software engineering course. There have been several papers exploring the same idea [1, 2, 6]. In this paper, the instructor describes the process and the structure in building a semi-realistic term project, using an external customer for a sophomore level introductory course in software engineering. The course is designed for relatively small groups of traditional and nontraditional students. The instructor assert his efforts in incorporating teamwork with diverse students as well as the challenging experiences that the students faced while working in the semi-real world industrial environment.},
journal = {J. Comput. Sci. Coll.},
month = {apr},
pages = {133–142},
numpages = {10},
keywords = {TSP, curriculum, real world project, software engineering}
}

@inproceedings{10.1145/3377811.3380405,
author = {Aghajani, Emad and Nagy, Csaba and Linares-V\'{a}squez, Mario and Moreno, Laura and Bavota, Gabriele and Lanza, Michele and Shepherd, David C.},
title = {Software Documentation: The Practitioners' Perspective},
year = {2020},
isbn = {9781450371216},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3377811.3380405},
doi = {10.1145/3377811.3380405},
abstract = {In theory, (good) documentation is an invaluable asset to any software project, as it helps stakeholders to use, understand, maintain, and evolve a system. In practice, however, documentation is generally affected by numerous shortcomings and issues, such as insufficient and inadequate content and obsolete, ambiguous information. To counter this, researchers are investigating the development of advanced recommender systems that automatically suggest high-quality documentation, useful for a given task. A crucial first step is to understand what quality means for practitioners and what information is actually needed for specific tasks.We present two surveys performed with 146 practitioners to investigate (i) the documentation issues they perceive as more relevant together with solutions they apply when these issues arise; and (ii) the types of documentation considered as important in different tasks. Our findings can help researchers in designing the next generation of documentation recommender systems.},
booktitle = {Proceedings of the ACM/IEEE 42nd International Conference on Software Engineering},
pages = {590–601},
numpages = {12},
keywords = {documentation, empirical study},
location = {Seoul, South Korea},
series = {ICSE '20}
}

@inproceedings{10.1145/2063348.2063374,
author = {Prabhu, Prakash and Jablin, Thomas B. and Raman, Arun and Zhang, Yun and Huang, Jialu and Kim, Hanjun and Johnson, Nick P. and Liu, Feng and Ghosh, Soumyadeep and Beard, Stephen and Oh, Taewook and Zoufaly, Matthew and Walker, David and August, David I.},
title = {A Survey of the Practice of Computational Science},
year = {2011},
isbn = {9781450311397},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2063348.2063374},
doi = {10.1145/2063348.2063374},
abstract = {Computing plays an indispensable role in scientific research. Presently, researchers in science have different problems, needs, and beliefs about computation than professional programmers. In order to accelerate the progress of science, computer scientists must understand these problems, needs, and beliefs. To this end, this paper presents a survey of scientists from diverse disciplines, practicing computational science at a doctoral-granting university with very high research activity. The survey covers many things, among them, prevalent programming practices within this scientific community, the importance of computational power in different fields, use of tools to enhance performance and software productivity, computational resources leveraged, and prevalence of parallel computation. The results reveal several patterns that suggest interesting avenues to bridge the gap between scientific researchers and programming tools developers.},
booktitle = {State of the Practice Reports},
articleno = {19},
numpages = {12},
location = {Seattle, Washington},
series = {SC '11}
}

@article{10.1145/3196883,
author = {Emam, S. S. and Miller, J.},
title = {Inferring Extended Probabilistic Finite-State Automaton Models from Software Executions},
year = {2018},
issue_date = {January 2018},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {27},
number = {1},
issn = {1049-331X},
url = {https://doi.org/10.1145/3196883},
doi = {10.1145/3196883},
abstract = {Behavioral models are useful tools in understanding how programs work. Although several inference approaches have been introduced to generate extended finite-state automatons from software execution traces, they suffer from accuracy, flexibility, and decidability issues. In this article, we apply a hybrid technique to use both reinforcement learning and stochastic modeling to generate an extended probabilistic finite state automaton from software traces. Our approach—ReHMM (Reinforcement learning-based Hidden Markov Modelling)—is able to address the problems of inflexibility and un-decidability reported in other state-of-the-art approaches. Experimental results indicate that ReHMM outperforms other inference algorithms.},
journal = {ACM Trans. Softw. Eng. Methodol.},
month = {jun},
articleno = {4},
numpages = {39},
keywords = {EFSA, Reinforcement learning, Dynamic Analysis, Hidden Markov Model, PFSA}
}

@inproceedings{10.1109/ICSECOMPANION.2007.58,
author = {Lutz, Robyn},
title = {Portraits in Practice},
year = {2007},
isbn = {0769528929},
publisher = {IEEE Computer Society},
address = {USA},
url = {https://doi.org/10.1109/ICSECOMPANION.2007.58},
doi = {10.1109/ICSECOMPANION.2007.58},
abstract = {Portraits in Practice invites companies with technically advanced software-engineering practices and intriguing research challenges to discuss them with the ICSE 2007 participants. The sessions in this track let researchers hear industrial practitioners describe their projects and concerns in some detail, and they let other practitioners hear what technologies these companies recommend. The track provides an open discussion and blunt assessment of future needs with experts from these leading industries. The goal is to encourage and foment improved communication between leading companies and academic researchers.},
booktitle = {Companion to the Proceedings of the 29th International Conference on Software Engineering},
pages = {33–34},
numpages = {2},
series = {ICSE COMPANION '07}
}

@article{10.1145/3423132,
author = {Gong, Dunwei and Sun, Baicai and Yao, Xiangjuan and Tian, Tian},
title = {Test Data Generation for Path Coverage of MPI Programs Using SAEO},
year = {2021},
issue_date = {April 2021},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {30},
number = {2},
issn = {1049-331X},
url = {https://doi.org/10.1145/3423132},
doi = {10.1145/3423132},
abstract = {Message-passing interface (MPI) programs, a typical kind of parallel programs, have been commonly used in various applications. However, it generally takes exhaustive computation to run these programs when generating test data to test them. In this article, we propose a method of test data generation for path coverage of MPI programs using surrogate-assisted evolutionary optimization, which can efficiently generate test data with high quality. We first divide a sample set of a program into a number of clusters according to the multi-mode characteristic of the coverage problem, with each cluster training a surrogate model. Then, we estimate the fitness of each individual using one or more surrogate models when generating test data through evolving a population. Finally, a small number of representative individuals are selected to execute the program, with the purpose of obtaining their real fitness, to guide the subsequent evolution of the population. We apply the proposed method to seven benchmark MPI programs and compare it with several state-of-the-art approaches. The experimental results show that the proposed method can generate test data with reduced computation, thus improving the testing efficiency.},
journal = {ACM Trans. Softw. Eng. Methodol.},
month = {jan},
articleno = {17},
numpages = {37},
keywords = {path coverage, evolutionary optimization, surrogate model, test data generation, MPI program}
}

@inproceedings{10.5555/800091.802942,
author = {Rault, J. C.},
title = {An Approach towards Reliable Software},
year = {1979},
publisher = {IEEE Press},
abstract = {After recalling the various general approaches to reliable software, this paper stresses the necessity and rationale for quantitative and/or automated assessment of software “reliability” and “quality”. As an illustration, techniques for quantitative evaluation of software reliability are first surveyed. Then, a more general scheme that encompasses software reliability as a particular case is proposed; software quality is shown to be dependent on various factors that can be control led or measured through a set of analyzers and computer aids. In the author's opinion, the proposed control and measurement procedures, still quite unexploited, should profitably supplement the other more conventional approaches to reliable software.},
booktitle = {Proceedings of the 4th International Conference on Software Engineering},
pages = {220–230},
numpages = {11},
location = {Munich, Germany},
series = {ICSE '79}
}

@inproceedings{10.1145/3230718.3230725,
author = {Cao, Lianjie and Fahmy, Sonia and Sharma, Puneet and Zhe, Shandian},
title = {Data-Driven Resource Flexing for Network Functions Visualization},
year = {2018},
isbn = {9781450359023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3230718.3230725},
doi = {10.1145/3230718.3230725},
abstract = {Resource flexing is the notion of allocating resources on-demand as workload changes. This is a key advantage of Virtualized Network Functions (VNFs) over their non-virtualized counterparts. However, it is difficult to balance the timeliness and resource efficiency when making resource flexing decisions due to unpredictable workloads and complex VNF processing logic.In this work, we propose an Elastic resource flexing system for Network functions VIrtualization (ENVI) that leverages a combination of VNF-level features and infrastructure-level features to construct a neural-network-based scaling decision engine for generating timely scaling decisions. To adapt to dynamic workloads, we design a window-based rewinding mechanism to update the neural network with emerging workload patterns and make accurate decisions in real time. Our experimental results for real VNFs (IDS Suricata and caching proxy Squid) using workloads generated based on real-world traces, show that ENVI provisions significantly fewer (up to 26%) resources without violating service level objectives, compared to commonly used rule-based scaling policies.},
booktitle = {Proceedings of the 2018 Symposium on Architectures for Networking and Communications Systems},
pages = {111–124},
numpages = {14},
location = {Ithaca, New York},
series = {ANCS '18}
}

@inproceedings{10.5555/2337223.2337343,
author = {Buse, Raymond P. L. and Zimmermann, Thomas},
title = {Information Needs for Software Development Analytics},
year = {2012},
isbn = {9781467310673},
publisher = {IEEE Press},
abstract = { Software development is a data rich activity with many sophisticated metrics. Yet engineers often lack the tools and techniques necessary to leverage these potentially powerful information resources toward decision making. In this paper, we present the data and analysis needs of professional software engineers, which we identified among 110 developers and managers in a survey. We asked about their decision making process, their needs for artifacts and indicators, and scenarios in which they would use analytics.  The survey responses lead us to propose several guidelines for analytics tools in software development including: Engineers do not necessarily have much expertise in data analysis; thus tools should be easy to use, fast, and produce concise output. Engineers have diverse analysis needs and consider most indicators to be important; thus tools should at the same time support many different types of artifacts and many indicators. In addition, engineers want to drill down into data based on time, organizational structure, and system architecture. },
booktitle = {Proceedings of the 34th International Conference on Software Engineering},
pages = {987–996},
numpages = {10},
location = {Zurich, Switzerland},
series = {ICSE '12}
}

@inproceedings{10.1145/320435.320524,
author = {Barkley, John and Rosenthal, Lynne S.},
title = {Issues in the Management of Microcomputer Systems},
year = {1985},
isbn = {0897911709},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/320435.320524},
doi = {10.1145/320435.320524},
booktitle = {Proceedings of the 1985 ACM Annual Conference on The Range of Computing : Mid-80's Perspective: Mid-80's Perspective},
pages = {296–299},
numpages = {4},
location = {Denver, Colorado, USA},
series = {ACM '85}
}

@inproceedings{10.1145/2445196.2445198,
author = {Camp, Tracy},
title = {Changing the Face of Computing},
year = {2013},
isbn = {9781450318686},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2445196.2445198},
doi = {10.1145/2445196.2445198},
abstract = {The demand for computing professionals continues to grow, while women and minorities remain severely underrepresented at all levels. This opening SIGCSE 2013 keynote asks the crucial question "What can WE do to change the face of computing?" Several answers to this question will be provided in an unusual format with the following all-star cast. Each speaker will take five minutes to share 20 slides (which automatically advance every 15 seconds) to provide a stimulating presentation that ends with "What can YOU do to change the face of computing?"},
booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
pages = {1–2},
numpages = {2},
keywords = {broadening participation},
location = {Denver, Colorado, USA},
series = {SIGCSE '13}
}

@inproceedings{10.1145/3166094.3166117,
author = {Pyshkin, Evgeny},
title = {Liberal Arts in a Digitally Transformed World: Revisiting a Case of Software Development Education},
year = {2017},
isbn = {9781450363969},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3166094.3166117},
doi = {10.1145/3166094.3166117},
abstract = {The paper continues a discourse on methods and organization of software development teaching and learning process through the perspective of considering computer science disciplines within the context of liberal arts. We examine the methodology gap in software development education, and argue that more collaborative activities should be introduced into teaching process, thus enabling students to have more opportunities for public display of their works. Instead of a common non-creative lecture/lab organization, we introduce a workflow of connected activities transforming a study process to active learning where both sides (instructors and students) actively interact and cooperate. We make an effort to revisit the question, how teaching forms and practices existing in humanities can be applied to a case of computer science education. With an example of programming courses taught at the University of Aizu to international students, we argue that any live activities (such as lectures in a lab, hands-on, testing and review sessions) are of extreme importance for involving students into a creative process. This approach aims at transforming one-way information transmission between a teacher and a student to their communication and, therefore, to better understanding of each other's perspectives.},
booktitle = {Proceedings of the 13th Central &amp; Eastern European Software Engineering Conference in Russia},
articleno = {23},
numpages = {7},
keywords = {software development education, liberal arts, workflow, collaboration, creativity},
location = {St. Petersburg, Russia},
series = {CEE-SECR '17}
}

@inproceedings{10.1109/ICSE-SEIP.2019.00032,
author = {Parthy, Abhaya and Silberstein, Leo and Kowalczyk, Emily and High, John-Paul and Nagarajan, Adithya and Memon, Atif},
title = {Using Machine Learning to Recommend Correctness Checks for Geographic Map Data},
year = {2019},
publisher = {IEEE Press},
url = {https://doi.org/10.1109/ICSE-SEIP.2019.00032},
doi = {10.1109/ICSE-SEIP.2019.00032},
abstract = {Developing an industry application that serves geographic map data to users across the world presents the significant challenge of checking the data using "data correctness checks." The size of data that needs to be checked---the entire world---and data churn rate---thousands per day---makes executing the full set of candidate checks cost prohibitive. Current techniques rely on hand-curated static subsets of checks to be run at different stages of the data production pipeline, These hard-coded subsets are uninformed of data changes, and cause bug detection to be delayed to downstream quality assurance activities. To address these problems, we have developed new representations of map data changes and checks, formally defined "check safety," and built a recommender system that dynamically and automatically selects and ranks a relevant subset of checks using signals from latest data changes. Empirical evaluation shows that it improves (1) efficiency by eliminating 65% of checks unrelated to changes, (2) coverage by recommending and ranking change-related checks from the full set of candidate checks, previously excluded by the manual process, and (3) overall visibility into the data editing process by quickly and automatically identifying latest fault prone parts of the data.},
booktitle = {Proceedings of the 41st International Conference on Software Engineering: Software Engineering in Practice},
pages = {223–232},
numpages = {10},
keywords = {safe test/check selection, automated data validation, data check recommender},
location = {Montreal, Quebec, Canada},
series = {ICSE-SEIP '19}
}

@inproceedings{10.1145/2896971.2896974,
author = {Sun, Chang-ai and Liu, Yiqiang and Wang, Zuoyi and Chan, W. K.},
title = {μMT: A Data Mutation Directed Metamorphic Relation Acquisition Methodology},
year = {2016},
isbn = {9781450341639},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2896971.2896974},
doi = {10.1145/2896971.2896974},
abstract = {When figuring out the expected output for each test case is difficult, metamorphic testing can be applied to alleviate such situations. An involved key challenge is to derive metamorphic relations for the program under test. This paper proposes a datamutation directed metamorphic relation acquisition methodology called μMT. Experimental results on three case studies show that μMT is feasible in deriving metamorphic relations for numeric applications and the derived metamorphic relations show reasonable fault detection effectiveness.},
booktitle = {Proceedings of the 1st International Workshop on Metamorphic Testing},
pages = {12–18},
numpages = {7},
keywords = {metamorphic relation, metamorphic testing, test oracle},
location = {Austin, Texas},
series = {MET '16}
}

@inproceedings{10.1109/MSR.2017.61,
author = {Spadini, Davide and Aniche, Maur\'{\i}cio and Bruntink, Magiel and Bacchelli, Alberto},
title = {To Mock or Not to Mock? An Empirical Study on Mocking Practices},
year = {2017},
isbn = {9781538615447},
publisher = {IEEE Press},
url = {https://doi.org/10.1109/MSR.2017.61},
doi = {10.1109/MSR.2017.61},
abstract = {When writing automated unit tests, developers often deal with software artifacts that have several dependencies. In these cases, one has the possibility of either instantiating the dependencies or using mock objects to simulate the dependencies' expected behavior. Even though recent quantitative studies showed that mock objects are widely used in OSS projects, scientific knowledge is still lacking on how and why practitioners use mocks. Such a knowledge is fundamental to guide further research on this widespread practice and inform the design of tools and processes to improve it.The objective of this paper is to increase our understanding of which test dependencies developers (do not) mock and why, as well as what challenges developers face with this practice. To this aim, we create MockExtractor, a tool to mine the usage of mock objects in testing code and employ it to collect data from three OSS projects and one industrial system. Sampling from this data, we manually analyze how more than 2,000 test dependencies are treated. Subsequently, we discuss our findings with developers from these systems, identifying practices, rationales, and challenges. These results are supported by a structured survey with more than 100 professionals. The study reveals that the usage of mocks is highly dependent on the responsibility and the architectural concern of the class. Developers report to frequently mock dependencies that make testing difficult and prefer to not mock classes that encapsulate domain concepts/rules of the system. Among the key challenges, developers report that maintaining the behavior of the mock compatible with the behavior of original class is hard and that mocking increases the coupling between the test and the production code.},
booktitle = {Proceedings of the 14th International Conference on Mining Software Repositories},
pages = {402–412},
numpages = {11},
location = {Buenos Aires, Argentina},
series = {MSR '17}
}

@inproceedings{10.1145/2245276.2231966,
author = {Basgalupp, M\'{a}rcio P. and Barros, Rodrigo C. and Ruiz, Duncan D.},
title = {Predicting Software Maintenance Effort through Evolutionary-Based Decision Trees},
year = {2012},
isbn = {9781450308571},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2245276.2231966},
doi = {10.1145/2245276.2231966},
abstract = {Software effort prediction has been a challenge for researchers throughout the years. Several approaches for producing predictive models from collected data have been proposed, although none has become standard given the specificities of different software projects. The most commonly employed strategy for estimating software effort, the multivariate linear regression technique has numerous shortcomings though, which motivated the exploration of many machine learning techniques. Among the researched strategies, decision trees and evolutionary algorithms have been increasingly employed for software effort prediction, though independently. In this paper, we propose employing an evolutionary algorithm to generate a decision tree tailored to a software effort data set provided by a large worldwide IT company. Our findings show that evolutionarily-induced decision trees statistically outperform greedily-induced ones, as well as traditional logistic regression. Moreover, an evolutionary algorithm with a bias towards comprehensibility can generate trees which are easier to be interpreted by the project stakeholders, and that is crucial in order to improve the stakeholder's confidence in the final prediction.},
booktitle = {Proceedings of the 27th Annual ACM Symposium on Applied Computing},
pages = {1209–1214},
numpages = {6},
keywords = {evolutionary algorithms, software effort estimation, LEGAL-Tree, decision trees},
location = {Trento, Italy},
series = {SAC '12}
}

@article{10.1145/3485952.3485960,
author = {Brownlee, Alexander E. I.},
title = {Genetic Improvement @ ICSE 2021: Personal Reflection of a Workshop Participant},
year = {2021},
issue_date = {October 2021},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {46},
number = {4},
issn = {0163-5948},
url = {https://doi.org/10.1145/3485952.3485960},
doi = {10.1145/3485952.3485960},
abstract = {Following Dr. Stephanie Forrest of Arizona State University's keynote presentation there was a wide ranging discussion at the tenth international Genetic Improvement workshop, GI-2021 @ ICSE (held as part of the International Conference on Software Engineering on Sunday 30th May 2021). Topics included a growing range of target systems and appli- cations, algorithmic improvements, wide-ranging questions about how other elds (especially evolutionary computation) can inform advances in GI, and about how GI is 'branded' to other disciplines.We give a personal perspective on the workshop's proceedings, the discussions that took place, and resulting prospective directions for future research.},
journal = {SIGSOFT Softw. Eng. Notes},
month = {oct},
pages = {28–30},
numpages = {3}
}

@inproceedings{10.1145/2381716.2381813,
author = {Alboaie, Lenuta and Vaida, Mircea-Florin and Pojar, Diana},
title = {Alternative Methodologies for Automated Grouping in Education and Research},
year = {2012},
isbn = {9781450311854},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2381716.2381813},
doi = {10.1145/2381716.2381813},
abstract = {Education and research activities are now oriented on groups to solve complex tasks and develop collaboration skills. Agile Software methodologies, psychology and spirituality elements, information technology developments offer possibilities to create dynamic and efficient groups. In education, classical grouping strategies can't be used in e-learning environments where there's little or no physical interaction between parties.We developed a web application that takes into account the alternative determined student - researcher typologies, according to the Enneagram methodology, and with a MBTI (Myers-Briggs Type Indicator) test. A simple and complex Enneagram test will determine the 9 base typologies. A psychological base test will determine the MBTI profiles. A correlation between enneagram and the MBTI typology is performed by the web application to generate and refine the grouping process in an automated manner. Case studies as Alternative1 and 2 described in the general algorithm show that groups created using this method have an increased communication among the members and better practical results. This is due to the members' compatibility, which facilitates better collaboration in education and research.},
booktitle = {Proceedings of the CUBE International Information Technology Conference},
pages = {508–513},
numpages = {6},
keywords = {web application, e-learning, Enneagram, MBTI},
location = {Pune, India},
series = {CUBE '12}
}

