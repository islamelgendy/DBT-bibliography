Item Title,Publication Title,Book Series Title,Journal Volume,Journal Issue,Item DOI,Authors,Publication Year,URL,Content Type
"An approach for experimentally evaluating effectiveness and efficiency of coverage criteria for software testing","International Journal on Software Tools for Technology Transfer","","10","2","10.1007/s10009-007-0059-5","Atul GuptaPankaj Jalote","2008","http://link.springer.com/article/10.1007/s10009-007-0059-5","Article"
"First international competition on software testing","International Journal on Software Tools for Technology Transfer","","23","6","10.1007/s10009-021-00613-3","Dirk Beyer","2021","http://link.springer.com/article/10.1007/s10009-021-00613-3","Article"
"Who tested my software? Testing as an organizationally cross-cutting activity","Software Quality Journal","","20","1","10.1007/s11219-011-9157-4","Mika V. MäntyläJuha ItkonenJoonas Iivonen","2012","http://link.springer.com/article/10.1007/s11219-011-9157-4","Article"
"Risk orientation in software testing processes of small and medium enterprises: an exploratory and comparative study","Software Quality Journal","","24","3","10.1007/s11219-015-9289-z","Michael FeldererRudolf Ramler","2016","http://link.springer.com/article/10.1007/s11219-015-9289-z","Article"
"Automated Software Testing Technologies for Realistic Computer Graphics","Programming and Computer Software","","47","1","10.1134/S0361768820080034","E. Yu. DenisovA. G. VoloboyE. D. BiryukovM. S. KopylovI. A. Kalugina","2021","http://link.springer.com/article/10.1134/S0361768820080034","Article"
"Adaptation of General Concepts of Software Testing to Neural Networks","Programming and Computer Software","","44","5","10.1134/S0361768818050031","Yu. L. KarpovL. E. KarpovYu. G. Smetanin","2018","http://link.springer.com/article/10.1134/S0361768818050031","Article"
"An essay on software testing for quality assurance – Editor’s introduction","Annals of Software Engineering","","4","1","10.1023/A:1018906509232","Dick Hamlet","1997","http://link.springer.com/article/10.1023/A%3A1018906509232","Article"
"A controlled experiment on time pressure and confirmation bias in functional software testing","Empirical Software Engineering","","24","4","10.1007/s10664-018-9668-8","Iflaah SalmanBurak TurhanSira Vegas","2019","http://link.springer.com/article/10.1007/s10664-018-9668-8","Article"
"Industry–academia collaborations in software testing: experience and success stories from Canada and Turkey","Software Quality Journal","","25","4","10.1007/s11219-016-9319-5","Vahid GarousiMatt M. EskandarKadir Herkiloğlu","2017","http://link.springer.com/article/10.1007/s11219-016-9319-5","Article"
"Dual programming approach to software testing","Software Quality Journal","","3","1","10.1007/BF00426947","M. GhiassiK. I. S. Woldman","1994","http://link.springer.com/article/10.1007/BF00426947","Article"
"On rapid releases and software testing: a case study and a semi-systematic literature review","Empirical Software Engineering","","20","5","10.1007/s10664-014-9338-4","Mika V. MäntyläBram AdamsFoutse KhomhEmelie EngströmKai Petersen","2015","http://link.springer.com/article/10.1007/s10664-014-9338-4","Article"
"Analysing the fitness landscape of search-based software testing problems","Automated Software Engineering","","24","3","10.1007/s10515-016-0197-7","Aldeida AletiI. MoserLars Grunske","2017","http://link.springer.com/article/10.1007/s10515-016-0197-7","Article"
"Challenges concerning test case specifications in automotive software testing: assessment of frequency and criticality","Software Quality Journal","","29","1","10.1007/s11219-020-09523-0","Katharina JuhnkeMatthias TichyFrank Houdek","2021","http://link.springer.com/article/10.1007/s11219-020-09523-0","Article"
"SERP-test: a taxonomy for supporting industry–academia communication","Software Quality Journal","","25","4","10.1007/s11219-016-9322-x","Emelie EngströmKai PetersenNauman bin AliElizabeth Bjarnason","2017","http://link.springer.com/article/10.1007/s11219-016-9322-x","Article"
"The skills that employers look for in software testers","Software Quality Journal","","27","4","10.1007/s11219-019-09462-5","Raluca FloreaViktoria Stray","2019","http://link.springer.com/article/10.1007/s11219-019-09462-5","Article"
"Exploring human factors of the agile software tester","Software Quality Journal","","","","10.1007/s11219-021-09561-2","Viktoria StrayRaluca FloreaLucas Paruch","2021","http://link.springer.com/article/10.1007/s11219-021-09561-2","Article"
"Artificial neural networks as multi-networks automated test oracle","Automated Software Engineering","","19","3","10.1007/s10515-011-0094-z","Seyed Reza ShahamiriWan M. N. Wan-KadirSuhaimi IbrahimSiti Zaiton Mohd Hashim","2012","http://link.springer.com/article/10.1007/s10515-011-0094-z","Article"
"A set of complexity metrics for guiding the software test process","Software Quality Journal","","4","4","10.1007/BF00402647","Peter Liggesmeyer","1995","http://link.springer.com/article/10.1007/BF00402647","Article"
"Supporting Controlled Experimentation with Testing Techniques: An Infrastructure and its Potential Impact","Empirical Software Engineering","","10","4","10.1007/s10664-005-3861-2","Hyunsook DoSebastian ElbaumGregg Rothermel","2005","http://link.springer.com/article/10.1007/s10664-005-3861-2","Article"
"Software test results exploration and visualization with continuous integration and nightly testing","International Journal on Software Tools for Technology Transfer","","24","2","10.1007/s10009-022-00647-1","Per Erik StrandbergWasif AfzalDaniel Sundmark","2022","http://link.springer.com/article/10.1007/s10009-022-00647-1","Article"
"Guest editors’ introduction to the special section on exploring the boundaries of software test automation","Software Quality Journal","","19","4","10.1007/s11219-011-9159-2","Christof J. BudnikW. K. ChanGregory M. KapfhammerHong Zhu","2011","http://link.springer.com/article/10.1007/s11219-011-9159-2","Article"
"A greedy particle swarm optimization (GPSO) algorithm for testing real-world smart card applications","International Journal on Software Tools for Technology Transfer","","22","2","10.1007/s10009-018-00506-y","Hamzeh M. AllawiWaref Al ManaseerMohammad Al Shraideh","2020","http://link.springer.com/article/10.1007/s10009-018-00506-y","Article"
"A multiple case study on risk-based testing in industry","International Journal on Software Tools for Technology Transfer","","16","5","10.1007/s10009-014-0328-z","Michael FeldererRudolf Ramler","2014","http://link.springer.com/article/10.1007/s10009-014-0328-z","Article"
"An integrated automatic test data generation system","Journal of Systems Integration","","1","3 - 4","10.1007/BF02262722","A. Jefferson Offutt","1991","http://link.springer.com/article/10.1007/BF02262722","Article"
"Successes, challenges, and rethinking – an industrial investigation on crowdsourced mobile application testing","Empirical Software Engineering","","24","2","10.1007/s10664-018-9618-5","Ruizhi GaoYabin WangYang FengZhenyu ChenW. Eric Wong","2019","http://link.springer.com/article/10.1007/s10664-018-9618-5","Article"
"Onboarding inexperienced developers: struggles and perceptions regarding automated testing","Software Quality Journal","","25","4","10.1007/s11219-016-9333-7","Raphael PhamStephan KieslingLeif SingerKurt Schneider","2017","http://link.springer.com/article/10.1007/s11219-016-9333-7","Article"
"Practical relevance of software engineering research: synthesizing the community’s voice","Empirical Software Engineering","","25","3","10.1007/s10664-020-09803-0","Vahid GarousiMarkus BorgMarkku Oivo","2020","http://link.springer.com/article/10.1007/s10664-020-09803-0","Article"
"Specification‐based testing using cause‐effect graphs","Annals of Software Engineering","","4","1","10.1023/A:1018979130614","Amit ParadkarK.C. TaiM.A. Vouk","1997","http://link.springer.com/article/10.1023/A%3A1018979130614","Article"
"Selection and Evaluation of Test Data Based on Genetic Programming","Software Quality Journal","","11","2","10.1023/A:1023772729494","Maria Claudia F.P. EmerSilvia Regina Vergilio","2003","http://link.springer.com/article/10.1023/A%3A1023772729494","Article"
"Model-based test case generation and prioritization: a systematic literature review","Software and Systems Modeling","","21","2","10.1007/s10270-021-00924-8","Muhammad Luqman Mohd-ShafieWan Mohd Nasir Wan KadirHorst LichterMuhammad KhatibsyarbiniMohd Adham Isa","2022","http://link.springer.com/article/10.1007/s10270-021-00924-8","Article"
"Interface Mutation Test Adequacy Criterion: An Empirical Evaluation","Empirical Software Engineering","","6","2","10.1023/A:1011429104252","MÁrcio Eduardo DelamaroJosÉ Carlos MaldonadoAlberto PasquiniAditya P. Mathur","2001","http://link.springer.com/article/10.1023/A%3A1011429104252","Article"
"An evaluation of combination strategies for test case selection","Empirical Software Engineering","","11","4","10.1007/s10664-006-9024-2","Mats GrindalBirgitta LindströmJeff OffuttSten F. Andler","2006","http://link.springer.com/article/10.1007/s10664-006-9024-2","Article"
"A mapping study of the Brazilian SBSE community","Journal of Software Engineering Research and Development","","2","1","10.1186/2195-1721-2-3","Wesley KG AssunçãoMárcio de O BarrosThelma E ColanziArilo C Dias-NetoMatheus HE PaixãoJerffeson T de SouzaSilvia R Vergilio","2014","http://link.springer.com/article/10.1186/2195-1721-2-3","Article"
"Modeling presentation layers of web applications for testing","Software & Systems Modeling","","9","2","10.1007/s10270-009-0125-4","Jeff OffuttYe Wu","2010","http://link.springer.com/article/10.1007/s10270-009-0125-4","Article"
"Ct coverage — initial results","Software Quality Journal","","2","1","10.1007/BF00417425","W. G. BentlyE. F. Miller","1993","http://link.springer.com/article/10.1007/BF00417425","Article"
"Toward a mature industrial practice of software test automation","Software Quality Journal","","22","2","10.1007/s11219-014-9232-8","Hong ZhuDaniel HoffmanJohn HughesDianxiang Xu","2014","http://link.springer.com/article/10.1007/s11219-014-9232-8","Article"
"Characterizing industry-academia collaborations in software engineering: evidence from 101 projects","Empirical Software Engineering","","24","4","10.1007/s10664-019-09711-y","Vahid GarousiDietmar PfahlJoão M. FernandesMichael FeldererMika V. MäntyläDavid ShepherdAndrea ArcuriAhmet CoşkunçayBedir Tekinerdogan","2019","http://link.springer.com/article/10.1007/s10664-019-09711-y","Article"
"A correlation study between automated program repair and test-suite metrics","Empirical Software Engineering","","23","5","10.1007/s10664-017-9552-y","Jooyong YiShin Hwei TanSergey MechtaevMarcel BöhmeAbhik Roychoudhury","2018","http://link.springer.com/article/10.1007/s10664-017-9552-y","Article"
"Integration testing for robotic systems","Software Quality Journal","","30","1","10.1007/s11219-020-09535-w","Maria A. S. BritoSimone R. S. SouzaPaulo S. L. Souza","2022","http://link.springer.com/article/10.1007/s11219-020-09535-w","Article"
"Object‐oriented integration testing","Annals of Software Engineering","","8","1 - 4","10.1023/A:1018975313718","Imran BashirRaymod A. Paul","1999","http://link.springer.com/article/10.1023/A%3A1018975313718","Article"
"Empirical evaluation of optimization algorithms when used in goal-oriented automated test data generation techniques","Empirical Software Engineering","","12","2","10.1007/s10664-006-9026-0","Man XiaoMohamed El-AttarMarek ReformatJames Miller","2007","http://link.springer.com/article/10.1007/s10664-006-9026-0","Article"
"Impacts of the Organizational Model on Testing: Three Industrial Cases","Empirical Software Engineering","","9","4","10.1023/B:EMSE.0000039880.99096.af","Jarmo J. AhonenTuukka JunttilaMarkku Sakkinen","2004","http://link.springer.com/article/10.1023/B%3AEMSE.0000039880.99096.af","Article"
"Simulated annealing applied to test generation: landscape characterization and stopping criteria","Empirical Software Engineering","","12","1","10.1007/s10664-006-7551-5","Hélène WaeselynckPascale Thévenod-FosseOlfa Abdellatif-Kaddour","2007","http://link.springer.com/article/10.1007/s10664-006-7551-5","Article"
"Testing machine learning based systems: a systematic mapping","Empirical Software Engineering","","25","6","10.1007/s10664-020-09881-0","Vincenzo RiccioGunel JahangirovaAndrea StoccoNargiz HumbatovaMichael WeissPaolo Tonella","2020","http://link.springer.com/article/10.1007/s10664-020-09881-0","Article"
"A binomial software reliability model based on coverage of structural testing criteria","Empirical Software Engineering","","13","2","10.1007/s10664-007-9055-3","Adalberto Nobiato CrespoMario JinoAlberto PasquiniJosé Carlos Maldonado","2007","http://link.springer.com/article/10.1007/s10664-007-9055-3","Article"
"Data Generation for Path Testing","Software Quality Journal","","12","2","10.1023/B:SQJO.0000024059.72478.4e","Nashat MansourMiran Salame","2004","http://link.springer.com/article/10.1023/B%3ASQJO.0000024059.72478.4e","Article"
"Towards a framework for certification of reliable autonomous systems","Autonomous Agents and Multi-Agent Systems","","35","1","10.1007/s10458-020-09487-2","Michael FisherViviana MascardiKristin Yvonne RozierBernd-Holger SchlingloffMichael WinikoffNeil Yorke-Smith","2020","http://link.springer.com/article/10.1007/s10458-020-09487-2","Article"
"Systematic literature review on software quality for AI-based software","Empirical Software Engineering","","27","3","10.1007/s10664-021-10105-2","Bahar GeziciAyça Kolukısa Tarhan","2022","http://link.springer.com/article/10.1007/s10664-021-10105-2","Article"
"Using program data-state scarcity to guide automatic test data generation","Software Quality Journal","","18","1","10.1007/s11219-009-9083-x","Mohammad AlshraidehLeonardo BottaciBasel A. Mahafzah","2010","http://link.springer.com/article/10.1007/s11219-009-9083-x","Article"
"Software engineering in start-up companies: An analysis of 88 experience reports","Empirical Software Engineering","","24","1","10.1007/s10664-018-9620-y","Eriks KlotinsMichael UnterkalmsteinerTony Gorschek","2019","http://link.springer.com/article/10.1007/s10664-018-9620-y","Article"
"A benchmark-based evaluation of search-based crash reproduction","Empirical Software Engineering","","25","1","10.1007/s10664-019-09762-1","Mozhan SoltaniPouria DerakhshanfarXavier DevroeyArie van Deursen","2020","http://link.springer.com/article/10.1007/s10664-019-09762-1","Article"
"Systematic incremental validation of reactive systems via sound scenario generalization","Automated Software Engineering","","2","2","10.1007/BF00871825","Robert J. Hall","1995","http://link.springer.com/article/10.1007/BF00871825","Article"
"Test data generation for path coverage of message-passing parallel programs based on co-evolutionary genetic algorithms","Automated Software Engineering","","23","3","10.1007/s10515-014-0173-z","Tian TianDunwei Gong","2016","http://link.springer.com/article/10.1007/s10515-014-0173-z","Article"
"The entrepreneurial logic of startup software development: A study of 40 software startups","Empirical Software Engineering","","26","5","10.1007/s10664-021-09987-z","Anh Nguyen-DucKai-Kristian KemellPekka Abrahamsson","2021","http://link.springer.com/article/10.1007/s10664-021-09987-z","Article"
"A multiple-population genetic algorithm for branch coverage test data generation","Software Quality Journal","","19","3","10.1007/s11219-010-9117-4","Mohammad AlshraidehBasel A. MahafzahSaleh Al-Sharaeh","2011","http://link.springer.com/article/10.1007/s11219-010-9117-4","Article"
"Genetic-based web regression testing: an ontology-based multi-objective evolutionary framework to auto-regression testing of web applications","Service Oriented Computing and Applications","","15","1","10.1007/s11761-020-00312-y","Maryam Nooraei Abadeh","2021","http://link.springer.com/article/10.1007/s11761-020-00312-y","Article"
"The ability of directed tests to predict software quality","Annals of Software Engineering","","4","1","10.1023/A:1018918911958","Christoph C. MichaelJeffrey Voas","1997","http://link.springer.com/article/10.1023/A%3A1018918911958","Article"
"Test Case Generation as an AI Planning Problem","Automated Software Engineering","","4","1","10.1023/A:1008607721339","Adele E. HoweAnneliese von MayrhauserRichard T. Mraz","1997","http://link.springer.com/article/10.1023/A%3A1008607721339","Article"
"Synthesis of test scenarios using UML activity diagrams","Software & Systems Modeling","","10","1","10.1007/s10270-009-0133-4","Ashalatha NayakDebasis Samanta","2011","http://link.springer.com/article/10.1007/s10270-009-0133-4","Article"
"Reducing software defects removal cost via design of experiments using Taguchi approach","Software Quality Journal","","23","2","10.1007/s11219-014-9234-6","Ljubomir LazićStevan Milinković","2015","http://link.springer.com/article/10.1007/s11219-014-9234-6","Article"
"An empirical study on the effects of code visibility on program testability","Software Quality Journal","","25","3","10.1007/s11219-016-9340-8","Lei MaCheng ZhangBing YuHiroyuki Sato","2017","http://link.springer.com/article/10.1007/s11219-016-9340-8","Article"
"Testing Web applications by modeling with FSMs","Software & Systems Modeling","","4","3","10.1007/s10270-004-0077-7","Anneliese A. AndrewsJeff OffuttRoger T. Alexander","2005","http://link.springer.com/article/10.1007/s10270-004-0077-7","Article"
"How effective are existing Java API specifications for finding bugs during runtime verification?","Automated Software Engineering","","26","4","10.1007/s10515-019-00267-1","Owolabi LegunsenNader Al AwarXinyue XuWajih Ul HassanGrigore RoşuDarko Marinov","2019","http://link.springer.com/article/10.1007/s10515-019-00267-1","Article"
"A detailed investigation of the effectiveness of whole test suite generation","Empirical Software Engineering","","22","2","10.1007/s10664-015-9424-2","José Miguel RojasMattia VivantiAndrea ArcuriGordon Fraser","2017","http://link.springer.com/article/10.1007/s10664-015-9424-2","Article"
"Adoption and use of cloud-based testing in practice","Software Quality Journal","","24","2","10.1007/s11219-014-9256-0","Leah Riungu-KalliosaariOssi TaipaleKari SmolanderIta Richardson","2016","http://link.springer.com/article/10.1007/s11219-014-9256-0","Article"
"A combined approach to optimize the test suite size in regression testing","CSI Transactions on ICT","","4","2 - 4","10.1007/s40012-016-0098-8","Shilpi SinghRaj Shree","2016","http://link.springer.com/article/10.1007/s40012-016-0098-8","Article"
"Separating passing and failing test executions by clustering anomalies","Software Quality Journal","","25","3","10.1007/s11219-016-9339-1","Rafig AlmaghairbeMarc Roper","2017","http://link.springer.com/article/10.1007/s11219-016-9339-1","Article"
"GreenScaler: training software energy models with automatic test generation","Empirical Software Engineering","","24","4","10.1007/s10664-018-9640-7","Shaiful ChowdhuryStephanie BorleStephen RomanskyAbram Hindle","2019","http://link.springer.com/article/10.1007/s10664-018-9640-7","Article"
"Using model-checkers to generate and analyze property relevant test-cases","Software Quality Journal","","16","2","10.1007/s11219-007-9031-6","Gordon FraserFranz Wotawa","2008","http://link.springer.com/article/10.1007/s11219-007-9031-6","Article"
"To the attention of mobile software developers: guess what, test your app!","Empirical Software Engineering","","24","4","10.1007/s10664-019-09701-0","Luis CruzRui AbreuDavid Lo","2019","http://link.springer.com/article/10.1007/s10664-019-09701-0","Article"
"Prediction of faults-slip-through in large software projects: an empirical evaluation","Software Quality Journal","","22","1","10.1007/s11219-013-9205-3","Wasif AfzalRichard TorkarRobert FeldtTony Gorschek","2014","http://link.springer.com/article/10.1007/s11219-013-9205-3","Article"
"Black-box tree test case generation through diversity","Automated Software Engineering","","25","3","10.1007/s10515-018-0232-y","Ali ShahbaziMahsa PanahandehJames Miller","2018","http://link.springer.com/article/10.1007/s10515-018-0232-y","Article"
"Environment modeling and simulation for automated testing of soft real-time embedded software","Software & Systems Modeling","","14","1","10.1007/s10270-013-0328-6","Muhammad Zohaib IqbalAndrea ArcuriLionel Briand","2015","http://link.springer.com/article/10.1007/s10270-013-0328-6","Article"
"Similarity testing for role-based access control systems","Journal of Software Engineering Research and Development","","6","1","10.1186/s40411-017-0045-x","Carlos Diego N. DamascenoPaulo C. MasieroAdenilso Simao","2018","http://link.springer.com/article/10.1186/s40411-017-0045-x","Article"
"RAMBUTANS: automatic AOP-specific test generation tool","International Journal on Software Tools for Technology Transfer","","19","6","10.1007/s10009-016-0432-3","Reza Meimandi PariziAbdul Azim Abdul GhaniSai Peck LeeSaif Ur Rehman Khan","2017","http://link.springer.com/article/10.1007/s10009-016-0432-3","Article"
"Search-based multi-vulnerability testing of XML injections in web applications","Empirical Software Engineering","","24","6","10.1007/s10664-019-09707-8","Sadeeq JanAnnibale PanichellaAndrea ArcuriLionel Briand","2019","http://link.springer.com/article/10.1007/s10664-019-09707-8","Article"
"Book review","Software Quality Journal","","3","1","10.1007/BF00426948","Geoff Stafles","1994","http://link.springer.com/article/10.1007/BF00426948","Article"
"Model-based testing leveraged for automated web tests","Software Quality Journal","","","","10.1007/s11219-021-09575-w","Guilherme Ricken MattielloAndré Takeshi Endo","2021","http://link.springer.com/article/10.1007/s11219-021-09575-w","Article"
"An assessment of operational coverage as both an adequacy and a selection criterion for operational profile based testing","Software Quality Journal","","26","4","10.1007/s11219-017-9388-0","Breno MirandaAntonia Bertolino","2018","http://link.springer.com/article/10.1007/s11219-017-9388-0","Article"
"Mock objects for testing java systems","Empirical Software Engineering","","24","3","10.1007/s10664-018-9663-0","Davide SpadiniMaurício AnicheMagiel BruntinkAlberto Bacchelli","2019","http://link.springer.com/article/10.1007/s10664-018-9663-0","Article"
"Studying logging practice in test code","Empirical Software Engineering","","27","4","10.1007/s10664-022-10139-0","Haonan ZhangYiming TangMaxime LamotheHeng LiWeiyi Shang","2022","http://link.springer.com/article/10.1007/s10664-022-10139-0","Article"
"Quality technique transfer: Manufacturing and software","Annals of Software Engineering","","10","1 - 4","10.1023/A:1018956204148","Graham A. King","2000","http://link.springer.com/article/10.1023/A%3A1018956204148","Article"
"Code coverage differences of Java bytecode and source code instrumentation tools","Software Quality Journal","","27","1","10.1007/s11219-017-9389-z","Ferenc HorváthTamás GergelyÁrpád BeszédesDávid TengeriGergő BaloghTibor Gyimóthy","2019","http://link.springer.com/article/10.1007/s11219-017-9389-z","Article"
"Cooperative verifier-based testing with CoVeriTest","International Journal on Software Tools for Technology Transfer","","23","3","10.1007/s10009-020-00587-8","Dirk BeyerMarie-Christine Jakobs","2021","http://link.springer.com/article/10.1007/s10009-020-00587-8","Article"
"The scenario coevolution paradigm: adaptive quality assurance for adaptive systems","International Journal on Software Tools for Technology Transfer","","22","4","10.1007/s10009-020-00560-5","Thomas GaborAndreas SedlmeierThomy PhanFabian RitzMarie KiermeierLenz BelznerBernhard KempterCornel KleinHorst SauerReiner SchmidJan WieghardtMarc ZellerClaudia Linnhoff-Popien","2020","http://link.springer.com/article/10.1007/s10009-020-00560-5","Article"
"Learning how to search: generating effective test cases through adaptive fitness function selection","Empirical Software Engineering","","27","2","10.1007/s10664-021-10048-8","Hussein AlmullaGregory Gay","2022","http://link.springer.com/article/10.1007/s10664-021-10048-8","Article"
"Prioritizing test cases with string distances","Automated Software Engineering","","19","1","10.1007/s10515-011-0093-0","Yves LedruAlexandre PetrenkoSergiy BorodayNadine Mandran","2012","http://link.springer.com/article/10.1007/s10515-011-0093-0","Article"
"Multi-device coverage testing of mobile applications","Software Quality Journal","","26","2","10.1007/s11219-017-9357-7","Sergiy Vilkomir","2018","http://link.springer.com/article/10.1007/s11219-017-9357-7","Article"
"A systemic framework for crowdsourced test report quality assessment","Empirical Software Engineering","","25","2","10.1007/s10664-019-09793-8","Xin ChenHe JiangXiaochen LiLiming NieDongjin YuTieke HeZhenyu Chen","2020","http://link.springer.com/article/10.1007/s10664-019-09793-8","Article"
"A mapping study on testing non-testable systems","Software Quality Journal","","26","4","10.1007/s11219-017-9392-4","Krishna PatelRobert M. Hierons","2018","http://link.springer.com/article/10.1007/s11219-017-9392-4","Article"
"Evolutionary testing of autonomous software agents","Autonomous Agents and Multi-Agent Systems","","25","2","10.1007/s10458-011-9175-4","Cu D. NguyenSimon MilesAnna PeriniPaolo TonellaMark HarmanMichael Luck","2012","http://link.springer.com/article/10.1007/s10458-011-9175-4","Article"
"Testing TLS using planning-based combinatorial methods and execution framework","Software Quality Journal","","27","2","10.1007/s11219-018-9412-z","Dimitris E. SimosJosip BozicBernhard GarnManuel LeithnerFeng DuanKristoffer KleineYu LeiFranz Wotawa","2019","http://link.springer.com/article/10.1007/s11219-018-9412-z","Article"
"Replication of empirical studies in software engineering research: a systematic mapping study","Empirical Software Engineering","","19","3","10.1007/s10664-012-9227-7","Fabio Q. B. da SilvaMarcos SuassunaA. César C. FrançaAlicia M. GrubbTatiana B. GouveiaCleviton V. F. MonteiroIgor Ebrahim dos Santos","2014","http://link.springer.com/article/10.1007/s10664-012-9227-7","Article"
"Test case prioritization techniques for model-based testing: a replicated study","Software Quality Journal","","26","4","10.1007/s11219-017-9398-y","João Felipe S. OuriquesEmanuela G. CartaxoPatrícia D. L. Machado","2018","http://link.springer.com/article/10.1007/s11219-017-9398-y","Article"
"Perceived diversity in software engineering: a systematic literature review","Empirical Software Engineering","","26","5","10.1007/s10664-021-09992-2","Gema Rodríguez-PérezReza NadriMeiyappan Nagappan","2021","http://link.springer.com/article/10.1007/s10664-021-09992-2","Article"
"Editorial","Software Quality Journal","","3","1","10.1007/BF00426944","Warren Harrison","1994","http://link.springer.com/article/10.1007/BF00426944","Article"
"A comprehensive study of pseudo-tested methods","Empirical Software Engineering","","24","3","10.1007/s10664-018-9653-2","Oscar Luis Vera-PérezBenjamin DanglotMartin MonperrusBenoit Baudry","2019","http://link.springer.com/article/10.1007/s10664-018-9653-2","Article"
"The central role of test automation in software quality assurance","Software Quality Journal","","25","3","10.1007/s11219-017-9383-5","Leonardo MarianiDan HaoRajesh SubramanyanHong Zhu","2017","http://link.springer.com/article/10.1007/s11219-017-9383-5","Article"
"Diversity of graph models and graph generators in mutation testing","International Journal on Software Tools for Technology Transfer","","22","1","10.1007/s10009-019-00530-6","Oszkár SemeráthRebeka FarkasGábor BergmannDániel Varró","2020","http://link.springer.com/article/10.1007/s10009-019-00530-6","Article"
"Dynamic Program Analysis Tools in GCC and CLANG Compilers","Programming and Computer Software","","46","4","10.1134/S0361768820010089","N. I. V’yukovaV. A. GalatenkoS. V. Samborskii","2020","http://link.springer.com/article/10.1134/S0361768820010089","Article"
"Search-based fairness testing for regression-based machine learning systems","Empirical Software Engineering","","27","3","10.1007/s10664-022-10116-7","Anjana PereraAldeida AletiChakkrit TantithamthavornJirayus JiarpakdeeBurak TurhanLisa KuhnKatie Walker","2022","http://link.springer.com/article/10.1007/s10664-022-10116-7","Article"
"Using a Reliability Growth Model to Control Software Inspection","Empirical Software Engineering","","7","3","10.1023/A:1016396232448","Stefan BifflWalter J. Gutjahr","2002","http://link.springer.com/article/10.1023/A%3A1016396232448","Article"
"Data sampling and kernel manifold discriminant alignment for mixed-project heterogeneous defect prediction","Software Quality Journal","","","","10.1007/s11219-022-09588-z","Jingwen NiuZhiqiang LiHaowen ChenXiwei DongXiao-Yuan Jing","2022","http://link.springer.com/article/10.1007/s11219-022-09588-z","Article"
"Discriminating features-based cost-sensitive approach for software defect prediction","Automated Software Engineering","","28","2","10.1007/s10515-021-00289-8","Aftab AliNaveed KhanMamun Abu-TairJoost NoppenSally McCleanIan McChesney","2021","http://link.springer.com/article/10.1007/s10515-021-00289-8","Article"
"A metrics suite for JUnit test code: a multiple case study on open source software","Journal of Software Engineering Research and Development","","2","1","10.1186/s40411-014-0014-6","Fadel ToureMourad BadriLuc Lamontagne","2014","http://link.springer.com/article/10.1186/s40411-014-0014-6","Article"
"Workshop report: The two-day workshop on Research Issues in the Intersection between Software Engineering and Artificial Intelligence (held in conjunction with ICSE-16)","Automated Software Engineering","","2","1","10.1007/BF00873410","K. A. KontogiannisPeter G. Selfridge","1995","http://link.springer.com/article/10.1007/BF00873410","Article"
"What am I testing and where? Comparing testing procedures based on lightweight requirements annotations","Empirical Software Engineering","","25","4","10.1007/s10664-020-09815-w","Florian PudlitzFlorian BrokhausenAndreas Vogelsang","2020","http://link.springer.com/article/10.1007/s10664-020-09815-w","Article"
"E-APR: Mapping the effectiveness of automated program repair techniques","Empirical Software Engineering","","26","5","10.1007/s10664-021-09989-x","Aldeida AletiMatias Martinez","2021","http://link.springer.com/article/10.1007/s10664-021-09989-x","Article"
"Test them all, is it worth it? Assessing configuration sampling on the JHipster Web development stack","Empirical Software Engineering","","24","2","10.1007/s10664-018-9635-4","Axel HalinAlexandre NuttinckMathieu AcherXavier DevroeyGilles PerrouinBenoit Baudry","2019","http://link.springer.com/article/10.1007/s10664-018-9635-4","Article"
"Applying UML/MARTE on industrial projects: challenges, experiences, and guidelines","Software & Systems Modeling","","14","4","10.1007/s10270-014-0405-5","Muhammad Zohaib IqbalShaukat AliTao YueLionel Briand","2015","http://link.springer.com/article/10.1007/s10270-014-0405-5","Article"
"Systematic testing and formal verification to validate reactive programs","Software Quality Journal","","4","4","10.1007/BF00402649","Monika MüllerburgLeszek HolenderskiOlivier MaffeisAgathe MerceronMatthew Morley","1995","http://link.springer.com/article/10.1007/BF00402649","Article"
"A Preliminary Software Engineering Theory as Investigated by Published Experiments","Empirical Software Engineering","","6","2","10.1023/A:1011489321999","Andreas Zendler","2001","http://link.springer.com/article/10.1023/A%3A1011489321999","Article"
"Testing concurrent user behavior of synchronous web applications with Petri nets","Software & Systems Modeling","","18","2","10.1007/s10270-018-0655-8","Jeff OffuttSunitha Thummala","2019","http://link.springer.com/article/10.1007/s10270-018-0655-8","Article"
"Software requirements and acceptance testing","Annals of Software Engineering","","3","1","10.1023/A:1018938021528","Pei HsiaDavid KungChris Sell","1997","http://link.springer.com/article/10.1023/A%3A1018938021528","Article"
"Component architecture of model-based testing environment","Programming and Computer Software","","36","5","10.1134/S036176881005004X","V. V. Kuliamin","2010","http://link.springer.com/article/10.1134/S036176881005004X","Article"
"Test case prioritization: a systematic mapping study","Software Quality Journal","","21","3","10.1007/s11219-012-9181-z","Cagatay CatalDeepti Mishra","2013","http://link.springer.com/article/10.1007/s11219-012-9181-z","Article"
"Coverage-biased random exploration of large models and application to testing","International Journal on Software Tools for Technology Transfer","","14","1","10.1007/s10009-011-0190-1","Alain DeniseMarie-Claude GaudelSandrine-Dominique GouraudRichard LassaigneJohan OudinetSylvain Peyronnet","2012","http://link.springer.com/article/10.1007/s10009-011-0190-1","Article"
"Similarity-based prioritization of test case automation","Software Quality Journal","","26","4","10.1007/s11219-017-9401-7","Daniel FlemströmPasqualina PotenaDaniel SundmarkWasif AfzalMarkus Bohlin","2018","http://link.springer.com/article/10.1007/s11219-017-9401-7","Article"
"Testing real-time systems using genetic algorithms","Software Quality Journal","","6","2","10.1023/A:1018551716639","Joachim WegenerHarmen SthamerBryan F. JonesDavid E. Eyres","1997","http://link.springer.com/article/10.1023/A%3A1018551716639","Article"
"Model-based testing of software and systems: recent advances and challenges","International Journal on Software Tools for Technology Transfer","","14","4","10.1007/s10009-012-0240-3","Alexandre PetrenkoAdenilso SimaoJosé Carlos Maldonado","2012","http://link.springer.com/article/10.1007/s10009-012-0240-3","Article"
"Assessing exception handling testing practices in open-source libraries","Empirical Software Engineering","","26","5","10.1007/s10664-021-09983-3","Luan P. LimaLincoln S. RochaCarla I. M. BezerraMatheus Paixao","2021","http://link.springer.com/article/10.1007/s10664-021-09983-3","Article"
"Modeling safety and airworthiness (RTCA DO-178B) information: conceptual model and UML profile","Software & Systems Modeling","","10","3","10.1007/s10270-010-0164-x","Gregory ZoughbiLionel BriandYvan Labiche","2011","http://link.springer.com/article/10.1007/s10270-010-0164-x","Article"
"Analysis of distance functions for similarity-based test suite reduction in the context of model-based testing","Software Quality Journal","","24","2","10.1007/s11219-014-9265-z","Ana Emília Victor Barbosa CoutinhoEmanuela Gadelha CartaxoPatrícia Duarte de Lima Machado","2016","http://link.springer.com/article/10.1007/s11219-014-9265-z","Article"
"Using search-based algorithms for Ajax event sequence generation during testing","Empirical Software Engineering","","16","1","10.1007/s10664-010-9149-1","Alessandro MarchettoPaolo Tonella","2011","http://link.springer.com/article/10.1007/s10664-010-9149-1","Article"
"Editorial for the Topical Issue “Evolution, the New AI Revolution”","SN Computer Science","","2","6","10.1007/s42979-021-00816-0","Anikó EkártAnna Isabel Esparcia-Alcázar","2021","http://link.springer.com/article/10.1007/s42979-021-00816-0","Article"
"Does choice of mutation tool matter?","Software Quality Journal","","25","3","10.1007/s11219-016-9317-7","Rahul GopinathIftekhar AhmedMohammad Amin AlipourCarlos JensenAlex Groce","2017","http://link.springer.com/article/10.1007/s11219-016-9317-7","Article"
"Discussing the applicability of a process core ontology and aspects of its internal quality","Software Quality Journal","","","","10.1007/s11219-022-09592-3","Pablo BeckerMaría Fernanda PapaGuido TebesLuis Olsina","2022","http://link.springer.com/article/10.1007/s11219-022-09592-3","Article"
"A pragmatic approach for hyper-parameter tuning in search-based test case generation","Empirical Software Engineering","","26","6","10.1007/s10664-021-10024-2","Shayan ZamaniHadi Hemmati","2021","http://link.springer.com/article/10.1007/s10664-021-10024-2","Article"
"Knowledge-Sharing Issues in Experimental Software Engineering","Empirical Software Engineering","","9","1 - 2","10.1023/B:EMSE.0000013516.80487.33","Forrest ShullManoel G. MendoncçaVictor BasiliJeffrey CarverJosé C. MaldonadoSandra FabbriGuilherme Horta TravassosMaria Cristina Ferreira","2004","http://link.springer.com/article/10.1023/B%3AEMSE.0000013516.80487.33","Article"
"Data-driven software design with Constraint Oriented Multi-variate Bandit Optimization (COMBO)","Empirical Software Engineering","","25","5","10.1007/s10664-020-09856-1","Rasmus RosMikael Hammar","2020","http://link.springer.com/article/10.1007/s10664-020-09856-1","Article"
"Availability and reliability modeling of VM migration as rejuvenation on a system under varying workload","Software Quality Journal","","28","1","10.1007/s11219-019-09474-1","Matheus TorquatoPaulo MacielMarco Vieira","2020","http://link.springer.com/article/10.1007/s11219-019-09474-1","Article"
"Privacy by designers: software developers’ privacy mindset","Empirical Software Engineering","","23","1","10.1007/s10664-017-9517-1","Irit HadarTomer HassonOshrat AyalonEran TochMichael BirnhackSofia ShermanArod Balissa","2018","http://link.springer.com/article/10.1007/s10664-017-9517-1","Article"
"Classifying generated white-box tests: an exploratory study","Software Quality Journal","","27","3","10.1007/s11219-019-09446-5","Dávid HonfiZoltán Micskei","2019","http://link.springer.com/article/10.1007/s11219-019-09446-5","Article"
"Can Offline Testing of Deep Neural Networks Replace Their Online Testing?","Empirical Software Engineering","","26","5","10.1007/s10664-021-09982-4","Fitash Ul HaqDonghwan ShinShiva NejatiLionel Briand","2021","http://link.springer.com/article/10.1007/s10664-021-09982-4","Article"
"The Relation of Test-Related Factors to Software Quality: A Case Study on Apache Systems","Empirical Software Engineering","","26","2","10.1007/s10664-020-09891-y","Fabiano PecorelliFabio PalombaAndrea De Lucia","2021","http://link.springer.com/article/10.1007/s10664-020-09891-y","Article"
"A partial oracle for uniformity statistics","Software Quality Journal","","27","4","10.1007/s11219-019-09459-0","Krishna PatelRobert M. Hierons","2019","http://link.springer.com/article/10.1007/s11219-019-09459-0","Article"
"Intelligent software-driven immersive environment for online political guiding based on brain-computer interface and autonomous systems","Automated Software Engineering","","29","1","10.1007/s10515-021-00300-2","Yingchun WangWeijun Hu","2022","http://link.springer.com/article/10.1007/s10515-021-00300-2","Article"
"Empirical assessment of generating adversarial configurations for software product lines","Empirical Software Engineering","","26","1","10.1007/s10664-020-09915-7","Paul TempleGilles PerrouinMathieu AcherBattista BiggioJean-Marc JézéquelFabio Roli","2021","http://link.springer.com/article/10.1007/s10664-020-09915-7","Article"
"Test workload measurement and reliability analysis for large commercial software systems","Annals of Software Engineering","","4","1","10.1023/A:1018923012867","Jeff TianJoe Palma","1997","http://link.springer.com/article/10.1023/A%3A1018923012867","Article"
"How to certify machine learning based safety-critical systems? A systematic literature review","Automated Software Engineering","","29","2","10.1007/s10515-022-00337-x","Florian TambonGabriel LabergeLe AnAmin NikanjamPaulina Stevia Nouwou MindomYann PequignotFoutse KhomhGiulio AntoniolEttore MerloFrançois Laviolette","2022","http://link.springer.com/article/10.1007/s10515-022-00337-x","Article"
"A public unified bug dataset for java and its assessment regarding metrics and bug prediction","Software Quality Journal","","28","4","10.1007/s11219-020-09515-0","Rudolf FerencZoltán TóthGergely LadányiIstván SiketTibor Gyimóthy","2020","http://link.springer.com/article/10.1007/s11219-020-09515-0","Article"
"Using test case patterns to estimate software development and quality management cost","Software Quality Journal","","17","3","10.1007/s11219-009-9076-9","Ayman A. IssaFaisal A. Abu RubFadi F. Thabata","2009","http://link.springer.com/article/10.1007/s11219-009-9076-9","Article"
"The many meanings of UML 2 Sequence Diagrams: a survey","Software & Systems Modeling","","10","4","10.1007/s10270-010-0157-9","Zoltán MicskeiHélène Waeselynck","2011","http://link.springer.com/article/10.1007/s10270-010-0157-9","Article"
"Selecting fault revealing mutants","Empirical Software Engineering","","25","1","10.1007/s10664-019-09778-7","Thierry Titcheu ChekamMike PapadakisTegawendé F. BissyandéYves Le TraonKoushik Sen","2020","http://link.springer.com/article/10.1007/s10664-019-09778-7","Article"
"Adversarial genetic programming for cyber security: a rising application domain where GP matters","Genetic Programming and Evolvable Machines","","21","1 - 2","10.1007/s10710-020-09389-y","Una-May O’ReillyJamal ToutouhMarcos PertierraDaniel Prado SanchezDennis GarciaAnthony Erb LuogoJonathan KellyErik Hemberg","2020","http://link.springer.com/article/10.1007/s10710-020-09389-y","Article"
"Evolutionary functional black-box testing in an industrial setting","Software Quality Journal","","21","2","10.1007/s11219-012-9174-y","Tanja E. J. VosFelix F. LindlarBenjamin WilmesAndreas WindischArthur I. BaarsPeter M. KruseHamilton GrossJoachim Wegener","2013","http://link.springer.com/article/10.1007/s11219-012-9174-y","Article"
"A case study on bypass testing of web applications","Empirical Software Engineering","","19","1","10.1007/s10664-012-9216-x","Jeff OffuttVasileios PapadimitriouUpsorn Praphamontripong","2014","http://link.springer.com/article/10.1007/s10664-012-9216-x","Article"
"Evaluation of alternative design choices for evolutionary mutation testing by means of automated configuration","Software Quality Journal","","30","1","10.1007/s11219-020-09530-1","Pedro Delgado-PérezFrancisco Chicano","2022","http://link.springer.com/article/10.1007/s11219-020-09530-1","Article"
"Practitioner’s view of the success factors for software outsourcing partnership formation: an empirical exploration","Empirical Software Engineering","","27","2","10.1007/s10664-021-10044-y","Sikandar AliIrshad Ahmed AbbasiElfatih Elmubarak MustafaFazli WahidJiwei Huang","2022","http://link.springer.com/article/10.1007/s10664-021-10044-y","Article"
"In This Issue","Software Quality Journal","","13","2","10.1007/s11219-005-6212-z","James Bieman","2005","http://link.springer.com/article/10.1007/s11219-005-6212-z","Article"
"Towards improving decision making and estimating the value of decisions in value-based software engineering: the VALUE framework","Software Quality Journal","","26","2","10.1007/s11219-017-9360-z","Emilia MendesPilar RodriguezVitor FreitasSimon BakerMohamed Amine Atoui","2018","http://link.springer.com/article/10.1007/s11219-017-9360-z","Article"
"An industrial case study of classifier ensembles for locating software defects","Software Quality Journal","","19","3","10.1007/s11219-010-9128-1","Ayşe Tosun MısırlıAyşe Başar BenerBurak Turhan","2011","http://link.springer.com/article/10.1007/s11219-010-9128-1","Article"
"Parameter reference immutability: formal definition, inference tool, and comparison","Automated Software Engineering","","16","1","10.1007/s10515-008-0043-7","Shay ArtziAdam KieżunJaime QuinonezMichael D. Ernst","2008","http://link.springer.com/article/10.1007/s10515-008-0043-7","Article"
"Special issue on trustworthy systems and software","Software Quality Journal","","27","3","10.1007/s11219-019-09450-9","Sudipto GhoshZhenyu Chen","2019","http://link.springer.com/article/10.1007/s11219-019-09450-9","Article"
"Testing models and model transformations using classifying terms","Software & Systems Modeling","","17","3","10.1007/s10270-016-0568-3","Frank HilkenMartin GogollaLoli BurgueñoAntonio Vallecillo","2018","http://link.springer.com/article/10.1007/s10270-016-0568-3","Article"
"In this issue","Software Quality Journal","","17","3","10.1007/s11219-009-9078-7","Rachel Harrison","2009","http://link.springer.com/article/10.1007/s11219-009-9078-7","Article"
"Testing variability-intensive systems using automated analysis: an application to Android","Software Quality Journal","","24","2","10.1007/s11219-014-9258-y","José A. GalindoHamilton TurnerDavid BenavidesJules White","2016","http://link.springer.com/article/10.1007/s11219-014-9258-y","Article"
"Big Data and software engineering: prospects for mutual enrichment","Iran Journal of Computer Science","","1","1","10.1007/s42044-017-0003-0","Timothy Arndt","2018","http://link.springer.com/article/10.1007/s42044-017-0003-0","Article"
"MATTER: A tool for generating end-to-end IoT test scripts","Software Quality Journal","","","","10.1007/s11219-021-09565-y","Dario OlianasMaurizio LeottaFilippo Ricca","2021","http://link.springer.com/article/10.1007/s11219-021-09565-y","Article"
"Trace anomalies as precursors of field failures: an empirical study","Empirical Software Engineering","","12","5","10.1007/s10664-007-9042-8","Sebastian ElbaumSatya KanduriAnneliese Andrews","2007","http://link.springer.com/article/10.1007/s10664-007-9042-8","Article"
"Complementary test selection criteria for model-based testing of security components","International Journal on Software Tools for Technology Transfer","","21","4","10.1007/s10009-018-0489-2","Julien BotellaJean-François CapuronFrédéric DadeauElizabeta FourneretBruno LegeardFlorence Schadle","2019","http://link.springer.com/article/10.1007/s10009-018-0489-2","Article"
"Performance Monitoring of Remote Websites Using Mobile Agents","Software Quality Journal","","12","2","10.1023/B:SQJO.0000024061.17122.91","Wen-Kui ChangMin-Hsiang Chuang","2004","http://link.springer.com/article/10.1023/B%3ASQJO.0000024061.17122.91","Article"
"Using human error information for error prevention","Empirical Software Engineering","","23","6","10.1007/s10664-018-9623-8","Wenhua HuJeffrey C. CarverVaibhav AnuGursimran S. WaliaGary L. Bradshaw","2018","http://link.springer.com/article/10.1007/s10664-018-9623-8","Article"
"Further Experiences with Scenarios and Checklists","Empirical Software Engineering","","3","1","10.1023/A:1009735805377","J. MillerM. WoodM. Roper","1998","http://link.springer.com/article/10.1023/A%3A1009735805377","Article"
"State-based models in regression test suite prioritization","Software Quality Journal","","25","3","10.1007/s11219-016-9330-x","Luay TahatBogdan KorelGeorge KoutsogiannakisNada Almasri","2017","http://link.springer.com/article/10.1007/s11219-016-9330-x","Article"
"AFID: an automated approach to collecting software faults","Automated Software Engineering","","17","3","10.1007/s10515-010-0068-6","Alex EdwardsSean TuckerBrian Demsky","2010","http://link.springer.com/article/10.1007/s10515-010-0068-6","Article"
"Learning by sampling: learning behavioral family models from software product lines","Empirical Software Engineering","","26","1","10.1007/s10664-020-09912-w","Carlos Diego Nascimento DamascenoMohammad Reza MousaviAdenilso da Silva Simao","2021","http://link.springer.com/article/10.1007/s10664-020-09912-w","Article"
"Challenges of software process and product quality improvement: catalyzing defect root-cause investigation by process enactment data analysis","Software Quality Journal","","26","2","10.1007/s11219-016-9334-6","Mehmet SöylemezAyca Tarhan","2018","http://link.springer.com/article/10.1007/s11219-016-9334-6","Article"
"Code and commit metrics of developer productivity: a study on team leaders perceptions","Empirical Software Engineering","","25","4","10.1007/s10664-020-09820-z","Edson OliveiraEduardo FernandesIgor SteinmacherMarco CristoTayana ConteAlessandro Garcia","2020","http://link.springer.com/article/10.1007/s10664-020-09820-z","Article"
"TCTracer: Establishing test-to-code traceability links using dynamic and static techniques","Empirical Software Engineering","","27","3","10.1007/s10664-021-10079-1","Robert WhiteJens Krinke","2022","http://link.springer.com/article/10.1007/s10664-021-10079-1","Article"
"Ontology-based metamorphic testing for chatbots","Software Quality Journal","","30","1","10.1007/s11219-020-09544-9","Josip Božić","2022","http://link.springer.com/article/10.1007/s11219-020-09544-9","Article"
"A model-driven engineering approach for supporting questionnaire-based gap analysis processes through application lifecycle management systems","Software Quality Journal","","28","2","10.1007/s11219-019-09479-w","Domenico AmalfitanoVincenzo De SimoneStefano ScalaAnna Rita Fasolino","2020","http://link.springer.com/article/10.1007/s11219-019-09479-w","Article"
"Testing the theory of relative defect proneness for closed-source software","Empirical Software Engineering","","15","6","10.1007/s10664-010-9132-x","Gunes KoruHongfang LiuDongsong ZhangKhaled El Emam","2010","http://link.springer.com/article/10.1007/s10664-010-9132-x","Article"
"Practical experiences in the usage of MIDAS in the logistics domain","International Journal on Software Tools for Technology Transfer","","19","3","10.1007/s10009-016-0430-5","M. A. BarcelonaL. García-BorgoñónG. López-Nicolás","2017","http://link.springer.com/article/10.1007/s10009-016-0430-5","Article"
"Search-based model transformation by example","Software & Systems Modeling","","11","2","10.1007/s10270-010-0175-7","Marouane KessentiniHouari SahraouiMounir BoukadoumOmar Ben Omar","2012","http://link.springer.com/article/10.1007/s10270-010-0175-7","Article"
"Replications of software engineering experiments","Empirical Software Engineering","","19","2","10.1007/s10664-013-9290-8","Jeffrey C. CarverNatalia JuristoMaria Teresa BaldassarreSira Vegas","2014","http://link.springer.com/article/10.1007/s10664-013-9290-8","Article"
"Open-Source Change Logs","Empirical Software Engineering","","9","3","10.1023/B:EMSE.0000027779.70556.d0","Kai ChenStephen R. SchachLiguo YuJeff OffuttGillian Z. Heller","2004","http://link.springer.com/article/10.1023/B%3AEMSE.0000027779.70556.d0","Article"
"Slicing concurrent Java programs using Indus and Kaveri","International Journal on Software Tools for Technology Transfer","","9","5 - 6","10.1007/s10009-007-0043-0","Venkatesh Prasad RanganathJohn Hatcliff","2007","http://link.springer.com/article/10.1007/s10009-007-0043-0","Article"
"Stretching the paradigm for software reliability assurance","Software Quality Journal","","3","1","10.1007/BF00426945","W. W. EverettM. Tortorella","1994","http://link.springer.com/article/10.1007/BF00426945","Article"
"The Impact of an Agile Methodology on the Well Being of Development Teams","Empirical Software Engineering","","11","1","10.1007/s10664-006-5968-5","Sharifah Syed-AbdullahMike HolcombeMarian Gheorge","2006","http://link.springer.com/article/10.1007/s10664-006-5968-5","Article"
"Quality Approaches in a Large Software House","Software Quality Journal","","8","1","10.1023/A:1008922801973","Haiwen LiMargaret RossGraham KingGeoff StaplesMin Jing","1999","http://link.springer.com/article/10.1023/A%3A1008922801973","Article"
"Diversity maximization speedup for localizing faults in single-fault and multi-fault programs","Automated Software Engineering","","23","1","10.1007/s10515-014-0165-z","Xin XiaLiang GongTien-Duy B. LeDavid LoLingxiao JiangHongyu Zhang","2016","http://link.springer.com/article/10.1007/s10515-014-0165-z","Article"
"CoVeriTest: interleaving value and predicate analysis for test-case generation","International Journal on Software Tools for Technology Transfer","","23","6","10.1007/s10009-020-00572-1","Marie-Christine Jakobs","2021","http://link.springer.com/article/10.1007/s10009-020-00572-1","Article"
"Applying design patterns in the search-based optimization of software product line architectures","Software & Systems Modeling","","18","2","10.1007/s10270-017-0614-9","Giovani GuizzoThelma Elita ColanziSilvia Regina Vergilio","2019","http://link.springer.com/article/10.1007/s10270-017-0614-9","Article"
"Memory and resource leak defects and their repairs in Java projects","Empirical Software Engineering","","25","1","10.1007/s10664-019-09731-8","Mohammadreza GhanavatiDiego CostaJanos SeboekDavid LoArtur Andrzejak","2020","http://link.springer.com/article/10.1007/s10664-019-09731-8","Article"
"Planning-based security testing of web applications with attack grammars","Software Quality Journal","","28","1","10.1007/s11219-019-09469-y","Josip BozicFranz Wotawa","2020","http://link.springer.com/article/10.1007/s11219-019-09469-y","Article"
"Correlation of critical success factors with success of software projects: an empirical investigation","Software Quality Journal","","27","1","10.1007/s11219-018-9419-5","Vahid GarousiAyça TarhanDietmar PfahlAhmet CoşkunçayOnur Demirörs","2019","http://link.springer.com/article/10.1007/s11219-018-9419-5","Article"
"The limited impact of individual developer data on software defect prediction","Empirical Software Engineering","","18","3","10.1007/s10664-011-9178-4","Robert M. BellThomas J. OstrandElaine J. Weyuker","2013","http://link.springer.com/article/10.1007/s10664-011-9178-4","Article"
"An empirical investigation of organic software product lines","Empirical Software Engineering","","26","3","10.1007/s10664-021-09940-0","Mikaela CashmanJustin FirestoneMyra B. CohenThammasak ThianniwetWei Niu","2021","http://link.springer.com/article/10.1007/s10664-021-09940-0","Article"
"A PSO-based model to increase the accuracy of software development effort estimation","Software Quality Journal","","21","3","10.1007/s11219-012-9183-x","Vahid Khatibi BardsiriDayang Norhayati Abang JawawiSiti Zaiton Mohd HashimElham Khatibi","2013","http://link.springer.com/article/10.1007/s11219-012-9183-x","Article"
"Effective fault localization of automotive Simulink models: achieving the trade-off between test oracle effort and fault localization accuracy","Empirical Software Engineering","","24","1","10.1007/s10664-018-9611-z","Bing LiuShiva NejatiLuciaLionel C. Briand","2019","http://link.springer.com/article/10.1007/s10664-018-9611-z","Article"
"Designing smart city mobile applications","Empirical Software Engineering","","24","6","10.1007/s10664-019-09723-8","Roselane Silva FariasRenata Maria de SouzaJohn D. McGregorEduardo Santana de Almeida","2019","http://link.springer.com/article/10.1007/s10664-019-09723-8","Article"
"Input validation analysis and testing","Empirical Software Engineering","","11","4","10.1007/s10664-006-9025-1","Jane Huffman HayesJeff Offutt","2006","http://link.springer.com/article/10.1007/s10664-006-9025-1","Article"
"A systematic test case selection methodology for product lines: results and insights from an industrial case study","Empirical Software Engineering","","21","4","10.1007/s10664-014-9345-5","Shuai WangShaukat AliArnaud GotliebMarius Liaaen","2016","http://link.springer.com/article/10.1007/s10664-014-9345-5","Article"
"Comparing the effectiveness of several modeling methods for fault prediction","Empirical Software Engineering","","15","3","10.1007/s10664-009-9111-2","Elaine J. WeyukerThomas J. OstrandRobert M. Bell","2010","http://link.springer.com/article/10.1007/s10664-009-9111-2","Article"
"A comparative study of many-objective evolutionary algorithms for the discovery of software architectures","Empirical Software Engineering","","21","6","10.1007/s10664-015-9399-z","Aurora RamírezJosé Raúl RomeroSebastián Ventura","2016","http://link.springer.com/article/10.1007/s10664-015-9399-z","Article"
"Preface","Annals of Software Engineering","","7","1 - 4","10.1023/A:1018930003723","","1999","http://link.springer.com/article/10.1023/A%3A1018930003723","Article"
"Introduction to the special issue on software maintenance and evolution research","Empirical Software Engineering","","20","5","10.1007/s10664-015-9398-0","Yann-Gaël GuéhéneucTom Mens","2015","http://link.springer.com/article/10.1007/s10664-015-9398-0","Article"
"Program verification and testing technologies","International Journal on Software Tools for Technology Transfer","","16","4","10.1007/s10009-014-0327-0","Tiziana MargariaZongyan QiuHongli Yang","2014","http://link.springer.com/article/10.1007/s10009-014-0327-0","Article"
"Ethical Issues in Empirical Software Engineering: The Limits of Policy","Empirical Software Engineering","","6","2","10.1023/A:1011442319273","Anneliese Amschler AndrewsArundeep S. Pradhan","2001","http://link.springer.com/article/10.1023/A%3A1011442319273","Article"
"Developments in automated verification techniques","International Journal on Software Tools for Technology Transfer","","16","2","10.1007/s10009-013-0297-7","Cormac FlanaganBarbara König","2014","http://link.springer.com/article/10.1007/s10009-013-0297-7","Article"
"In this issue","Software Quality Journal","","27","1","10.1007/s11219-019-09441-w","Rachel Harrison","2019","http://link.springer.com/article/10.1007/s11219-019-09441-w","Article"
"A defect prediction method for software versioning","Software Quality Journal","","16","4","10.1007/s11219-008-9053-8","Yomi KastroAyşe Basar Bener","2008","http://link.springer.com/article/10.1007/s11219-008-9053-8","Article"
"A family of experiments on test-driven development","Empirical Software Engineering","","26","3","10.1007/s10664-020-09895-8","Adrian SantosSira VegasOscar DiesteFernando UyaguariAyşe TosunDavide FucciBurak TurhanGiuseppe ScannielloSimone RomanoItir KaracMarco KuhrmannVladimir MandićRobert RamačDietmar PfahlChristian EngblomJarno Kyykka","2021","http://link.springer.com/article/10.1007/s10664-020-09895-8","Article"
"Automatic generation of built-in contract test drivers","Software & Systems Modeling","","13","3","10.1007/s10270-012-0282-8","Everton L. G. AlvesPatricia D. L. MachadoFranklin Ramalho","2014","http://link.springer.com/article/10.1007/s10270-012-0282-8","Article"
"Studying the co-evolution of production and test code in open source and industrial developer test processes through repository mining","Empirical Software Engineering","","16","3","10.1007/s10664-010-9143-7","Andy ZaidmanBart Van RompaeyArie van DeursenSerge Demeyer","2011","http://link.springer.com/article/10.1007/s10664-010-9143-7","Article"
"Search and similarity based selection of use case scenarios: An empirical study","Empirical Software Engineering","","23","1","10.1007/s10664-017-9500-x","Huihui ZhangShuai WangTao YueShaukat AliChao Liu","2018","http://link.springer.com/article/10.1007/s10664-017-9500-x","Article"
"Modeling variability in the video domain: language and experience report","Software Quality Journal","","27","1","10.1007/s11219-017-9400-8","Mauricio AlférezMathieu AcherJosé A. GalindoBenoit BaudryDavid Benavides","2019","http://link.springer.com/article/10.1007/s11219-017-9400-8","Article"
"Automated test reuse for highly configurable software","Empirical Software Engineering","","25","6","10.1007/s10664-020-09884-x","Stefan FischerGabriela Karoline MichelonRudolf RamlerLukas LinsbauerAlexander Egyed","2020","http://link.springer.com/article/10.1007/s10664-020-09884-x","Article"
"A study of the bi-objective next release problem","Empirical Software Engineering","","16","1","10.1007/s10664-010-9147-3","Juan J. DurilloYuanyuan ZhangEnrique AlbaMark HarmanAntonio J. Nebro","2011","http://link.springer.com/article/10.1007/s10664-010-9147-3","Article"
"Semi-automated metamodel/model co-evolution: a multi-level interactive approach","Software and Systems Modeling","","","","10.1007/s10270-022-00978-2","Wael KessentiniVahid Alizadeh","2022","http://link.springer.com/article/10.1007/s10270-022-00978-2","Article"
"Online Genetic Improvement on the java virtual machine with ECSELR","Genetic Programming and Evolvable Machines","","18","1","10.1007/s10710-016-9278-4","Kwaku Yeboah-AntwiBenoit Baudry","2017","http://link.springer.com/article/10.1007/s10710-016-9278-4","Article"
"The effects of continuous integration on software development: a systematic literature review","Empirical Software Engineering","","27","3","10.1007/s10664-021-10114-1","Eliezio SoaresGustavo SizilioJadson SantosDaniel Alencar da CostaUirá Kulesza","2022","http://link.springer.com/article/10.1007/s10664-021-10114-1","Article"
"DroidLeaks: a comprehensive database of resource leaks in Android apps","Empirical Software Engineering","","24","6","10.1007/s10664-019-09715-8","Yepang LiuJue WangLili WeiChang XuShing-Chi CheungTianyong WuJun YanJian Zhang","2019","http://link.springer.com/article/10.1007/s10664-019-09715-8","Article"
"A multi-objective test data generation approach for mutation testing of feature models","Journal of Software Engineering Research and Development","","4","1","10.1186/s40411-016-0030-9","Rui A. Matnei FilhoSilvia R. Vergilio","2016","http://link.springer.com/article/10.1186/s40411-016-0030-9","Article"
"Frameworks for quality software process: SEI Capability Maturity Model versus ISO 9000","Software Quality Journal","","5","1","10.1007/BF02420941","Hossein SaiedianLaura M. McClanahan","1996","http://link.springer.com/article/10.1007/BF02420941","Article"
"A systematic mapping study on best practices for domain-specific modeling","Software Quality Journal","","28","2","10.1007/s11219-019-09466-1","Gerald CzechMichael MoserJosef Pichler","2020","http://link.springer.com/article/10.1007/s11219-019-09466-1","Article"
"Scripted GUI testing of Android open-source apps: evolution of test code and fragility causes","Empirical Software Engineering","","24","5","10.1007/s10664-019-09722-9","Riccardo CoppolaMaurizio MorisioMarco TorchianoLuca Ardito","2019","http://link.springer.com/article/10.1007/s10664-019-09722-9","Article"
"Observing the clouds: a survey and taxonomy of cloud monitoring","Journal of Cloud Computing","","3","1","10.1186/s13677-014-0024-2","Jonathan Stuart WardAdam Barker","2014","http://link.springer.com/article/10.1186/s13677-014-0024-2","Article"
"Inferring extended finite state machine models from software executions","Empirical Software Engineering","","21","3","10.1007/s10664-015-9367-7","Neil WalkinshawRamsay TaylorJohn Derrick","2016","http://link.springer.com/article/10.1007/s10664-015-9367-7","Article"
"Incremental test data generation for database queries","Automated Software Engineering","","24","4","10.1007/s10515-017-0212-7","María José Suárez-CabalClaudio de la RivaJavier TuyaRaquel Blanco","2017","http://link.springer.com/article/10.1007/s10515-017-0212-7","Article"
"Prioritizing code-smells correction tasks using chemical reaction optimization","Software Quality Journal","","23","2","10.1007/s11219-014-9233-7","Ali OuniMarouane KessentiniSlim BechikhHouari Sahraoui","2015","http://link.springer.com/article/10.1007/s11219-014-9233-7","Article"
"Test Sequence Construction Using Minimum Information on the Tested System","Programming and Computer Software","","31","6","10.1007/s11086-005-0039-z","V. V. Kuliamin","2005","http://link.springer.com/article/10.1007/s11086-005-0039-z","Article"
"Synthesis of probabilistic models for quality-of-service software engineering","Automated Software Engineering","","25","4","10.1007/s10515-018-0235-8","Simos GerasimouRadu CalinescuGiordano Tamburrelli","2018","http://link.springer.com/article/10.1007/s10515-018-0235-8","Article"
"Testing self-healing cyber-physical systems under uncertainty with reinforcement learning: an empirical study","Empirical Software Engineering","","26","3","10.1007/s10664-021-09941-z","Tao MaShaukat AliTao Yue","2021","http://link.springer.com/article/10.1007/s10664-021-09941-z","Article"
"Profiling the operational behavior of OS device drivers","Empirical Software Engineering","","15","4","10.1007/s10664-009-9122-z","Constantin SârbuAndréas JohanssonNeeraj SuriNachiappan Nagappan","2010","http://link.springer.com/article/10.1007/s10664-009-9122-z","Article"
"Defect prediction from static code features: current results, limitations, new approaches","Automated Software Engineering","","17","4","10.1007/s10515-010-0069-5","Tim MenziesZach MiltonBurak TurhanBojan CukicYue JiangAyşe Bener","2010","http://link.springer.com/article/10.1007/s10515-010-0069-5","Article"
"Generating effective tests for concurrent programs via AI automated planning techniques","International Journal on Software Tools for Technology Transfer","","16","1","10.1007/s10009-013-0277-y","Niloofar RazaviAzadeh FarzanSheila A. McIlraith","2014","http://link.springer.com/article/10.1007/s10009-013-0277-y","Article"
"Defect prediction using deep learning with Network Portrait Divergence for software evolution","Empirical Software Engineering","","27","5","10.1007/s10664-022-10147-0","Vijay WalunjGharib GharibiRakan AlanaziYugyung Lee","2022","http://link.springer.com/article/10.1007/s10664-022-10147-0","Article"
"Standing on shoulders or feet? An extended study on the usage of the MSR data papers","Empirical Software Engineering","","25","5","10.1007/s10664-020-09834-7","Zoe KottiKonstantinos KravvaritisKonstantina DritsaDiomidis Spinellis","2020","http://link.springer.com/article/10.1007/s10664-020-09834-7","Article"
"The Automated Refinement of a Requirements Domain Theory","Automated Software Engineering","","8","2","10.1023/A:1008793523863","T.L. McCluskeyM.M. West","2001","http://link.springer.com/article/10.1023/A%3A1008793523863","Article"
"Evaluating improvements to a meta-heuristic search for constrained interaction testing","Empirical Software Engineering","","16","1","10.1007/s10664-010-9135-7","Brady J. GarvinMyra B. CohenMatthew B. Dwyer","2011","http://link.springer.com/article/10.1007/s10664-010-9135-7","Article"
"The impact of domain knowledge on the effectiveness of requirements engineering activities","Empirical Software Engineering","","22","1","10.1007/s10664-015-9416-2","Ali NiknafsDaniel Berry","2017","http://link.springer.com/article/10.1007/s10664-015-9416-2","Article"
"Evolutionary Fuzzing of Android OS Vendor System Services","Empirical Software Engineering","","24","6","10.1007/s10664-019-09725-6","Domenico CotroneoAntonio Ken IannilloRoberto Natella","2019","http://link.springer.com/article/10.1007/s10664-019-09725-6","Article"
"An empirical catalog of code smells for the presentation layer of Android apps","Empirical Software Engineering","","24","6","10.1007/s10664-019-09768-9","Suelen Goularte CarvalhoMaurício AnicheJúlio VeríssimoRafael S. DurelliMarco Aurélio Gerosa","2019","http://link.springer.com/article/10.1007/s10664-019-09768-9","Article"
"Challenges and industry practices for managing software variability in small and medium sized enterprises","Empirical Software Engineering","","19","4","10.1007/s10664-013-9253-0","Tuomas IhmeMinna PikkarainenSusanna TeppolaJukka KääriäinenOlivier Biot","2014","http://link.springer.com/article/10.1007/s10664-013-9253-0","Article"
"Test descriptions with ETSI TDL","Software Quality Journal","","27","2","10.1007/s11219-018-9423-9","Philip MakedonskiGusztáv AdamisMartti KäärikFinn KristoffersenMichele CarignaniAndreas UlrichJens Grabowski","2019","http://link.springer.com/article/10.1007/s11219-018-9423-9","Article"
"A survey of traceability in requirements engineering and model-driven development","Software & Systems Modeling","","9","4","10.1007/s10270-009-0145-0","Stefan WinklerJens von Pilgrim","2010","http://link.springer.com/article/10.1007/s10270-009-0145-0","Article"
"Understanding integration in a software development environment: Issues and illustrations","Journal of Systems Integration","","3","3 - 4","10.1007/BF01975518","Alan W. BrownKurt C. WallnauPeter H. Feiler","1993","http://link.springer.com/article/10.1007/BF01975518","Article"
"Multi-criteria test cases selection for model transformations","Automated Software Engineering","","27","1 - 2","10.1007/s10515-020-00271-w","Bader AlkhaziChaima AbidMarouane KessentiniDorian LeroyManuel Wimmer","2020","http://link.springer.com/article/10.1007/s10515-020-00271-w","Article"
"WCET analysis of modern processors using multi-criteria optimisation","Empirical Software Engineering","","16","1","10.1007/s10664-010-9133-9","Iain BateUsman Khan","2011","http://link.springer.com/article/10.1007/s10664-010-9133-9","Article"
"Test-Driven Development in scientific software: a survey","Software Quality Journal","","25","2","10.1007/s11219-015-9292-4","Aziz NanthaamornphongJeffrey C. Carver","2017","http://link.springer.com/article/10.1007/s11219-015-9292-4","Article"
"Productivity paradoxes revisited","Empirical Software Engineering","","22","2","10.1007/s10664-016-9453-5","Carlos Henrique C. Duarte","2017","http://link.springer.com/article/10.1007/s10664-016-9453-5","Article"
"Exhaustive generation of combinatorial objects by ECO","Acta Informatica","","40","8","10.1007/s00236-004-0139-x","Silvia BacchelliElena BarcucciElisabetta GrazziniElisa Pergola","2004","http://link.springer.com/article/10.1007/s00236-004-0139-x","Article"
"Testing adaptation policies for software components","Software Quality Journal","","28","3","10.1007/s11219-019-09487-w","Frédéric DadeauJean-Philippe GrosOlga Kouchnarenko","2020","http://link.springer.com/article/10.1007/s11219-019-09487-w","Article"
"Experiences using Tedeso: an extensible and interoperable model-based testing platform","Automated Software Engineering","","20","3","10.1007/s10515-012-0118-3","Roberto Silveira Silva FilhoWilliam M. HaslingChristof J. BudnikMonica McKenna","2013","http://link.springer.com/article/10.1007/s10515-012-0118-3","Article"
"Operational definition and automated inference of test-driven development with Zorro","Automated Software Engineering","","17","1","10.1007/s10515-009-0058-8","Hongbing KouPhilip M. JohnsonHakan Erdogmus","2009","http://link.springer.com/article/10.1007/s10515-009-0058-8","Article"
"Architecture analysis of enterprise systems modifiability: a metamodel for software change cost estimation","Software Quality Journal","","18","4","10.1007/s11219-010-9100-0","Robert LagerströmPontus JohnsonMathias Ekstedt","2010","http://link.springer.com/article/10.1007/s11219-010-9100-0","Article"
"On the use of commit-relevant mutants","Empirical Software Engineering","","27","5","10.1007/s10664-022-10138-1","Miloš OjdanićWei MaThomas LaurentThierry Titcheu ChekamAnthony VentresqueMike Papadakis","2022","http://link.springer.com/article/10.1007/s10664-022-10138-1","Article"
"Assessment and cross-product prediction of software product line quality: accounting for reuse across products, over multiple releases","Automated Software Engineering","","23","2","10.1007/s10515-014-0160-4","Thomas DevineKaterina Goseva-PopstojanovaSandeep KrishnanRobyn R. Lutz","2016","http://link.springer.com/article/10.1007/s10515-014-0160-4","Article"
"Finding fault with fault injection: an empirical exploration of distortion in fault injection experiments","Software Quality Journal","","24","1","10.1007/s11219-014-9261-3","Erik van der KouweCristiano GiuffridaAndrew S. Tanenbaum","2016","http://link.springer.com/article/10.1007/s11219-014-9261-3","Article"
"The Impact of Project Planning Team Experience on Software Project Cost Estimates","Empirical Software Engineering","","10","2","10.1007/s10664-004-6192-9","James McDonald","2005","http://link.springer.com/article/10.1007/s10664-004-6192-9","Article"
"Developers perception of peer code review in research software development","Empirical Software Engineering","","27","1","10.1007/s10664-021-10053-x","Nasir U. EistyJeffrey C. Carver","2021","http://link.springer.com/article/10.1007/s10664-021-10053-x","Article"
"CGT-FL: using cooperative game theory to effective fault localization in presence of coincidental correctness","Empirical Software Engineering","","25","5","10.1007/s10664-020-09859-y","Farid Feyzi","2020","http://link.springer.com/article/10.1007/s10664-020-09859-y","Article"
"On model-based analysis of organizational structures: an assessment of current modeling approaches and application of multi-level modeling in support of design and analysis of organizational structures","Software and Systems Modeling","","19","2","10.1007/s10270-019-00767-4","Sybren de KinderenMonika Kaczmarek-Heß","2020","http://link.springer.com/article/10.1007/s10270-019-00767-4","Article"
"Extending symbolic execution for automated testing of stored procedures","Software Quality Journal","","28","2","10.1007/s11219-019-09453-6","Maryam Abdul GhafoorMuhammad Suleman MahmoodJunaid Haroon Siddiqui","2020","http://link.springer.com/article/10.1007/s11219-019-09453-6","Article"
"On the long-term use of visual gui testing in industrial practice: a case study","Empirical Software Engineering","","22","6","10.1007/s10664-016-9497-6","Emil AlégrothRobert Feldt","2017","http://link.springer.com/article/10.1007/s10664-016-9497-6","Article"
"Exploring output-based coverage for testing PHP web applications","Automated Software Engineering","","26","1","10.1007/s10515-018-0246-5","Hung Viet NguyenHung Dang PhanChristian KästnerTien N. Nguyen","2019","http://link.springer.com/article/10.1007/s10515-018-0246-5","Article"
"Integrated formal verification of safety-critical software","International Journal on Software Tools for Technology Transfer","","20","4","10.1007/s10009-017-0475-0","Ning GeEric JennNicolas BretonYoann Fonteneau","2018","http://link.springer.com/article/10.1007/s10009-017-0475-0","Article"
"Quantifying structural attributes of system decompositions in 28 feature-oriented software product lines","Empirical Software Engineering","","21","4","10.1007/s10664-014-9336-6","Stefan SobernigSven ApelSergiy KolesnikovNorbert Siegmund","2016","http://link.springer.com/article/10.1007/s10664-014-9336-6","Article"
"Topic modeling in software engineering research","Empirical Software Engineering","","26","6","10.1007/s10664-021-10026-0","Camila Costa SilvaMatthias GalsterFabian Gilson","2021","http://link.springer.com/article/10.1007/s10664-021-10026-0","Article"
"The secret life of test smells - an empirical study on test smell evolution and maintenance","Empirical Software Engineering","","26","5","10.1007/s10664-021-09969-1","Dong Jae KimTse-Hsun (Peter) ChenJinqiu Yang","2021","http://link.springer.com/article/10.1007/s10664-021-09969-1","Article"
"Faults in deep reinforcement learning programs: a taxonomy and a detection approach","Automated Software Engineering","","29","1","10.1007/s10515-021-00313-x","Amin NikanjamMohammad Mehdi MorovatiFoutse KhomhHoussem Ben Braiek","2021","http://link.springer.com/article/10.1007/s10515-021-00313-x","Article"
"Wodel-Test: a model-based framework for language-independent mutation testing","Software and Systems Modeling","","20","3","10.1007/s10270-020-00827-0","Pablo Gómez-AbajoEsther GuerraJuan de LaraMercedes G. Merayo","2021","http://link.springer.com/article/10.1007/s10270-020-00827-0","Article"
"The reproducibility of programming-related issues in Stack Overflow questions","Empirical Software Engineering","","27","3","10.1007/s10664-021-10113-2","Saikat MondalMohammad Masudur RahmanChanchal K. RoyKevin Schneider","2022","http://link.springer.com/article/10.1007/s10664-021-10113-2","Article"
"Performance Analysis Integration in the Uintah Software Development Cycle","International Journal of Parallel Programming","","31","1","10.1023/A:1021786219770","J. Davison de St. GermainAlan MorrisSteven G. ParkerAllen D. MalonySameer Shende","2003","http://link.springer.com/article/10.1023/A%3A1021786219770","Article"
"Demystifying regular expression bugs","Empirical Software Engineering","","27","1","10.1007/s10664-021-10033-1","Peipei WangChris BrownJamie A. JenningsKathryn T. Stolee","2021","http://link.springer.com/article/10.1007/s10664-021-10033-1","Article"
"Developing and Maintaining an Object-Oriented Distributed Multimedia Information System","Annals of Software Engineering","","12","1","10.1023/A:1013358620279","Betty H.C. ChengGerald C. Gannod","2001","http://link.springer.com/article/10.1023/A%3A1013358620279","Article"
"Developing search strategies for detecting relevant experiments","Empirical Software Engineering","","14","5","10.1007/s10664-008-9091-7","Oscar DiesteAnna GrimánNatalia Juristo","2009","http://link.springer.com/article/10.1007/s10664-008-9091-7","Article"
"Code generation for a family of executable modelling notations","Software & Systems Modeling","","11","2","10.1007/s10270-010-0176-6","Adam ProutJoanne M. AtleeNancy A. DayPourya Shaker","2012","http://link.springer.com/article/10.1007/s10270-010-0176-6","Article"
"An industrial case study on the use of UML in software maintenance and its perceived benefits and hurdles","Empirical Software Engineering","","23","6","10.1007/s10664-018-9599-4","Ana M. Fernández-SáezMichel R. V. ChaudronMarcela Genero","2018","http://link.springer.com/article/10.1007/s10664-018-9599-4","Article"
"Semantic topic models for source code analysis","Empirical Software Engineering","","22","4","10.1007/s10664-016-9473-1","Anas MahmoudGary Bradshaw","2017","http://link.springer.com/article/10.1007/s10664-016-9473-1","Article"
"A replicated empirical study of a selection method for software reliability growth models","Empirical Software Engineering","","12","2","10.1007/s10664-006-9018-0","Carina Andersson","2006","http://link.springer.com/article/10.1007/s10664-006-9018-0","Article"
"Artificial Intelligence and Software Engineering: Breaking the Toy Mold","Automated Software Engineering","","4","3","10.1023/A:1008662625094","Christopher A. WeltyPeter G. Selfridge","1997","http://link.springer.com/article/10.1023/A%3A1008662625094","Article"
"Introduction of static quality analysis in small- and medium-sized software enterprises: experiences from technology transfer","Software Quality Journal","","22","3","10.1007/s11219-013-9217-z","Mario GleirscherDmitriy GolubitskiyMaximilian IrlbeckStefan Wagner","2014","http://link.springer.com/article/10.1007/s11219-013-9217-z","Article"
"Quality attribute trade-offs in the embedded systems industry: an exploratory case study","Software Quality Journal","","28","2","10.1007/s11219-019-09478-x","Darius SasParis Avgeriou","2020","http://link.springer.com/article/10.1007/s11219-019-09478-x","Article"
"Should I follow this fault localization tool’s output?","Empirical Software Engineering","","20","5","10.1007/s10664-014-9349-1","Tien-Duy B. LeDavid LoFerdian Thung","2015","http://link.springer.com/article/10.1007/s10664-014-9349-1","Article"
"An experimental evaluation of the importance of randomness in hill climbing searches applied to software engineering problems","Empirical Software Engineering","","19","5","10.1007/s10664-013-9294-4","Márcio de O. Barros","2014","http://link.springer.com/article/10.1007/s10664-013-9294-4","Article"
"AI lifecycle models need to be revised","Empirical Software Engineering","","26","5","10.1007/s10664-021-09993-1","Mark HaakmanLuís CruzHennie HuijgensArie van Deursen","2021","http://link.springer.com/article/10.1007/s10664-021-09993-1","Article"
"Interactive web interfaces modeling, simulation and analysis using Colored Petri Nets","Software & Systems Modeling","","18","1","10.1007/s10270-017-0593-x","Taffarel Brant-RibeiroRafael D. AraújoIgor E. MendonçaMichel S. SoaresRenan G. Cattelan","2019","http://link.springer.com/article/10.1007/s10270-017-0593-x","Article"
"A study examining relationships between micro patterns and security vulnerabilities","Software Quality Journal","","27","1","10.1007/s11219-017-9397-z","Kazi Zakia SultanaByron J. WilliamsTanmay Bhowmik","2019","http://link.springer.com/article/10.1007/s11219-017-9397-z","Article"
"Designing Interfaces for Classes of a Neural Network Graph Model","Programming and Computer Software","","46","7","10.1134/S036176882007004X","Yu. L. KarpovI. A. VolkovaA. A. VylitokL. E. KarpovYu. G. Smetanin","2020","http://link.springer.com/article/10.1134/S036176882007004X","Article"
"Data-driven and tool-supported elicitation of quality requirements in agile companies","Software Quality Journal","","28","3","10.1007/s11219-020-09509-y","Marc OriolSilverio Martínez-FernándezWoubshet BehutiyeCarles FarréRafał KozikPertti SeppänenAnna Maria VollmerPilar RodríguezXavier FranchSanja AaramaaAntonin AbhervéMichał ChoraśJari Partanen","2020","http://link.springer.com/article/10.1007/s11219-020-09509-y","Article"
"Gaining Confidence in Software Inspection Using a Bayesian Belief Model","Software Quality Journal","","9","1","10.1023/A:1016600602423","Trevor Cockram","2001","http://link.springer.com/article/10.1023/A%3A1016600602423","Article"
"An Investigation on the Occurrence of Service Requests in Commercial Software Applications","Empirical Software Engineering","","8","2","10.1023/A:1023014713253","Giancarlo SucciWitold PedryczMilorad StefanovicBarbara Russo","2003","http://link.springer.com/article/10.1023/A%3A1023014713253","Article"
"A transfer cost-sensitive boosting approach for cross-project defect prediction","Software Quality Journal","","25","1","10.1007/s11219-015-9287-1","Duksan RyuJong-In JangJongmoon Baik","2017","http://link.springer.com/article/10.1007/s11219-015-9287-1","Article"
"A generic interoperability testing framework and a systematic development process for automated interoperability testing","International Journal on Software Tools for Technology Transfer","","16","3","10.1007/s10009-013-0281-2","Thomas RingsPatrick PoglitschStephan SchulzLuca SerazioTheofanis Vassiliou-Gioles","2014","http://link.springer.com/article/10.1007/s10009-013-0281-2","Article"
"Uniform and scalable sampling of highly configurable systems","Empirical Software Engineering","","27","2","10.1007/s10664-021-10102-5","Ruben HeradioDavid Fernandez-AmorosJosé A. GalindoDavid BenavidesDon Batory","2022","http://link.springer.com/article/10.1007/s10664-021-10102-5","Article"
"The effect of Bellwether analysis on software vulnerability severity prediction models","Software Quality Journal","","28","4","10.1007/s11219-019-09490-1","Patrick Kwaku KudjoJinfu ChenSolomon MensahRichard AmankwahChristopher Kudjo","2020","http://link.springer.com/article/10.1007/s11219-019-09490-1","Article"
"Integrating Process and Project Management for Multi-Site Software Development","Annals of Software Engineering","","14","1 - 4","10.1023/A:1020553624256","Keith C.C. ChanLawrence M.L. Chung","2002","http://link.springer.com/article/10.1023/A%3A1020553624256","Article"
"Assessing Project Success Using Subjective Evaluation Factors","Software Quality Journal","","9","1","10.1023/A:1016673203332","Claes WohlinAnneliese Amschler Andrews","2001","http://link.springer.com/article/10.1023/A%3A1016673203332","Article"
"An Empirical Investigation of Relevant Changes and Automation Needs in Modern Code Review","Empirical Software Engineering","","25","6","10.1007/s10664-020-09870-3","Sebastiano PanichellaNik Zaugg","2020","http://link.springer.com/article/10.1007/s10664-020-09870-3","Article"
"Using linux device drivers for static verification tools benchmarking","Programming and Computer Software","","38","5","10.1134/S0361768812050039","M. U. MandrykinV. S. MutilinE. M. NovikovA. V. KhoroshilovP. E. Shved","2012","http://link.springer.com/article/10.1134/S0361768812050039","Article"
"Maintenance-related concerns for post-deployed Ethereum smart contract development: issues, techniques, and future challenges","Empirical Software Engineering","","26","6","10.1007/s10664-021-10018-0","Jiachi ChenXin XiaDavid LoJohn GrundyXiaohu Yang","2021","http://link.springer.com/article/10.1007/s10664-021-10018-0","Article"
"Turning event logs into process movies: animating what has really happened","Software & Systems Modeling","","15","3","10.1007/s10270-014-0432-2","Massimiliano de LeoniSuriadi SuriadiArthur H. M. ter HofstedeWil M. P. van der Aalst","2016","http://link.springer.com/article/10.1007/s10270-014-0432-2","Article"
"Testing Software Requirements with Z and Statecharts Applied to an Embedded Control Systemt0t1","Software Quality Journal","","12","3","10.1023/B:SQJO.0000034710.86897.16","Hye Yeon KimFrederick T. Sheldon","2004","http://link.springer.com/article/10.1023/B%3ASQJO.0000034710.86897.16","Article"
"Survey on test data generation tools","International Journal on Software Tools for Technology Transfer","","16","6","10.1007/s10009-013-0272-3","Stefan J. GallerBernhard K. Aichernig","2014","http://link.springer.com/article/10.1007/s10009-013-0272-3","Article"
"A framework for testing first-order logic axioms in program verification","Software Quality Journal","","21","1","10.1007/s11219-011-9168-1","Ki Yung AhnEwen Denney","2013","http://link.springer.com/article/10.1007/s11219-011-9168-1","Article"
"Survey of reliability and availability prediction methods from the viewpoint of software architecture","Software & Systems Modeling","","7","1","10.1007/s10270-006-0040-x","Anne ImmonenEila Niemelä","2007","http://link.springer.com/article/10.1007/s10270-006-0040-x","Article"
"A taxonomy of tool-related issues affecting the adoption of model-driven engineering","Software & Systems Modeling","","16","2","10.1007/s10270-015-0487-8","Jon WhittleJohn HutchinsonMark RouncefieldHåkan BurdenRogardt Heldal","2017","http://link.springer.com/article/10.1007/s10270-015-0487-8","Article"
"A comprehensive study of code-removal patches in automated program repair","Empirical Software Engineering","","27","4","10.1007/s10664-021-10100-7","Davide GinelliMatias MartinezLeonardo MarianiMartin Monperrus","2022","http://link.springer.com/article/10.1007/s10664-021-10100-7","Article"
"Using Ensemble Learning Technique for Detecting Botnet on IoT","SN Computer Science","","2","3","10.1007/s42979-021-00585-w","Amirhossein Rezaei","2021","http://link.springer.com/article/10.1007/s42979-021-00585-w","Article"
"Genetic Algorithm-based Test Generation for Software Product Line with the Integration of Fault Localization Techniques","Empirical Software Engineering","","23","1","10.1007/s10664-016-9494-9","Xuelin LiW. Eric WongRuizhi GaoLinghuan HuShigeru Hosono","2018","http://link.springer.com/article/10.1007/s10664-016-9494-9","Article"
"Challenges and pitfalls on surveying evidence in the software engineering technical literature: an exploratory study with novices","Empirical Software Engineering","","23","3","10.1007/s10664-017-9556-7","Talita Vieira RibeiroJobson MassollarGuilherme Horta Travassos","2018","http://link.springer.com/article/10.1007/s10664-017-9556-7","Article"
"What will it take? A view on adoption of model-based methods in practice","Software & Systems Modeling","","11","4","10.1007/s10270-012-0261-0","Bran Selic","2012","http://link.springer.com/article/10.1007/s10270-012-0261-0","Article"
"Effective software fault localization using predicted execution results","Software Quality Journal","","25","1","10.1007/s11219-015-9295-1","Ruizhi GaoW. Eric WongZhenyu ChenYabin Wang","2017","http://link.springer.com/article/10.1007/s11219-015-9295-1","Article"
"An Architecture based on interactive optimization and machine learning applied to the next release problem","Automated Software Engineering","","24","3","10.1007/s10515-016-0200-3","Allysson Allex AraújoMatheus PaixaoItalo YeltsinAltino DantasJerffeson Souza","2017","http://link.springer.com/article/10.1007/s10515-016-0200-3","Article"
"Designing automotive embedded systems with adaptive genetic algorithms","Automated Software Engineering","","22","2","10.1007/s10515-014-0148-0","Aldeida Aleti","2015","http://link.springer.com/article/10.1007/s10515-014-0148-0","Article"
"A case study comparing defect profiles of a reused framework and of applications reusing it","Empirical Software Engineering","","14","2","10.1007/s10664-008-9081-9","Anita GuptaJingyue LiReidar ConradiHarald RønnebergEinar Landre","2009","http://link.springer.com/article/10.1007/s10664-008-9081-9","Article"
"Software quality analysis by combining multiple projects and learners","Software Quality Journal","","17","1","10.1007/s11219-008-9058-3","Taghi M. KhoshgoftaarPierre ReboursNaeem Seliya","2009","http://link.springer.com/article/10.1007/s11219-008-9058-3","Article"
"Dynamic constraint satisfaction problems over models","Software & Systems Modeling","","11","3","10.1007/s10270-010-0185-5","Ákos HorváthDániel Varró","2012","http://link.springer.com/article/10.1007/s10270-010-0185-5","Article"
"Does PageRank apply to service ranking in microservice regression testing?","Software Quality Journal","","","","10.1007/s11219-021-09579-6","Lizhe ChenJi WuHaiyan YangKui Zhang","2022","http://link.springer.com/article/10.1007/s11219-021-09579-6","Article"
"Thirteen years of SysML: a systematic mapping study","Software and Systems Modeling","","19","1","10.1007/s10270-019-00735-y","Sabine WolnyAlexandra MazakChristine CarpellaVerena GeistManuel Wimmer","2020","http://link.springer.com/article/10.1007/s10270-019-00735-y","Article"
"Automatic test improvement with DSpot: a study with ten mature open-source projects","Empirical Software Engineering","","24","4","10.1007/s10664-019-09692-y","Benjamin DanglotOscar Luis Vera-PérezBenoit BaudryMartin Monperrus","2019","http://link.springer.com/article/10.1007/s10664-019-09692-y","Article"
"Quality characteristics and measures for human–computer interaction evaluation in ubiquitous systems","Software Quality Journal","","25","3","10.1007/s11219-016-9320-z","Rainara Maia CarvalhoRossana Maria de Castro AndradeKáthia Marçal de OliveiraIsmayle de Sousa SantosCarla Ilane Moreira Bezerra","2017","http://link.springer.com/article/10.1007/s11219-016-9320-z","Article"
"Analysis of service diagnosis improvement through increased monitoring granularity","Software Quality Journal","","25","2","10.1007/s11219-015-9286-2","Cuiting ChenHans-Gerhard GrossAndy Zaidman","2017","http://link.springer.com/article/10.1007/s11219-015-9286-2","Article"
"Search. Review. Repeat? An empirical study of threats to replicating SLR searches","Empirical Software Engineering","","25","1","10.1007/s10664-019-09763-0","Jacob KrügerChristian LausbergerIvonne von Nostitz-WallwitzGunter SaakeThomas Leich","2020","http://link.springer.com/article/10.1007/s10664-019-09763-0","Article"
"Correctness attraction: a study of stability of software behavior under runtime perturbation","Empirical Software Engineering","","23","4","10.1007/s10664-017-9571-8","Benjamin DanglotPhilippe PreuxBenoit BaudryMartin Monperrus","2018","http://link.springer.com/article/10.1007/s10664-017-9571-8","Article"
"How software engineering research aligns with design science: a review","Empirical Software Engineering","","25","4","10.1007/s10664-020-09818-7","Emelie EngströmMargaret-Anne StoreyPer RunesonMartin HöstMaria Teresa Baldassarre","2020","http://link.springer.com/article/10.1007/s10664-020-09818-7","Article"
"Automated product line test case selection: industrial case study and controlled experiment","Software & Systems Modeling","","16","2","10.1007/s10270-015-0462-4","Shuai WangShaukat AliArnaud GotliebMarius Liaaen","2017","http://link.springer.com/article/10.1007/s10270-015-0462-4","Article"
"Software Design Smell Detection: a systematic mapping study","Software Quality Journal","","27","3","10.1007/s11219-018-9424-8","Khalid AlkharabshehYania CrespoEsperanza MansoJosé A. Taboada","2019","http://link.springer.com/article/10.1007/s11219-018-9424-8","Article"
"Software mutational robustness","Genetic Programming and Evolvable Machines","","15","3","10.1007/s10710-013-9195-8","Eric SchulteZachary P. FryEthan FastWestley WeimerStephanie Forrest","2014","http://link.springer.com/article/10.1007/s10710-013-9195-8","Article"
"The virtual lands of Oz: testing an agribot in simulation","Empirical Software Engineering","","25","3","10.1007/s10664-020-09800-3","Clément RobertThierry SotiropoulosHélène WaeselynckJérémie GuiochetSimon Vernhes","2020","http://link.springer.com/article/10.1007/s10664-020-09800-3","Article"
"On the use of many quality attributes for software refactoring: a many-objective search-based software engineering approach","Empirical Software Engineering","","21","6","10.1007/s10664-015-9414-4","Mohamed Wiem MkaouerMarouane KessentiniSlim BechikhMel Ó CinnéideKalyanmoy Deb","2016","http://link.springer.com/article/10.1007/s10664-015-9414-4","Article"
"FixMiner: Mining relevant fix patterns for automated program repair","Empirical Software Engineering","","25","3","10.1007/s10664-019-09780-z","Anil KoyuncuKui LiuTegawendé F. BissyandéDongsun KimJacques KleinMartin MonperrusYves Le Traon","2020","http://link.springer.com/article/10.1007/s10664-019-09780-z","Article"
"Pandemic programming","Empirical Software Engineering","","25","6","10.1007/s10664-020-09875-y","Paul RalphSebastian BaltesGianisa AdisaputriRichard TorkarVladimir KovalenkoMarcos KalinowskiNicole NovielliShin YooXavier DevroeyXin TanMinghui ZhouBurak TurhanRashina HodaHideaki HataGregorio RoblesAmin Milani Fard","2020","http://link.springer.com/article/10.1007/s10664-020-09875-y","Article"
"Timing consistency checking for UML/MARTE behavioral models","Software Quality Journal","","24","3","10.1007/s11219-015-9290-6","Jinho ChoiEunkyoung JeeDoo-Hwan Bae","2016","http://link.springer.com/article/10.1007/s11219-015-9290-6","Article"
"Guest editorial to the theme section on AI-enhanced model-driven engineering","Software and Systems Modeling","","21","3","10.1007/s10270-022-00988-0","Lola BurgueñoJordi CabotManuel WimmerSteffen Zschaler","2022","http://link.springer.com/article/10.1007/s10270-022-00988-0","Article"
"On the use of calling structure information to improve fault prediction","Empirical Software Engineering","","17","4 - 5","10.1007/s10664-011-9165-9","Yonghee ShinRobert M BellThomas J OstrandElaine J Weyuker","2012","http://link.springer.com/article/10.1007/s10664-011-9165-9","Article"
"An approach and benchmark to detect behavioral changes of commits in continuous integration","Empirical Software Engineering","","25","4","10.1007/s10664-019-09794-7","Benjamin DanglotMartin MonperrusWalter RudametkinBenoit Baudry","2020","http://link.springer.com/article/10.1007/s10664-019-09794-7","Article"
"A robust multi-objective approach to balance severity and importance of refactoring opportunities","Empirical Software Engineering","","22","2","10.1007/s10664-016-9426-8","Mohamed Wiem MkaouerMarouane KessentiniMel Ó CinnéideShinpei HayashiKalyanmoy Deb","2017","http://link.springer.com/article/10.1007/s10664-016-9426-8","Article"
"Pairwise testing for software product lines: comparison of two approaches","Software Quality Journal","","20","3 - 4","10.1007/s11219-011-9160-9","Gilles PerrouinSebastian OsterSagar SenJacques KleinBenoit BaudryYves le Traon","2012","http://link.springer.com/article/10.1007/s11219-011-9160-9","Article"
"Studying eventual connectivity issues in Android apps","Empirical Software Engineering","","27","1","10.1007/s10664-021-10020-6","Camilo Escobar-VelásquezAlejandro Mazuera-RozoClaudia BedoyaMichael Osorio-RiañoMario Linares-VásquezGabriele Bavota","2021","http://link.springer.com/article/10.1007/s10664-021-10020-6","Article"
"Analysis of a many-objective optimization approach for identifying microservices from legacy systems","Empirical Software Engineering","","27","2","10.1007/s10664-021-10049-7","Wesley K. G. AssunçãoThelma Elita ColanziLuiz CarvalhoAlessandro GarciaJuliana Alves PereiraMaria Julia de LimaCarlos Lucena","2022","http://link.springer.com/article/10.1007/s10664-021-10049-7","Article"
"Naming the pain in requirements engineering","Empirical Software Engineering","","22","5","10.1007/s10664-016-9451-7","D. Méndez FernándezS. WagnerM. KalinowskiM. FeldererP. MafraA. VetròT. ConteM.-T. ChristianssonD. GreerC. LasseniusT. MännistöM. NayabiM. OivoB. PenzenstadlerD. PfahlR. Prikladnicki","2017","http://link.springer.com/article/10.1007/s10664-016-9451-7","Article"
"Linguistic antipatterns: what they are and how developers perceive them","Empirical Software Engineering","","21","1","10.1007/s10664-014-9350-8","Venera ArnaoudovaMassimiliano Di PentaGiuliano Antoniol","2016","http://link.springer.com/article/10.1007/s10664-014-9350-8","Article"
"Using code reviews to automatically configure static analysis tools","Empirical Software Engineering","","27","1","10.1007/s10664-021-10076-4","Fiorella ZampettiSaghan MudbhariVenera ArnaoudovaMassimiliano Di PentaSebastiano PanichellaGiuliano Antoniol","2021","http://link.springer.com/article/10.1007/s10664-021-10076-4","Article"
"Bridging the model-to-code abstraction gap with fuzzy logic in model-based regression test selection","Software and Systems Modeling","","21","1","10.1007/s10270-021-00899-6","Walter CazzolaSudipto GhoshMohammed Al-RefaiGabriele Maurina","2022","http://link.springer.com/article/10.1007/s10270-021-00899-6","Article"
"Characteristics of multiple-component defects and architectural hotspots: a large system case study","Empirical Software Engineering","","16","5","10.1007/s10664-011-9155-y","Zude LiNazim H. MadhavjiSyed Shariyar MurtazaMechelle GittensAndriy V. MiranskyyDavid GodwinEnzo Cialini","2011","http://link.springer.com/article/10.1007/s10664-011-9155-y","Article"
"Discovering community patterns in open-source: a systematic approach and its evaluation","Empirical Software Engineering","","24","3","10.1007/s10664-018-9659-9","Damian A. TamburriFabio PalombaAlexander SerebrenikAndy Zaidman","2019","http://link.springer.com/article/10.1007/s10664-018-9659-9","Article"
"An efficient regression testing approach for PHP Web applications using test selection and reusable constraints","Software Quality Journal","","27","4","10.1007/s11219-019-09449-2","Ravi EdaHyunsook Do","2019","http://link.springer.com/article/10.1007/s11219-019-09449-2","Article"
"Evolving software system families in space and time with feature revisions","Empirical Software Engineering","","27","5","10.1007/s10664-021-10108-z","Gabriela Karoline MichelonDavid ObermannWesley K. G. AssunçãoLukas LinsbauerPaul GrünbacherStefan FischerRoberto E. Lopez-HerrejonAlexander Egyed","2022","http://link.springer.com/article/10.1007/s10664-021-10108-z","Article"
"Characteristics that affect preference of decision models for asset selection: an industrial questionnaire survey","Software Quality Journal","","28","4","10.1007/s11219-019-09489-8","Emil AlégrothTony GorschekKai PetersenMichael Mattsson","2020","http://link.springer.com/article/10.1007/s11219-019-09489-8","Article"
"Problems with SZZ and features: An empirical study of the state of practice of defect prediction data collection","Empirical Software Engineering","","27","2","10.1007/s10664-021-10092-4","Steffen HerboldAlexander TrautschFabian TrautschBenjamin Ledel","2022","http://link.springer.com/article/10.1007/s10664-021-10092-4","Article"
"Do too many cooks spoil the broth? Using the number of developers to enhance defect prediction models","Empirical Software Engineering","","13","5","10.1007/s10664-008-9082-8","Elaine J. WeyukerThomas J. OstrandRobert M. Bell","2008","http://link.springer.com/article/10.1007/s10664-008-9082-8","Article"
"Guest editorial to the special section of models 2019","Software and Systems Modeling","","20","6","10.1007/s10270-021-00939-1","Tao YueSilvia AbrahãoMan Zhang","2021","http://link.springer.com/article/10.1007/s10270-021-00939-1","Article"
"Special issue on program debugging","Software Quality Journal","","25","1","10.1007/s11219-017-9354-x","Sudipto GhoshJ. Jenny Li","2017","http://link.springer.com/article/10.1007/s11219-017-9354-x","Article"
"Multi-objective optimization algorithms applied to the class integration and test order problem","International Journal on Software Tools for Technology Transfer","","14","4","10.1007/s10009-012-0226-1","Silvia Regina VergilioAurora PozoJoão Carlos Garcia ÁriasRafael da Veiga CabralTiago Nobre","2012","http://link.springer.com/article/10.1007/s10009-012-0226-1","Article"
"Metric-based software reliability prediction approach and its application","Empirical Software Engineering","","22","4","10.1007/s10664-016-9425-9","Ying ShiMing LiSteven ArndtCarol Smidts","2017","http://link.springer.com/article/10.1007/s10664-016-9425-9","Article"
"Generation of refactoring algorithms by grammatical evolution","Empirical Software Engineering","","27","5","10.1007/s10664-022-10151-4","Thainá MarianiMarouane KessentiniSilvia Regina Vergilio","2022","http://link.springer.com/article/10.1007/s10664-022-10151-4","Article"
"Augmenting and structuring user queries to support efficient free-form code search","Empirical Software Engineering","","23","5","10.1007/s10664-017-9544-y","Raphael SirresTegawendé F. BissyandéDongsun KimDavid LoJacques KleinKisub KimYves Le Traon","2018","http://link.springer.com/article/10.1007/s10664-017-9544-y","Article"
"A cross-technology benchmark for incremental graph queries","Software and Systems Modeling","","21","2","10.1007/s10270-021-00927-5","Georg HinkelAntonio Garcia-DominguezRené SchöneArtur BoronatMassimo TisiThéo Le CalvarFrederic JouaultJózsef MartonTamás NyíriJános Benjamin AntalMárton ElekesGábor Szárnyas","2022","http://link.springer.com/article/10.1007/s10270-021-00927-5","Article"
"Open innovation using open source tools: a case study at Sony Mobile","Empirical Software Engineering","","23","1","10.1007/s10664-017-9511-7","Hussan MunirJohan LinåkerKrzysztof WnukPer RunesonBjörn Regnell","2018","http://link.springer.com/article/10.1007/s10664-017-9511-7","Article"
"An experimental investigation on the effects of context on source code identifiers splitting and expansion","Empirical Software Engineering","","19","6","10.1007/s10664-013-9260-1","Latifa GuerroujMassimiliano Di PentaYann-Gaël GuéhéneucGiuliano Antoniol","2014","http://link.springer.com/article/10.1007/s10664-013-9260-1","Article"
"Comparison of weighted grey relational analysis for software effort estimation","Software Quality Journal","","19","1","10.1007/s11219-010-9110-y","Chao-Jung HsuChin-Yu Huang","2011","http://link.springer.com/article/10.1007/s11219-010-9110-y","Article"
"Multi-objective reverse engineering of variability-safe feature models based on code dependencies of system variants","Empirical Software Engineering","","22","4","10.1007/s10664-016-9462-4","Wesley K. G. AssunçãoRoberto E. Lopez-HerrejonLukas LinsbauerSilvia R. VergilioAlexander Egyed","2017","http://link.springer.com/article/10.1007/s10664-016-9462-4","Article"
"Virtual machine placement quality estimation in cloud infrastructures using integer linear programming","Software Quality Journal","","27","2","10.1007/s11219-018-9420-z","Jorge LópezNatalia KushikDjamal Zeghlache","2019","http://link.springer.com/article/10.1007/s11219-018-9420-z","Article"
"Mining the use of higher-order functions:","Empirical Software Engineering","","25","6","10.1007/s10664-020-09842-7","Yisen XuFan WuXiangyang JiaLingbo LiJifeng Xuan","2020","http://link.springer.com/article/10.1007/s10664-020-09842-7","Article"
"Using machine learning to assist with the selection of security controls during security assessment","Empirical Software Engineering","","25","4","10.1007/s10664-020-09814-x","Seifeddine BettaiebSeung Yeob ShinMehrdad SabetzadehLionel C. BriandMichael GarceauAntoine Meyers","2020","http://link.springer.com/article/10.1007/s10664-020-09814-x","Article"
"Are vulnerabilities discovered and resolved like other defects?","Empirical Software Engineering","","23","3","10.1007/s10664-017-9541-1","Patrick J. MorrisonRahul PanditaXusheng XiaoRam ChillaregeLaurie Williams","2018","http://link.springer.com/article/10.1007/s10664-017-9541-1","Article"
"Similarity-based test case prioritization using ordered sequences of program entities","Software Quality Journal","","22","2","10.1007/s11219-013-9224-0","Chunrong FangZhenyu ChenKun WuZhihong Zhao","2014","http://link.springer.com/article/10.1007/s11219-013-9224-0","Article"
"Static test case prioritization using topic models","Empirical Software Engineering","","19","1","10.1007/s10664-012-9219-7","Stephen W. ThomasHadi HemmatiAhmed E. HassanDorothea Blostein","2014","http://link.springer.com/article/10.1007/s10664-012-9219-7","Article"
"Addressing problems with replicability and validity of repository mining studies through a smart data platform","Empirical Software Engineering","","23","2","10.1007/s10664-017-9537-x","Fabian TrautschSteffen HerboldPhilip MakedonskiJens Grabowski","2018","http://link.springer.com/article/10.1007/s10664-017-9537-x","Article"
"An empirically based terminology and taxonomy for global software engineering","Empirical Software Engineering","","19","1","10.1007/s10664-012-9217-9","Darja ŠmiteClaes WohlinZane GalviņaRafael Prikladnicki","2014","http://link.springer.com/article/10.1007/s10664-012-9217-9","Article"
"Guest editorial: special section on software analysis, evolution, and reengineering","Empirical Software Engineering","","25","2","10.1007/s10664-020-09812-z","Massimiliano Di PentaDavid C. Shepherd","2020","http://link.springer.com/article/10.1007/s10664-020-09812-z","Article"
"Inter-team communication in large-scale co-located software engineering: a case study","Empirical Software Engineering","","27","2","10.1007/s10664-021-10027-z","Elizabeth BjarnasonBaldvin Gislason BernLinda Svedberg","2022","http://link.springer.com/article/10.1007/s10664-021-10027-z","Article"
"Case studies synthesis: a thematic, cross-case, and narrative synthesis worked example","Empirical Software Engineering","","20","6","10.1007/s10664-014-9326-8","Daniela S. CruzesTore DybåPer RunesonMartin Höst","2015","http://link.springer.com/article/10.1007/s10664-014-9326-8","Article"
"Guest editorial for special section on success and failure in software engineering","Empirical Software Engineering","","22","5","10.1007/s10664-017-9505-5","Mika V. MäntyläMagne JørgensenPaul RalphHakan Erdogmus","2017","http://link.springer.com/article/10.1007/s10664-017-9505-5","Article"
"The fine art of user-centered software development","Software Quality Journal","","23","3","10.1007/s11219-014-9239-1","Bernhard PeischlMichaela FerkAndreas Holzinger","2015","http://link.springer.com/article/10.1007/s11219-014-9239-1","Article"
"What do developers search for on the web?","Empirical Software Engineering","","22","6","10.1007/s10664-017-9514-4","Xin XiaLingfeng BaoDavid LoPavneet Singh KochharAhmed E. HassanZhenchang Xing","2017","http://link.springer.com/article/10.1007/s10664-017-9514-4","Article"
"Automatic programming: The open issue?","Genetic Programming and Evolvable Machines","","21","1 - 2","10.1007/s10710-019-09364-2","Michael O’NeillLee Spector","2020","http://link.springer.com/article/10.1007/s10710-019-09364-2","Article"
"An empirical investigation on the relationship between design and architecture smells","Empirical Software Engineering","","25","5","10.1007/s10664-020-09847-2","Tushar SharmaParamvir SinghDiomidis Spinellis","2020","http://link.springer.com/article/10.1007/s10664-020-09847-2","Article"
"Do automated program repair techniques repair hard and important bugs?","Empirical Software Engineering","","23","5","10.1007/s10664-017-9550-0","Manish MotwaniSandhya SankaranarayananRené JustYuriy Brun","2018","http://link.springer.com/article/10.1007/s10664-017-9550-0","Article"
"On the use of design defect examples to detect model refactoring opportunities","Software Quality Journal","","24","4","10.1007/s11219-015-9271-9","Adnane GhannemGhizlane El BoussaidiMarouane Kessentini","2016","http://link.springer.com/article/10.1007/s11219-015-9271-9","Article"
"How do i refactor this? An empirical study on refactoring trends and topics in Stack Overflow","Empirical Software Engineering","","27","1","10.1007/s10664-021-10045-x","Anthony PerumaSteven SimmonsEman Abdullah AlOmarChristian D. NewmanMohamed Wiem MkaouerAli Ouni","2021","http://link.springer.com/article/10.1007/s10664-021-10045-x","Article"
"Open innovation in software engineering: a systematic mapping study","Empirical Software Engineering","","21","2","10.1007/s10664-015-9380-x","Hussan MunirKrzysztof WnukPer Runeson","2016","http://link.springer.com/article/10.1007/s10664-015-9380-x","Article"
"Lessons learned from developing mbeddr: a case study in language engineering with MPS","Software & Systems Modeling","","18","1","10.1007/s10270-016-0575-4","Markus VoelterBernd KolbTamás SzabóDaniel RatiuArie van Deursen","2019","http://link.springer.com/article/10.1007/s10270-016-0575-4","Article"
"Multi-view refactoring of class and activity diagrams using a multi-objective evolutionary algorithm","Software Quality Journal","","25","2","10.1007/s11219-015-9284-4","Usman MansoorMarouane KessentiniManuel WimmerKalyanmoy Deb","2017","http://link.springer.com/article/10.1007/s11219-015-9284-4","Article"
"Self-admitted technical debt practices: a comparison between industry and open-source","Empirical Software Engineering","","26","6","10.1007/s10664-021-10031-3","Fiorella ZampettiGianmarco FucciAlexander SerebrenikMassimiliano Di Penta","2021","http://link.springer.com/article/10.1007/s10664-021-10031-3","Article"
"Automated bug assignment: Ensemble-based machine learning in large scale industrial contexts","Empirical Software Engineering","","21","4","10.1007/s10664-015-9401-9","Leif JonssonMarkus BorgDavid BromanKristian SandahlSigrid EldhPer Runeson","2016","http://link.springer.com/article/10.1007/s10664-015-9401-9","Article"
"Generation of hazard relation diagrams: formalization and tool support","Software and Systems Modeling","","20","1","10.1007/s10270-020-00799-1","Bastian TenbergenThorsten Weyer","2021","http://link.springer.com/article/10.1007/s10270-020-00799-1","Article"
"Targeted data generation for application testing on databases","Programming and Computer Software","","38","6","10.1134/S0361768812060060","E. A. KostychevV. A. Omel’chenkoS. V. Zelenov","2012","http://link.springer.com/article/10.1134/S0361768812060060","Article"
"Principles of Built-In-Test for Run-Time-Testability in Component-Based Software Systems","Software Quality Journal","","10","2","10.1023/A:1020571806877","Jonathan VincentGraham KingPeter LayJohn Kinghorn","2002","http://link.springer.com/article/10.1023/A%3A1020571806877","Article"
"Understanding the gap between software process practices and actual practice in very small companies","Software Quality Journal","","24","3","10.1007/s11219-015-9282-6","Mary-Luz Sánchez-GordónRory V. O’Connor","2016","http://link.springer.com/article/10.1007/s11219-015-9282-6","Article"
"Green mining: a methodology of relating software change and configuration to power consumption","Empirical Software Engineering","","20","2","10.1007/s10664-013-9276-6","Abram Hindle","2015","http://link.springer.com/article/10.1007/s10664-013-9276-6","Article"
"Search-based detection of model level changes","Empirical Software Engineering","","22","2","10.1007/s10664-016-9442-8","Marouane KessentiniUsman MansoorManuel WimmerAli OuniKalyanmoy Deb","2017","http://link.springer.com/article/10.1007/s10664-016-9442-8","Article"
"Uncertainty representation in software models: a survey","Software and Systems Modeling","","20","4","10.1007/s10270-020-00842-1","Javier TroyaNathalie MorenoManuel F. BertoaAntonio Vallecillo","2021","http://link.springer.com/article/10.1007/s10270-020-00842-1","Article"
"Multi-objective code-smells detection using good and bad design examples","Software Quality Journal","","25","2","10.1007/s11219-016-9309-7","Usman MansoorMarouane KessentiniBruce R. MaximKalyanmoy Deb","2017","http://link.springer.com/article/10.1007/s11219-016-9309-7","Article"
"How developers engage with static analysis tools in different contexts","Empirical Software Engineering","","25","2","10.1007/s10664-019-09750-5","Carmine VassalloSebastiano PanichellaFabio PalombaSebastian ProkschHarald C. GallAndy Zaidman","2020","http://link.springer.com/article/10.1007/s10664-019-09750-5","Article"
"Using text clustering to predict defect resolution time: a conceptual replication and an evaluation of prediction accuracy","Empirical Software Engineering","","21","4","10.1007/s10664-015-9391-7","Saïd AssarMarkus BorgDietmar Pfahl","2016","http://link.springer.com/article/10.1007/s10664-015-9391-7","Article"
"Which process metrics can significantly improve defect prediction models? An empirical study","Software Quality Journal","","23","3","10.1007/s11219-014-9241-7","Lech MadeyskiMarian Jureczko","2015","http://link.springer.com/article/10.1007/s11219-014-9241-7","Article"
"An initial analysis of software engineers’ attitudes towards organizational change","Empirical Software Engineering","","22","4","10.1007/s10664-016-9482-0","Per LenbergLars Göran Wallgren TengbergRobert Feldt","2017","http://link.springer.com/article/10.1007/s10664-016-9482-0","Article"
"Event-driven temporal models for explanations - ETeMoX: explaining reinforcement learning","Software and Systems Modeling","","21","3","10.1007/s10270-021-00952-4","Juan Marcelo Parra-UllauriAntonio García-DomínguezNelly BencomoChanggang ZhengChen ZhenJuan Boubeta-PuigGuadalupe OrtizShufan Yang","2022","http://link.springer.com/article/10.1007/s10270-021-00952-4","Article"
"Another viewpoint on “evaluating web software reliability based on workload and failure data extracted from server logs”","Empirical Software Engineering","","14","4","10.1007/s10664-008-9084-6","Toan HuynhJames Miller","2009","http://link.springer.com/article/10.1007/s10664-008-9084-6","Article"
"An experimental scrutiny of visual design modelling: VCL up against UML+OCL","Empirical Software Engineering","","25","2","10.1007/s10664-019-09784-9","Nuno AmálioLionel BriandPierre Kelsen","2020","http://link.springer.com/article/10.1007/s10664-019-09784-9","Article"
"Aggregating Association Rules to Improve Change Recommendation","Empirical Software Engineering","","23","2","10.1007/s10664-017-9560-y","Thomas RolfsnesLeon MoonenStefano Di AlesioRazieh BehjatiDave Binkley","2018","http://link.springer.com/article/10.1007/s10664-017-9560-y","Article"
"What you like in design use to correct bad-smells","Software Quality Journal","","21","4","10.1007/s11219-012-9187-6","Marouane KessentiniRim MahaouachiKhaled Ghedira","2013","http://link.springer.com/article/10.1007/s11219-012-9187-6","Article"
"A comprehensive study of bloated dependencies in the Maven ecosystem","Empirical Software Engineering","","26","3","10.1007/s10664-020-09914-8","César Soto-ValeroNicolas HarrandMartin MonperrusBenoit Baudry","2021","http://link.springer.com/article/10.1007/s10664-020-09914-8","Article"
"Open-source software product line extraction processes: the ArgoUML-SPL and Phaser cases","Empirical Software Engineering","","27","4","10.1007/s10664-021-10104-3","Rodrigo André Ferreira MoreiraWesley K. G. AssunçãoJabier MartinezEduardo Figueiredo","2022","http://link.springer.com/article/10.1007/s10664-021-10104-3","Article"
"An empirical study on predictability of software maintainability using imbalanced data","Software Quality Journal","","28","4","10.1007/s11219-020-09525-y","Ruchika MalhotraKusum Lata","2020","http://link.springer.com/article/10.1007/s11219-020-09525-y","Article"
"Generating valid grammar-based test inputs by means of genetic programming and annotated grammars","Empirical Software Engineering","","22","2","10.1007/s10664-015-9422-4","Fitsum Meshesha KifetewRoberto TiellaPaolo Tonella","2017","http://link.springer.com/article/10.1007/s10664-015-9422-4","Article"
"Where were the repair ingredients for Defects4j bugs?","Empirical Software Engineering","","26","6","10.1007/s10664-021-10003-7","Deheng YangKui LiuDongsun KimAnil KoyuncuKisub KimHaoye TianYan LeiXiaoguang MaoJacques KleinTegawendé F. Bissyandé","2021","http://link.springer.com/article/10.1007/s10664-021-10003-7","Article"
"A survey on software aging and rejuvenation in the cloud","Software Quality Journal","","28","1","10.1007/s11219-019-09448-3","Roberto PietrantuonoStefano Russo","2020","http://link.springer.com/article/10.1007/s11219-019-09448-3","Article"
"Hierarchical availability analysis of multi-tiered Web applications","Software Quality Journal","","21","2","10.1007/s11219-012-9176-9","Jijun LuSwapna S. Gokhale","2013","http://link.springer.com/article/10.1007/s11219-012-9176-9","Article"
"An adaptive QoS-aware fault tolerance strategy for web services","Empirical Software Engineering","","15","4","10.1007/s10664-009-9126-8","Zibin ZhengMichael R. Lyu","2010","http://link.springer.com/article/10.1007/s10664-009-9126-8","Article"
"Static slicing of Use Case Maps requirements models","Software & Systems Modeling","","18","4","10.1007/s10270-018-0680-7","Taha BinalialhagJameleddine HassineDaniel Amyot","2019","http://link.springer.com/article/10.1007/s10270-018-0680-7","Article"
"An experimental search-based approach to cohesion metric evaluation","Empirical Software Engineering","","22","1","10.1007/s10664-016-9427-7","Mel Ó CinnéideIman Hemati MoghadamMark HarmanSteve CounsellLaurence Tratt","2017","http://link.springer.com/article/10.1007/s10664-016-9427-7","Article"
"A quantitative analysis of the unit verification perspective on fault distributions in complex software systems: an operational replication","Software Quality Journal","","24","4","10.1007/s11219-015-9273-7","Tihana Galinac GrbacPer RunesonDarko Huljenić","2016","http://link.springer.com/article/10.1007/s11219-015-9273-7","Article"
"Applying test case prioritization to software microbenchmarks","Empirical Software Engineering","","26","6","10.1007/s10664-021-10037-x","Christoph LaaberHarald C. GallPhilipp Leitner","2021","http://link.springer.com/article/10.1007/s10664-021-10037-x","Article"
"Big data in cybersecurity: a survey of applications and future trends","Journal of Reliable Intelligent Environments","","7","2","10.1007/s40860-020-00120-3","Mohammed M. Alani","2021","http://link.springer.com/article/10.1007/s40860-020-00120-3","Article"
"The next evolution of MDE: a seamless integration of machine learning into domain modeling","Software & Systems Modeling","","18","2","10.1007/s10270-017-0600-2","Thomas HartmannAssaad MoawadFrancois FouquetYves Le Traon","2019","http://link.springer.com/article/10.1007/s10270-017-0600-2","Article"
"How and why we end up with complex methods: a multi-language study","Empirical Software Engineering","","27","5","10.1007/s10664-022-10144-3","Mateus LopesAndre Hora","2022","http://link.springer.com/article/10.1007/s10664-022-10144-3","Article"
"A classification and systematic review of product line feature model defects","Software Quality Journal","","28","4","10.1007/s11219-020-09522-1","Megha BhushanArun NegiPiyush SamantShivani GoelAjay Kumar","2020","http://link.springer.com/article/10.1007/s11219-020-09522-1","Article"
"Breathing ontological knowledge into feature model synthesis: an empirical study","Empirical Software Engineering","","21","4","10.1007/s10664-014-9357-1","Guillaume BécanMathieu AcherBenoit BaudrySana Ben Nasr","2016","http://link.springer.com/article/10.1007/s10664-014-9357-1","Article"
"On the effectiveness of early life cycle defect prediction with Bayesian Nets","Empirical Software Engineering","","13","5","10.1007/s10664-008-9072-x","Norman FentonMartin NeilWilliam MarshPeter HeartyŁukasz RadlińskiPaul Krause","2008","http://link.springer.com/article/10.1007/s10664-008-9072-x","Article"
"Siamese: scalable and incremental code clone search via multiple code representations","Empirical Software Engineering","","24","4","10.1007/s10664-019-09697-7","Chaiyong RagkhitwetsagulJens Krinke","2019","http://link.springer.com/article/10.1007/s10664-019-09697-7","Article"
"Detecting and refactoring code smells in spreadsheet formulas","Empirical Software Engineering","","20","2","10.1007/s10664-013-9296-2","Felienne HermansMartin PinzgerArie van Deursen","2015","http://link.springer.com/article/10.1007/s10664-013-9296-2","Article"
"Measuring the impact of lexical and structural inconsistencies on developers’ cognitive load during bug localization","Empirical Software Engineering","","25","3","10.1007/s10664-019-09751-4","Sarah FakhouryDevjeet RoyYuzhan MaVenera ArnaoudovaOlusola Adesope","2020","http://link.springer.com/article/10.1007/s10664-019-09751-4","Article"
"The effectiveness of context-based change application on automatic program repair","Empirical Software Engineering","","25","1","10.1007/s10664-019-09770-1","Jindae KimJeongho KimEunseok LeeSunghun Kim","2020","http://link.springer.com/article/10.1007/s10664-019-09770-1","Article"
"Model extraction and test generation from JUnit test suites","Software Quality Journal","","26","4","10.1007/s11219-017-9399-x","Pablo Lamela SeijasSimon ThompsonMiguel Ángel Francisco","2018","http://link.springer.com/article/10.1007/s11219-017-9399-x","Article"
"An empirical investigation into merge conflicts and their effect on software quality","Empirical Software Engineering","","25","1","10.1007/s10664-019-09735-4","Caius BrindescuIftekhar AhmedCarlos JensenAnita Sarma","2020","http://link.springer.com/article/10.1007/s10664-019-09735-4","Article"
"AutoRELAX: automatically RELAXing a goal model to address uncertainty","Empirical Software Engineering","","19","5","10.1007/s10664-014-9305-0","Erik M. FredericksByron DeVriesBetty H. C. Cheng","2014","http://link.springer.com/article/10.1007/s10664-014-9305-0","Article"
"Software process improvement in small and medium software enterprises: a systematic review","Software Quality Journal","","16","2","10.1007/s11219-007-9038-z","Francisco J. PinoFélix GarcíaMario Piattini","2008","http://link.springer.com/article/10.1007/s11219-007-9038-z","Article"
"A comparison of code similarity analysers","Empirical Software Engineering","","23","4","10.1007/s10664-017-9564-7","Chaiyong RagkhitwetsagulJens KrinkeDavid Clark","2018","http://link.springer.com/article/10.1007/s10664-017-9564-7","Article"
"Variability testing in the wild: the Drupal case study","Software & Systems Modeling","","16","1","10.1007/s10270-015-0459-z","Ana B. SánchezSergio SeguraJosé A. ParejoAntonio Ruiz-Cortés","2017","http://link.springer.com/article/10.1007/s10270-015-0459-z","Article"
"Archetypal personalities of software engineers and their work preferences: a new perspective for empirical studies","Empirical Software Engineering","","21","4","10.1007/s10664-015-9395-3","Makrina Viola KostiRobert FeldtLefteris Angelis","2016","http://link.springer.com/article/10.1007/s10664-015-9395-3","Article"
"Entropy based software processes improvement","Software Quality Journal","","17","3","10.1007/s11219-008-9063-6","Jos J. M. TrienekensRob KustersDirk KriekPaul Siemons","2009","http://link.springer.com/article/10.1007/s11219-008-9063-6","Article"
"Actor’s social complexity: a proposal for managing the iStar model","Journal of Software Engineering Research and Development","","6","1","10.1186/s40411-018-0055-3","Fábio PenhaErica MirandaMárcia LucenaLeonardo LucenaFernanda AlencarCelso Sá Filho","2018","http://link.springer.com/article/10.1186/s40411-018-0055-3","Article"
"Training students in evidence-based software engineering and systematic reviews: a systematic review and empirical study","Empirical Software Engineering","","26","3","10.1007/s10664-021-09953-9","Sebastián PizardFernando AcerenzaXimena OteguiSilvana MorenoDiego VallespirBarbara Kitchenham","2021","http://link.springer.com/article/10.1007/s10664-021-09953-9","Article"
"The impact of context metrics on just-in-time defect prediction","Empirical Software Engineering","","25","1","10.1007/s10664-019-09736-3","Masanari KondoDaniel M. GermanOsamu MizunoEun-Hye Choi","2020","http://link.springer.com/article/10.1007/s10664-019-09736-3","Article"
"On the value of outlier elimination on software effort estimation research","Empirical Software Engineering","","18","4","10.1007/s10664-012-9207-y","Yeong-Seok SeoDoo-Hwan Bae","2013","http://link.springer.com/article/10.1007/s10664-012-9207-y","Article"
"Boosting crash-inducing change localization with rank-performance-based feature subset selection","Empirical Software Engineering","","25","3","10.1007/s10664-020-09802-1","Zhaoqiang GuoYanhui LiWanwangying MaYuming ZhouHongmin LuLin ChenBaowen Xu","2020","http://link.springer.com/article/10.1007/s10664-020-09802-1","Article"
"The significance of bug report elements","Empirical Software Engineering","","25","6","10.1007/s10664-020-09882-z","Mozhan SoltaniFelienne HermansThomas Bäck","2020","http://link.springer.com/article/10.1007/s10664-020-09882-z","Article"
"Identifying the implied: Findings from three differentiated replications on the use of security requirements templates","Empirical Software Engineering","","22","4","10.1007/s10664-016-9481-1","Maria RiazJason KingJohn SlankasLaurie WilliamsFabio MassacciChristian Quesada-LópezMarcelo Jenkins","2017","http://link.springer.com/article/10.1007/s10664-016-9481-1","Article"
"Formal synthesis of application and platform behaviors of embedded software systems","Software & Systems Modeling","","14","2","10.1007/s10270-013-0342-8","Jinhyun KimInhye KangJin-Young ChoiInsup LeeSungwon Kang","2015","http://link.springer.com/article/10.1007/s10270-013-0342-8","Article"
"An empirical study on quality of Android applications written in Kotlin language","Empirical Software Engineering","","24","6","10.1007/s10664-019-09727-4","Bruno Góis MateusMatias Martinez","2019","http://link.springer.com/article/10.1007/s10664-019-09727-4","Article"
"On the feasibility of automated prediction of bug and non-bug issues","Empirical Software Engineering","","25","6","10.1007/s10664-020-09885-w","Steffen HerboldAlexander TrautschFabian Trautsch","2020","http://link.springer.com/article/10.1007/s10664-020-09885-w","Article"
"Maximising the information gained from a study of static analysis technologies for concurrent software","Empirical Software Engineering","","12","6","10.1007/s10664-007-9044-6","Margaret A. WojcickiPaul Strooper","2007","http://link.springer.com/article/10.1007/s10664-007-9044-6","Article"
"Comparing the influence of using feature-oriented programming and conditional compilation on comprehending feature-oriented software","Empirical Software Engineering","","24","3","10.1007/s10664-018-9658-x","Alcemir Rodrigues SantosIvan do Carmo MachadoEduardo Santana de AlmeidaJanet SiegmundSven Apel","2019","http://link.springer.com/article/10.1007/s10664-018-9658-x","Article"
"Characterizing the evolution of statically-detectable performance issues of Android apps","Empirical Software Engineering","","25","4","10.1007/s10664-019-09798-3","Teerath DasMassimiliano Di PentaIvano Malavolta","2020","http://link.springer.com/article/10.1007/s10664-019-09798-3","Article"
"How bugs are born: a model to identify how bugs are introduced in software components","Empirical Software Engineering","","25","2","10.1007/s10664-019-09781-y","Gema Rodríguez-PérezGregorio RoblesAlexander SerebrenikAndy ZaidmanDaniel M. GermánJesus M. Gonzalez-Barahona","2020","http://link.springer.com/article/10.1007/s10664-019-09781-y","Article"
"Flair: efficient analysis of Android inter-component vulnerabilities in response to incremental changes","Empirical Software Engineering","","26","3","10.1007/s10664-020-09932-6","Hamid BagheriJianghao WangJarod AertsNegar GhorbaniSam Malek","2021","http://link.springer.com/article/10.1007/s10664-020-09932-6","Article"
"ChronoSphere: a graph-based EMF model repository for IT landscape models","Software and Systems Modeling","","18","6","10.1007/s10270-019-00725-0","Martin HaeuslerThomas TrojerJohannes KesslerMatthias FarwickEmmanuel NowakowskiRuth Breu","2019","http://link.springer.com/article/10.1007/s10270-019-00725-0","Article"
"FLEX-RCA: a lean-based method for root cause analysis in software process improvement","Software Quality Journal","","27","1","10.1007/s11219-018-9408-8","J. PernstålR. FeldtT. GorschekD. Florén","2019","http://link.springer.com/article/10.1007/s11219-018-9408-8","Article"
"Enjoy your observability: an industrial survey of microservice tracing and analysis","Empirical Software Engineering","","27","1","10.1007/s10664-021-10063-9","Bowen LiXin PengQilin XiangHanzhang WangTao XieJun SunXuanzhe Liu","2021","http://link.springer.com/article/10.1007/s10664-021-10063-9","Article"
"Software aging and rejuvenation in android: new models and metrics","Software Quality Journal","","28","1","10.1007/s11219-019-09475-0","Jianwen XiangCaisheng WengDongdong ZhaoArtur AndrzejakShengwu XiongLin LiJing Tian","2020","http://link.springer.com/article/10.1007/s11219-019-09475-0","Article"
"Advanced and efficient execution trace management for executable domain-specific modeling languages","Software & Systems Modeling","","18","1","10.1007/s10270-017-0598-5","Erwan BousseTanja MayerhoferBenoit CombemaleBenoit Baudry","2019","http://link.springer.com/article/10.1007/s10270-017-0598-5","Article"
"A Systematic Review on Software Architectures for IoT Systems and Future Direction to the Adoption of Microservices Architecture","SN Computer Science","","1","6","10.1007/s42979-020-00359-w","Abdul Razzaq","2020","http://link.springer.com/article/10.1007/s42979-020-00359-w","Article"
"Automatic Generation of Test Oracles from Component Based Software Architectures","Testing Software and Systems","","","","10.1007/978-3-030-31280-0_16","Maxime SamsonThomas Vergnaud","2019","http://link.springer.com/chapter/10.1007/978-3-030-31280-0_16","Chapter"
"Fault Tolerant Computing Systems in Germany","The Evolution of Fault-Tolerant Computing","","","","10.1007/978-3-7091-8871-2_17","Winfried Görke","1987","http://link.springer.com/chapter/10.1007/978-3-7091-8871-2_17","Chapter"
"Using Data Integration for Security Testing","Testing Software and Systems","","","","10.1007/978-3-319-67549-7_11","Sébastien SalvaLoukmen Regainia","2017","http://link.springer.com/chapter/10.1007/978-3-319-67549-7_11","Chapter"
"Cross Inference of Throughput Profiles Using Micro Kernel Network Method","Machine Learning for Networking","","","","10.1007/978-3-030-98978-1_4","Nageswara S. V. RaoAnees Al-NajjarNeena ImamZhengchun LiuRajkumar KettimuthuIan Foster","2022","http://link.springer.com/chapter/10.1007/978-3-030-98978-1_4","Chapter"
"Perspectives on Productivity and Delays in Large-Scale Agile Projects","Agile Processes in Software Engineering and Extreme Programming","","","","10.1007/978-3-642-38314-4_13","Deepika BadampudiSamuel A. FrickerAna M. Moreno","2013","http://link.springer.com/chapter/10.1007/978-3-642-38314-4_13","Chapter"
"Notes on Triangular Sets and Triangulation-Decomposition Algorithms II: Differential Systems","Symbolic and Numerical Scientific Computation","","","","10.1007/3-540-45084-X_2","Evelyne Hubert","2003","http://link.springer.com/chapter/10.1007/3-540-45084-X_2","Chapter"
"From Earthquake Detection to Traffic Surveillance – About Information and Communication Infrastructures for Smart Cities","System Analysis and Modeling: Theory and Practice","","","","10.1007/978-3-642-36757-1_8","Joachim FischerJens-Peter RedlichBjörn ScheuermannJochen SchillerMesut GünesKai NagelPeter WagnerMarkus ScheidgenAnatolij ZubowIngmar EveslageRobert SombrutzkiFelix Juraschek","2013","http://link.springer.com/chapter/10.1007/978-3-642-36757-1_8","Chapter"
"Customizing Traceability in a Software Development Process","Information Systems Development","","","","10.1007/0-387-28809-0_13","Patricio LetelierElena NavarroVíctor Anaya","2005","http://link.springer.com/chapter/10.1007/0-387-28809-0_13","Chapter"
"Experience Report on Using a Domain Model-Based Extractive Approach to Software Product Line Asset Development","Formal Foundations of Reuse and Domain Engineering","","","","10.1007/978-3-642-04211-9_14","Hyesun LeeHyunsik ChoiKyo C. KangDohyung KimZino Lee","2009","http://link.springer.com/chapter/10.1007/978-3-642-04211-9_14","Chapter"
"Randomness Tests: Theory and Practice","Fields of Logic and Computation III","","","","10.1007/978-3-030-48006-6_18","Alexander Shen","2020","http://link.springer.com/chapter/10.1007/978-3-030-48006-6_18","Chapter"
"VR Based Knowledge Transfer in Medical Technology and Techniques","Computational Science and Its Applications - ICCSA 2006","","","","10.1007/11751540_29","Wolfram SchoorRüdiger MeckeMartina Rehfeld","2006","http://link.springer.com/chapter/10.1007/11751540_29","Chapter"
"Defects, Scientific Computation and the Scientific Method","Uncertainty Quantification in Scientific Computing","","","","10.1007/978-3-642-32677-6_8","Les Hatton","2012","http://link.springer.com/chapter/10.1007/978-3-642-32677-6_8","Chapter"
"Using Process Mining in Real-Time to Reduce the Number of Faulty Products","Advances in Databases and Information Systems","","","","10.1007/978-3-030-28730-6_6","Zsuzsanna NagyAgnes Werner-StarkTibor Dulai","2019","http://link.springer.com/chapter/10.1007/978-3-030-28730-6_6","Chapter"
"The Model for Enhanced Variability Management Process in Software Product Line","Information Systems: Methods, Models, and Applications","","","","10.1007/978-3-642-38370-0_15","Olga SlabospitskayaAndrii Kolesnyk","2013","http://link.springer.com/chapter/10.1007/978-3-642-38370-0_15","Chapter"
"The Life Cycle of Test Cases in a CBR System","Advances in Case-Based Reasoning","","","","10.1007/3-540-44527-7_39","Mirjam MinorAlexandre Hanft","2000","http://link.springer.com/chapter/10.1007/3-540-44527-7_39","Chapter"
"How Do Teams of Novice Modelers Choose an Approach? An Iterated, Repeated Experiment in a First-Year Modeling Course","Computational Science – ICCS 2021","","","","10.1007/978-3-030-77980-1_50","Philippe J. GiabbanelliPiper J. Jackson","2021","http://link.springer.com/chapter/10.1007/978-3-030-77980-1_50","Chapter"
"Fast Skip Inter Coding Decision Algorithm for VVC","Digital Multimedia Communications","","","","10.1007/978-981-99-0856-1_27","Xiangkai HuYue LiWenbin Lin","2023","http://link.springer.com/chapter/10.1007/978-981-99-0856-1_27","Chapter"
